{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","components/models/urls.ts","components/models/nas.ts","components/models/HomeContext.tsx","components/pages/home/components/files/RenameDialog.tsx","components/models/MovingContext.tsx","components/pages/document/components/MoveDialog.tsx","components/pages/home/components/folders/ListFolderPanel.tsx","components/pages/home/components/files/UploadDialog.tsx","components/pages/home/JSONSchema/model/Schema.ts","components/pages/home/components/folders/NewFolderDialog.tsx","components/pages/home/components/documents/CreateDocumentDialog.tsx","components/pages/home/components/others/NasMenu.tsx","components/models/SystemContext.tsx","components/pages/home/components/files/utils.ts","components/pages/home/components/others/ComputerStatus.tsx","components/pages/home/components/documents/Editor.tsx","components/pages/home/components/files/FilesActions.tsx","components/pages/home/components/files/pdf/PDFViewer.tsx","components/pages/home/components/files/ListFilesPanel.tsx","components/pages/home/components/files/UploadFilesSideBar.tsx","components/pages/home/components/files/SearchField.tsx","components/pages/home/HomePage.tsx","components/pages/systemInfo/PercentageChart.tsx","components/pages/systemInfo/SystemInfoPage.tsx","components/models/DocumentContext.tsx","components/pages/document/components/Titlebar.tsx","components/pages/document/components/ToolsBar.tsx","components/pages/document/components/blots/DividerBlot.ts","components/pages/document/components/BodyEditor.tsx","components/pages/document/components/MenuBar.tsx","components/pages/document/DocumentEditor.tsx","serviceWorker.js","index.js","App.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","url","documentURL","Nas","constructor","menus","currentFolder","searchedFiles","errorMsg","moveFileTo","fileId","dest","a","Axios","patch","getContent","moveDocument","documentId","moveFolderTo","folderId","u","rename","newName","search","keyword","get","response","data","parents","undefined","uploadFile","files","isDir","onUpload","onFileUploaded","index","f","size","getUploadFileAndCreateFolder","getSingleUploadFile","formData","post","headers","onUploadProgress","progress","p","Math","round","loaded","total","console","log","alert","toString","deleteFile","showAlert","window","confirm","delete","deleteFolder","createNewFolder","name","parent","res","folders","push","renameFolder","findIndex","renameDocument","documents","getDocument","Promise","content","JSON","parse","createNewDocument","stringify","ops","updateDocument","deleteDocument","reject","this","file","FormData","append","path","webkitRelativePath","split","folder","HomePageProvider","Component","props","super","setUploadedFile","setState","uploadedFiles","selectDocument","document","selectedDocument","updateUploadInfo","uploadInfo","setUploadInfo","uploadFiles","fetch","isLoading","nas","state","update","setUploadedFiles","componentDidUpdate","oldProps","match","params","componentWillMount","render","HomePageContext","Provider","value","children","context","info","React","createContext","RenameDialog","useContext","useState","type","ext","selectedFile","filename","getDefaultName","setName","Dialog","open","fullWidth","DialogTitle","DialogContent","TextField","color","onChange","target","DialogActions","Button","onClick","onClose","MovingProvider","MovingContext","MoveDialog","currentFile","onMove","loading","setLoading","loadingFolder","setLoadingFolder","then","catch","err","Card","style","width","CardContent","IconButton","disabled","setTimeout","Collapse","in","mountOnEnter","unmountOnExit","LinearProgress","backgroundColor","List","padding","map","i","ListItem","key","button","ListItemIcon","ListItemText","primary","Divider","CardActions","disableSpacing","Tooltip","title","marginLeft","ListPanel","showMoveToDialog","setShowMoveToDialog","showRenameDialog","setShowRenameDialog","selectedFolder","setSelectedFolder","anchorEl","setAnchorEl","handleClose","overflow","overflowX","height","Grid","centered","Row","verticalAlign","Column","to","Message","error","MessageHeader","timeout","ListItemAvatar","Icon","location","href","secondary","moment","modified_at","format","ListItemSecondaryAction","currentTarget","Menu","keepMounted","Boolean","MenuItem","link","createElement","download_url","body","appendChild","click","removeChild","UploadDialog","onInputChange","l","length","Modal","Header","Content","multiple","webkitdirectory","marginTop","Segment","Progress","percent","attached","active","currentName","currentIndex","Actions","basic","setOpen","inverted","current","uploadedDataSize","totalDataSize","Widget","text","NewFolderDialog","folderName","setFolderName","setIsLoading","label","required","CreateDocumentDialog","setIsloading","NasMenus","openFilesUpload","setOpenFilesUpload","openFolderUpload","setOpenFolderUpload","openNewFolder","setOpenNewFolder","openEditor","setOpenEditor","vertical","SystemProvider","fetchSystemInfo","componentDidMount","systemInfo","SystemContext","formatBytes","bytes","decimals","dm","floor","parseFloat","pow","toFixed","ComputerStatus","disk","used","Editor","editor","setEditor","isChanged","ref","instance","defaultValue","getEditor","getContents","FilesActions","shadow","setSelectedDocument","margin","computer","mobile","variant","raised","CardActionArea","PDFViewer","pageNumber","setpageNumber","onLoadSuccess","pdf","numPages","Array","from","el","pdfjs","GlobalWorkerOptions","workerSrc","version","Player","require","imageExt","videoExt","pdfExt","audioExt","ListFilesPanel","previewAnchor","setPreviewAnchor","selectedFiles","setSelectedFiles","onHoverFile","setOnHoverFile","setselectedFile","showMultiMoveDialog","setShowMultiMoveDialog","imageSrc","setImageSrc","audioSrc","setaudioSrc","videoSrc","setVideoSrc","pdfSrc","setpdfSrc","isImage","filepath","includes","extname","isVideo","Toolbar","aria-label","TableContainer","Table","TableHead","TableRow","TableCell","Checkbox","checked","TableBody","hover","selected","indexOf","splice","cursor","onMouseOver","onMouseLeave","src","transcode_filepath","cover","isPdf","basename","v","Image","fluid","decodeURIComponent","poster","Popper","CardMedia","image","UploadFilesSideBar","overflowY","cpu","memory","filter","marginBottom","useStyles","makeStyles","theme","createStyles","popper","marginRight","maxHeight","position","borderRadius","shape","fade","palette","common","white","breakpoints","up","spacing","searchIcon","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchField","classes","setValue","className","CircularProgress","InputBase","placeholder","root","input","inputProps","onKeyDown","ClickAwayListener","onClickAway","Paper","createMuiTheme","main","flexGrow","menuButton","HomePage","show","setShow","ThemeProvider","AppBar","Hidden","mdUp","Typography","noWrap","Drawer","paddingTop","paddingBottom","smDown","implementation","tablet","PercentageChart","color2","minHeight","minWidth","dataKey","fill","isAnimationActive","SystemInfoPage","Container","columns","temperature","humidity","pressure","QuillDeltaToHtmlConverter","DocumentProvider","doc","currentDocument","saveDocument","newDocument","readFile","reader","FileReader","onload","result","readAsText","openFromLocal","getElementById","accept","addEventListener","converter","MarkdownToQuill","delta","convert","d","remove","saveToLocal","savingType","oepnFromLocal","DocumentContext","notchedOutline","border","fontWeight","background","fontSize","Titlebar","numChanges","setNumChanges","maxWidth","innerWidth","zIndex","placement","divider","borderLeft","withStyles","grouped","ToggleButtonGroup","ToolsBar","BlockEmbed","Quill","import","DividerBlot","blotName","tagName","register","BodyEditor","setNumberOfChanges","save","modules","toolbar","container","textTransform","menuItem","MenuBar","fileEl","setfileEl","textDecoration","getContentAnchorEl","anchorOrigin","horizontal","transformOrigin","parentMenuOpen","appbar","row","largeIcon","DocumentEditor","elevation","innerHeight","square","Snackbar","message","Backdrop","hostname","ReactDOM","catalogs","setShowMenu","exact","component","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da321e1e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 200;","export const systemURL = \"/system/\"\nexport const url = \"/api/folder/\"\nexport const fileURL = \"/api/file/\"\nexport const documentURL = \"/api/document/\"\nexport const searchFileURL = \"/api/file?search=\"\n// download folder\nexport const downloadURL = \"/api/download/\"","import Axios from \"axios\"\nimport { Folder, Parent, File as NasFile, Document as NasDocument } from './Folder';\n\nimport { url, documentURL, fileURL, searchFileURL } from \"./urls\"\nimport { DeltaStatic } from \"quill\";\nimport * as path from 'path';\n\n\n\ntype UploadProgressCallback = (index: number, progress: number) => void\n\n\nexport class Nas {\n    menus: Parent[]\n    currentFolder?: Folder\n    searchedFiles: NasFile[];\n    errorMsg?: string\n\n\n    constructor() {\n        this.menus = []\n        this.searchedFiles = [];\n    }\n\n    moveFileTo = async (fileId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`\n                await Axios.patch(url, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    moveDocument = async (documentId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${documentURL}${documentId}/`\n                await Axios.patch(url, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    moveFolderTo = async (folderId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let u = `${url}${folderId}/`\n                await Axios.patch(u, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Rename file\n     */\n    rename = async (fileId: number, newName: string) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`\n                await Axios.patch(url, { \"filename\": newName })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Search by keyword\n     * @param keyword Keyword\n     */\n    search = async (keyword: String) => {\n        try {\n            let url = `${searchFileURL}${keyword}`\n            let response = await Axios.get<NasFile[]>(url);\n            this.searchedFiles = response.data;\n        } catch (err) {\n            this.errorMsg = err\n        }\n    }\n\n    /**\n     * Get content by id\n     */\n    getContent = async (id?: number | string) => {\n        try {\n            let u = id ? `${url}${id}/` : url\n            let response = await Axios.get<Folder>(u)\n            const { data } = response\n            this.menus = data.parents\n            this.currentFolder = data\n            this.errorMsg = undefined\n        } catch (err) {\n            this.errorMsg = err\n            this.currentFolder = undefined\n        }\n    }\n\n\n    /**\n     * Upload file to server.\n     * If upload fail, will show alert dialog\n     * @param files: List of files\n     * @param onUpload: callback function\n     * @param isDir: Whether upload directory\n     */\n    uploadFile = async (files: File[], isDir: boolean, onUpload: (index: number, progress: number, current: number, total: number) => void, onFileUploaded: (file: File) => Promise<void>) => {\n        try {\n            let index = 0;\n            for (let f of files) {\n                if (this.currentFolder) {\n                    onUpload(index, 0, 0, f.size);\n\n                    let formData =\n                        isDir ?\n                            await this.getUploadFileAndCreateFolder(f) :\n                            this.getSingleUploadFile(f)\n\n                    await Axios.post<NasFile>(fileURL, formData,\n                        {\n                            headers: { 'Content-Type': 'multipart/form-data' },\n                            // eslint-disable-next-line no-loop-func\n                            onUploadProgress: (progress) => {\n                                let p = Math.round((progress.loaded * 100) / progress.total);\n                                onUpload(index, p, f.size * progress.loaded, progress.total)\n\n                            }\n\n                        })\n\n                    await this.getContent(this.currentFolder?.id)\n                    await onFileUploaded(f)\n\n                }\n                index += 1\n            }\n            onUpload(index, 100, 0, 0);\n        } catch (err) {\n            console.log(err)\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Only get the formdata but don't create folder\n     * @param file File\n     */\n    getSingleUploadFile(file: File): FormData | undefined {\n        if (this.currentFolder) {\n            let formData = new FormData()\n            formData.append(\"file\", file)\n            this.currentFolder.id && formData.append(\"parent\", this.currentFolder.id.toString())\n            return formData\n        }\n\n    }\n\n    /**\n     * Create folder for file. And then return the file\n     * For example file with path a/a.jpg will create a folder\n     * @param file Upload file\n     */\n    async getUploadFileAndCreateFolder(file: File): Promise<FormData | undefined> {\n        if (this.currentFolder) {\n            //@ts-ignore\n            let folders = path.dirname(file.webkitRelativePath).split(path.sep)\n            let folder: Folder | undefined;\n\n            for (let f of folders) {\n                let res = await Axios.post(url, { \"parent\": folder?.id ?? this.currentFolder.id ?? null, \"name\": f })\n                folder = res.data;\n\n            }\n\n            let formData = new FormData()\n\n            formData.append(\"file\", file)\n            console.log(\"parent\", folder)\n            folder && folder.id && formData.append(\"parent\", `${folder?.id}`)\n            return formData\n        }\n\n    }\n\n    /** \n     * Delete file by id\n     */\n    deleteFile = async (id: number, showAlert = true) => {\n        try {\n\n            let confirm = showAlert ? window.confirm(\"Are you sure you want to delete this file?\") : true\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${fileURL}${id}/`)\n                await this.getContent(this.currentFolder.id)\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Delete folder by id\n     */\n    deleteFolder = async (id: number) => {\n        try {\n            let confirm = window.confirm(\"Are you sure you want to delete this folder?\")\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${url}${id}/`)\n                await this.getContent(this.currentFolder.id)\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Create folder with name\n     * @param name\n     */\n    createNewFolder = async (name: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.post<Folder>(url, { name: name, parent: this.currentFolder.id ? this.currentFolder.id : null })\n            this.currentFolder.folders.push(res.data)\n        } else {\n            alert(\"Create new folder error: empty parent folder\")\n        }\n    }\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameFolder = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<Folder>(`${url}${id}/`, { \"name\": newName })\n            let index = this.currentFolder.folders.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.folders[index] = res.data\n            }\n        } else {\n            alert(\"Rename new folder error: empty parent folder\")\n        }\n    }\n\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameDocument = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { \"name\": newName })\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data\n            }\n        } else {\n            alert(\"Rename new document error\")\n        }\n    }\n\n    /**\n     * Get document from server.\n     * We need this function because we are getting abstract document object from server\n     * at begining(Which doesn't include content field).\n     * \n     * We will Call this function when user want to edit the file\n     */\n    getDocument = async (id: string | number): Promise<NasDocument> => {\n\n        let res = await Axios.get<NasDocument>(`${documentURL}${id}/`)\n        /// Need to parse the content into js object\n        return Promise.resolve({ ...res.data, content: JSON.parse(res.data.content) })\n\n    }\n\n    /**\n     * Create new document\n     * @param name: Name of the document\n     * @param data: EditorJS object\n     */\n    createNewDocument = async (name: string, data?: DeltaStatic, parent?: any) => {\n        let res = await Axios.post<NasDocument>(documentURL,\n            {\n                name: name, parent: this.currentFolder && this.currentFolder.id ? this.currentFolder.id : parent,\n                content: data ? JSON.stringify(data.ops) : undefined\n            })\n        this.currentFolder && this.currentFolder.documents.push(res.data)\n        return res.data\n    }\n\n    /**\n     * Update Document\n     * @param id: document's id\n     * @param data: EditorJS object\n     */\n    updateDocument = async (id: number, name: string, data: DeltaStatic) => {\n\n        let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { name, content: JSON.stringify(data?.ops) })\n        if (this.currentFolder) {\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data\n            }\n\n        }\n\n    }\n\n    /**\n     * Delete document by id\n     * \n     * @param id: document's id\n     */\n    deleteDocument = async (id: number) => {\n        if (this.currentFolder) {\n            let confirm = window.confirm(\"Do you want to delete this document?\")\n            if (confirm) {\n                let res = await Axios.delete<NasDocument>(`${documentURL}${id}/`)\n                await this.getContent(this.currentFolder.id)\n                return Promise.resolve(res.data)\n            } else {\n\n            }\n\n        } else {\n            alert(\"Create new folder error: empty parent folder\")\n            return Promise.reject()\n        }\n    }\n\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface HomePageContext {\n  nas: Nas;\n  selectedDocument?: NasDocument;\n  uploadInfo?: UploadInfo;\n  updateUploadInfo(info?: UploadInfo): void;\n  uploadFiles?: File[];\n  uploadedFiles: File[];\n  setUploadInfo(files?: File[]): void;\n  update(): void;\n  selectDocument(doc?: NasDocument): void;\n  setUploadedFiles(files: File[]): void;\n  isLoading: boolean;\n}\n\ninterface HomePageProps extends RouteComponentProps<RouterProps> {}\n\nexport class HomePageProvider extends Component<\n  HomePageProps,\n  HomePageContext\n> {\n  constructor(props: HomePageProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      selectDocument: this.selectDocument,\n      updateUploadInfo: this.updateUploadInfo,\n      setUploadInfo: this.setUploadInfo,\n      update: this.update,\n      uploadedFiles: [],\n      setUploadedFiles: this.setUploadedFile,\n      isLoading: false\n    };\n  }\n\n  setUploadedFile = (files: File[]) => {\n    this.setState({ uploadedFiles: files });\n  };\n\n  selectDocument = (document?: NasDocument) => {\n    this.setState({ selectedDocument: document });\n  };\n\n  updateUploadInfo = (uploadInfo?: UploadInfo) => {\n    this.setState({ uploadInfo });\n  };\n\n  setUploadInfo = (file: File[]) => {\n    this.setState({ uploadFiles: file });\n  };\n\n  async componentDidUpdate(oldProps: HomePageProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      await this.fetch(id);\n    }\n  }\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    await this.fetch(id);\n  }\n\n  fetch = async (id: any) => {\n    this.setState({ isLoading: true });\n    const { nas } = this.state;\n    await nas.getContent(id);\n    this.setState({ nas, isLoading: false });\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <HomePageContext.Provider value={this.state}>\n        {this.props.children}\n      </HomePageContext.Provider>\n    );\n  }\n}\n\nconst context: HomePageContext = {\n  nas: new Nas(),\n  uploadedFiles: [],\n  setUploadedFiles: (files: File[]) => {},\n  update: () => {},\n  selectDocument: () => {},\n  updateUploadInfo: (info: UploadInfo) => {},\n  setUploadInfo: (files: File[]) => {},\n  isLoading: false\n};\n\nexport const HomePageContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport * as path from \"path\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Button,\n  DialogActions\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  onClose(): void;\n  type: \"file\" | \"folder\" | \"document\";\n  selectedFile: NasFile | NasDocument | Folder;\n}\n\nexport default function RenameDialog(props: Props) {\n  const getDefaultName = () => {\n    switch (props.type) {\n      case \"file\":\n        let ext = path.extname((props.selectedFile as NasFile).filename);\n        return path.basename((props.selectedFile as NasFile).filename, ext);\n\n      case \"folder\":\n        return (props.selectedFile as Folder).name;\n\n      default:\n        return (props.selectedFile as NasDocument).name;\n    }\n  };\n\n  const { nas } = useContext(HomePageContext);\n\n  const [name, setName] = useState<string>(getDefaultName());\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>Rename</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          fullWidth\n          value={name}\n          onChange={e => {\n            setName(e.target.value);\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.onClose();\n            setName(\"\");\n          }}\n        >\n          cancel\n        </Button>\n        <Button\n          onClick={async () => {\n            if (name) {\n              switch (props.type) {\n                case \"file\":\n                  let ext = path.extname(\n                    (props.selectedFile as NasFile).filename\n                  );\n                  await nas.rename(props.selectedFile.id, `${name}${ext}`);\n                  break;\n                case \"folder\":\n                  await nas.renameFolder(props.selectedFile.id, name);\n                  break;\n                case \"document\":\n                  await nas.renameDocument(props.selectedFile.id, name);\n                  break;\n              }\n            }\n            props.onClose();\n          }}\n        >\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\n//@ts-ignore\n\ninterface MovingContext {\n  nas: Nas;\n  update(): void;\n}\n\ninterface MovingProps {}\n\nexport class MovingProvider extends Component<MovingProps, MovingContext> {\n  constructor(props: MovingProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      update: this.update\n    };\n  }\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <MovingContext.Provider value={this.state}>\n        {this.props.children}\n      </MovingContext.Provider>\n    );\n  }\n}\n\nconst context: MovingContext = {\n  nas: new Nas(),\n  update: () => {}\n};\n\nexport const MovingContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  CardActions,\n  IconButton,\n  CircularProgress,\n  Fade,\n  Collapse,\n  LinearProgress,\n  Tooltip,\n  Divider\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\n\nimport { Button } from \"semantic-ui-react\";\nimport { MovingContext } from \"../../../models/MovingContext\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../models/Folder\";\n\ninterface Props {\n  currentFile: Folder | NasFile | NasDocument;\n  onClose(): void;\n  onMove(file: Folder | NasFile | NasDocument, dest: Folder): Promise<void>;\n}\n\nexport default function MoveDialog(props: Props) {\n  const { nas, update } = useContext(MovingContext);\n  const { currentFile, onMove, onClose } = props;\n  const [loading, setLoading] = useState(false);\n  const [loadingFolder, setLoadingFolder] = useState(\n    nas.currentFolder === undefined\n  );\n\n  if (!nas.currentFolder) {\n    nas\n      .getContent(currentFile.parent as any)\n      .then(() => {\n        setLoadingFolder(false);\n      })\n      .catch(err => {\n        alert(`${err}`);\n        setLoadingFolder(false);\n      });\n  }\n\n  return (\n    <Card style={{ width: \"300px\" }}>\n      <CardContent>\n        <div>\n          <IconButton\n            disabled={nas.currentFolder?.parent === undefined}\n            onClick={async () => {\n              setLoadingFolder(true);\n              await nas.getContent(nas.currentFolder?.parent);\n              update();\n              setTimeout(() => {\n                setLoadingFolder(false);\n              }, 500);\n            }}\n          >\n            <ArrowBackIosIcon />\n          </IconButton>\n          {nas.currentFolder?.name ?? \"root\"}\n        </div>\n        <Collapse in={loadingFolder} mountOnEnter unmountOnExit>\n          <LinearProgress style={{ backgroundColor: \"#47bcff\" }} />\n        </Collapse>\n\n        <Collapse in={!loadingFolder} mountOnEnter unmountOnExit>\n          <List style={{ padding: 0 }}>\n            {nas.currentFolder?.folders?.map((f, i) => (\n              <ListItem\n                key={`folder-${i}`}\n                button\n                onClick={async () => {\n                  setLoadingFolder(true);\n                  await nas.getContent(f.id);\n                  update();\n                  setTimeout(() => {\n                    setLoadingFolder(false);\n                  }, 500);\n                }}\n              >\n                <ListItemIcon>\n                  <FolderIcon />\n                </ListItemIcon>\n                <ListItemText primary={f.name} />\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n        <Divider />\n      </CardContent>\n      <CardActions disableSpacing>\n        <Tooltip title=\"New Folder\">\n          <IconButton>\n            <CreateNewFolderIcon />\n          </IconButton>\n        </Tooltip>\n        <Button\n          loading={loading}\n          color=\"blue\"\n          style={{ marginLeft: \"auto\" }}\n          size=\"tiny\"\n          onClick={async () => {\n            if (currentFile && nas.currentFolder) {\n              try {\n                setLoading(true);\n                await onMove(currentFile, nas.currentFolder);\n                setTimeout(() => {\n                  setLoading(false);\n                  update();\n                  onClose();\n                  nas.currentFolder = undefined;\n                }, 400);\n              } catch (err) {\n                alert(\"Cannot move to this location\");\n                setLoading(false);\n              }\n            }\n          }}\n        >\n          Move Here\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Segment,\n  MessageHeader,\n  Message,\n  Icon,\n  Modal,\n  Image,\n  SemanticICONS,\n  Divider,\n  Label,\n  Button,\n  Popup,\n  Grid\n} from \"semantic-ui-react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  Collapse,\n  Dialog\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport Axios from \"axios\";\nimport \"video-react/dist/video-react.css\";\nimport { Folder, Document as NasDocument } from \"../../../../models/Folder\";\n\nimport { NavLink } from \"react-router-dom\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport RenameDialog from \"../files/RenameDialog\";\nimport { downloadURL } from \"../../../../models/urls\";\nimport MoveDialog from \"../../../document/components/MoveDialog\";\n\nexport default function ListPanel() {\n  const { nas, isLoading, update } = useContext(HomePageContext);\n  const [showMoveToDialog, setShowMoveToDialog] = useState(false);\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedFolder, setSelectedFolder] = useState<Folder | undefined>(\n    undefined\n  );\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      style={{\n        overflow: \"auto\",\n        overflowX: \"hidden\",\n        height: \"100%\",\n        color: \"blue\"\n      }}\n    >\n      <List>\n        <Grid centered>\n          <Grid.Row verticalAlign=\"middle\">\n            <Grid.Column width={5}>\n              {nas.currentFolder && nas.currentFolder.parent ? (\n                <NavLink to={`/home/${nas.currentFolder.parent}`}>\n                  <IconButton>\n                    <ArrowBackIosIcon />\n                  </IconButton>\n                </NavLink>\n              ) : (\n                <IconButton>\n                  <NavLink to={`/home`}>\n                    <ArrowBackIosIcon />\n                  </NavLink>{\" \"}\n                </IconButton>\n              )}\n            </Grid.Column>\n            <Grid.Column width={11}>\n              <div style={{ color: \"black\" }}>\n                {nas.currentFolder && nas.currentFolder.name}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        {nas.errorMsg && (\n          <Message error>\n            <MessageHeader>Network Error</MessageHeader>\n            <div>{nas.errorMsg.toString()}</div>\n          </Message>\n        )}\n        <Collapse in={!isLoading} timeout={300}>\n          {/*Render Folders*/}\n          {nas.currentFolder &&\n            nas.currentFolder.folders.map((f, i) => (\n              <ListItem button key={`folder-${f.id}`}>\n                <ListItemAvatar>\n                  <Icon name=\"folder\" size=\"large\" color=\"grey\"></Icon>\n                </ListItemAvatar>\n                <ListItemText\n                  onClick={() => {\n                    window.location.href = `#/home/${f.id}`;\n                  }}\n                  style={{ color: \"black\" }}\n                  primary={f.name}\n                  secondary={moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                />\n                {/** folder menu button */}\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={e => {\n                      handleClick(e);\n                      setSelectedFolder(f);\n                    }}\n                  >\n                    <MoreHorizIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n\n                {/** end folder menu button */}\n              </ListItem>\n            ))}\n        </Collapse>\n        {/*End Render Folders*/}\n      </List>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem\n          onClick={() => {\n            setShowRenameDialog(true);\n            handleClose();\n          }}\n        >\n          Rename\n        </MenuItem>\n        <MenuItem\n          onClick={async () => {\n            if (selectedFolder) {\n              let response = await Axios.post(\n                `${downloadURL}${selectedFolder.id}`\n              );\n\n              const link = document.createElement(\"a\");\n              link.href = `${response.data.download_url}`;\n              console.log(link.href);\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n            }\n          }}\n        >\n          Download Folder\n        </MenuItem>\n        <MenuItem\n          onClick={async () => {\n            if (selectedFolder) {\n              await nas.deleteFolder(selectedFolder.id);\n              handleClose();\n              update();\n              setSelectedFolder(undefined);\n            }\n          }}\n        >\n          Delete\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleClose();\n            setShowMoveToDialog(true);\n          }}\n        >\n          Move To\n        </MenuItem>\n      </Menu>\n\n      {selectedFolder && showRenameDialog && (\n        <RenameDialog\n          type=\"folder\"\n          selectedFile={selectedFolder}\n          open={showRenameDialog}\n          onClose={() => {\n            setSelectedFolder(undefined);\n            setShowRenameDialog(false);\n          }}\n        />\n      )}\n\n      {selectedFolder && showMoveToDialog && (\n        <Dialog\n          open={showMoveToDialog}\n          onClose={() => {\n            setShowMoveToDialog(false);\n            setSelectedFolder(undefined);\n          }}\n        >\n          <MoveDialog\n            currentFile={selectedFolder}\n            onClose={() => {\n              setShowMoveToDialog(false);\n              setSelectedFolder(undefined);\n            }}\n            onMove={async (file, dest) => {\n              if (file.id === dest.id) {\n                throw Error(\"Cannot move to this place\");\n              }\n              await nas.moveFolderTo(file.id, dest.id);\n              update();\n            }}\n          />\n        </Dialog>\n      )}\n    </div>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  isDir: boolean;\n}\n\nexport interface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n  uploadedDataSize: number;\n  totalDataSize: number;\n}\n\nexport default function UploadDialog(props: Props) {\n  const {\n    nas,\n    update,\n    uploadInfo,\n    setUploadInfo,\n    uploadFiles,\n    updateUploadInfo,\n    setUploadedFiles,\n    uploadedFiles\n  } = useContext(HomePageContext);\n\n  const onInputChange = e => {\n    let uploadFiles = e.target.files;\n    if (uploadFiles) {\n      let l: File[] = [];\n      for (var i = 0; i < uploadFiles.length; i++) {\n        l.push(uploadFiles[i]);\n      }\n\n      setUploadInfo(l);\n    }\n  };\n\n  return (\n    <Modal open={props.open}>\n      <Modal.Header>Select {props.isDir ? \"Folder\" : \"Files\"} </Modal.Header>\n      <Modal.Content>\n        <Grid.Row>\n          {props.isDir ? (\n            <input\n              type=\"file\"\n              multiple\n              webkitdirectory=\"\"\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          ) : (\n            <input\n              type=\"file\"\n              multiple\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          )}\n        </Grid.Row>\n        {uploadInfo && (\n          <Grid.Row style={{ marginTop: 20 }}>\n            <Segment>\n              <Progress\n                percent={uploadInfo.progress}\n                attached=\"top\"\n                color=\"green\"\n                active\n              />\n              {uploadInfo.currentName} {uploadInfo.currentIndex}/\n              {uploadInfo.total} --- {uploadInfo.progress} %\n              <Progress\n                percent={(uploadInfo.currentIndex / uploadInfo.total) * 100}\n                attached=\"bottom\"\n                color=\"blue\"\n                active\n              />\n            </Segment>\n          </Grid.Row>\n        )}\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> {uploadInfo ? \"Minimize\" : \"Close\"}\n        </Button>\n        <Button\n          disabled={uploadFiles === undefined}\n          color=\"green\"\n          loading={uploadInfo !== undefined}\n          inverted\n          onClick={async () => {\n            if (uploadFiles) {\n              await nas.uploadFile(\n                uploadFiles,\n                props.isDir,\n                (\n                  index: number,\n                  progress: number,\n                  current: number,\n                  total: number\n                ) => {\n                  updateUploadInfo({\n                    total: uploadFiles.length,\n                    currentIndex: index,\n                    currentName: uploadFiles[index]\n                      ? uploadFiles[index].name\n                      : \"Finished\",\n                    progress: progress,\n                    uploadedDataSize: current,\n                    totalDataSize: total\n                  });\n                },\n                async file => {\n                  uploadedFiles.push(file);\n                  // setUploadedFiles(uploadedFiles);\n                }\n              );\n              update();\n              setTimeout(() => {\n                props.setOpen(false);\n                setUploadInfo(undefined);\n                updateUploadInfo(undefined);\n              }, 300);\n            }\n          }}\n        >\n          <Icon name=\"checkmark\" /> Upload\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import { FieldIcon } from \"./Icon\";\nimport { FieldAction } from \"./Action\";\nimport { string } from \"prop-types\";\n\n\ninterface Extra {\n    default?: any;\n    help?: string;\n    related_model?: string;\n    choices?: Choice[]\n\n}\n\nexport enum Widget {\n    text = \"text\",\n    number = \"number\",\n    datetime = \"datetime\",\n    foreignkey = \"foreignkey\",\n    unknown = \"unknown\",\n    select = \"select\",\n    tomanyTable = \"tomany-table\"\n}\n\ninterface Validation {\n    length: Length\n\n}\n\nexport interface Choice {\n    label: string;\n    value: any;\n}\n\ninterface Length {\n    maximum?: number;\n    minimum?: number;\n}\n\nexport interface Schema {\n    label: string;\n    readonly: boolean;\n    /// Could be null\n    extra?: Extra;\n    /// Map's key\n    name: string;\n    /// If widget type is not defined in the enum, then\n    /// return widgetType.unknown\n    widget: Widget | string;\n    required: boolean;\n    /// could be null\n    validations?: Validation;\n    /// this is value will be displayed at screen if set,\n    /// else null\n    value?: any;\n    /// Set this value only if the field includes selection\n    choice?: Choice;\n    /// icon for the field\n    /// this will be set through the params of JSONForm widget\n    icon?: FieldIcon;\n    /// action for the field\n    /// this will be set through the params of JSONForm widget\n    action?: FieldAction;\n\n}\n\n\n\nexport class SchemaList {\n\n    schemaList: Schema[];\n\n    constructor(schemas: Schema[]) {\n        schemas.forEach(s => {\n            if (s.extra && s.extra.default) {\n                s.value = s.extra.default\n            }\n        })\n        this.schemaList = schemas;\n    }\n\n    merge(values: { [key: string]: any }) {\n        this.schemaList = this.schemaList.map((s) => {\n            if (values[s.name]) {\n                let value = values[s.name];\n                if (s.widget == Widget.select) {\n                    let choice: Choice | undefined = s.extra\n                        && s.extra.choices\n                        && s.extra.choices.find((c) => c.value === value)\n                    s.choice = choice;\n                } else if (s.widget == Widget.foreignkey) {\n                    let choice: Choice = value;\n                    s.choice = choice;\n                    s.value = value.value;\n                } else {\n                    s.value = value;\n                }\n            }\n            return s;\n        });\n    }\n\n    onSubmit(): { [key: string]: any } {\n        console.log(this.schemaList)\n        let maps: { [key: string]: any } = {};\n        this.schemaList.filter(s => !s.readonly && s.widget !== Widget.tomanyTable).forEach((s) => maps[s.name] = s.value);\n        console.log(maps)\n        return maps;\n\n    }\n\n}\n","import React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport { SchemaList, Schema, Widget } from \"../../JSONSchema/model/Schema\";\nimport { DialogContent } from \"@material-ui/core\";\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogTitle\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n}\n\ninterface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n}\n\nconst schema: Schema[] = [\n  {\n    name: \"name\",\n    label: \"Folder Name\",\n    readonly: false,\n    required: true,\n    widget: Widget.text\n  }\n];\n\nexport default function NewFolderDialog(props: Props) {\n  const { nas, update } = useContext(HomePageContext);\n  const [folderName, setFolderName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>New Folder</DialogTitle>\n      <DialogContent>\n        <TextField\n          onChange={e => {\n            setFolderName(e.target.value);\n          }}\n          value={folderName}\n          color=\"secondary\"\n          fullWidth\n          label=\"Folder Name\"\n          required\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> No\n        </Button>\n        <Button\n          basic\n          color=\"green\"\n          onClick={async () => {\n            setIsLoading(true);\n            await nas.createNewFolder(folderName);\n            update();\n            setIsLoading(false);\n            props.setOpen(false);\n          }}\n          loading={isLoading}\n        >\n          <Icon name=\"add\" /> Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function CreateDocumentDialog(props: Props) {\n  const [name, setName] = useState<string | undefined>();\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  return (\n    <Dialog open={props.open} onClose={() => props.setOpen(false)} fullWidth>\n      <DialogTitle>Document</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.setOpen(false);\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (name) {\n                await nas.createNewDocument(name, undefined);\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  Grid,\n  Breadcrumb,\n  Segment,\n  Card,\n  MenuItem as MMenuItem\n} from \"semantic-ui-react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport UploadDialog from \"../files/UploadDialog\";\nimport NewFolderDialog from \"../folders/NewFolderDialog\";\nimport Editor from \"../documents/Editor\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nimport { Menu } from \"semantic-ui-react\";\nimport CreateDocumentDialog from \"../documents/CreateDocumentDialog\";\n\nexport default function NasMenus() {\n  const { nas } = useContext(HomePageContext);\n\n  const [openFilesUpload, setOpenFilesUpload] = useState(false);\n  const [openFolderUpload, setOpenFolderUpload] = useState(false);\n  const [openNewFolder, setOpenNewFolder] = useState(false);\n  const [openEditor, setOpenEditor] = useState(false);\n\n  return (\n    <div>\n      <ContextMenu id=\"folder\">\n        <Menu id=\"folder\" vertical>\n          <MenuItem\n            onClick={() => {\n              setOpenNewFolder(true);\n            }}\n          >\n            <MMenuItem>New Folder</MMenuItem>\n          </MenuItem>\n        </Menu>\n      </ContextMenu>\n      <ContextMenu id=\"files\">\n        <Menu vertical>\n          <MMenuItem onClick={() => setOpenEditor(true)}>\n            New Document\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFilesUpload(true);\n            }}\n          >\n            Upload Files\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFolderUpload(true);\n            }}\n          >\n            Upload Folder\n          </MMenuItem>\n        </Menu>\n      </ContextMenu>\n      <UploadDialog\n        isDir={false}\n        open={openFilesUpload}\n        setOpen={setOpenFilesUpload}\n      />\n      <UploadDialog\n        isDir={true}\n        open={openFolderUpload}\n        setOpen={setOpenFolderUpload}\n      />\n      <NewFolderDialog\n        open={openNewFolder}\n        setOpen={setOpenNewFolder}\n      ></NewFolderDialog>\n      <CreateDocumentDialog open={openEditor} setOpen={setOpenEditor} />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { SystemInfo } from \"./Folder\";\nimport Axios from \"axios\";\nimport { systemURL } from \"./urls\";\n\ninterface SystemContext {\n  systemInfo?: SystemInfo;\n}\n\ninterface SystemProps {}\n\nexport class SystemProvider extends Component<SystemProps, SystemContext> {\n  constructor(props: SystemProps) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    let info = await this.fetchSystemInfo();\n    if (info) {\n      this.setState({ systemInfo: info });\n    }\n    // setInterval(async () => {\n    //   let info = await this.fetchSystemInfo();\n    //   console.log(\"Update system info\");\n    //   if (info) {\n    //     this.setState({ systemInfo: info });\n    //   }\n    // }, 20000);\n  }\n\n  fetchSystemInfo = async (): Promise<SystemInfo> => {\n    let info = await Axios.get<SystemInfo>(systemURL);\n    return Promise.resolve(info.data);\n  };\n\n  render() {\n    return (\n      <SystemContext.Provider value={this.state}>\n        {this.props.children}\n      </SystemContext.Provider>\n    );\n  }\n}\n\nconst context: SystemContext = {};\n\nexport const SystemContext = React.createContext(context);\n","export function formatBytes(bytes: number, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}","import React, { useContext } from \"react\";\nimport { Progress, Message } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\nimport { formatBytes } from \"../files/utils\";\n\nexport default function ComputerStatus() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return (\n      <Message>\n        <p>No Info Avaliable currently</p>\n      </Message>\n    );\n  }\n  return (\n    <div>\n      <span>\n        Used Sapce: {formatBytes(systemInfo.disk.used)}/\n        {formatBytes(systemInfo.disk.total)}\n      </span>\n      <Progress\n        percent={((systemInfo.disk.used / systemInfo.disk.total) * 100).toFixed(\n          2\n        )}\n        size=\"tiny\"\n        color=\"green\"\n      />\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button } from \"semantic-ui-react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ReactQuill, { Quill } from \"react-quill\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function Editor(props: Props) {\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n  const [name, setName] = useState<string | undefined>();\n  const [isChanged, setIsChanged] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  if (name === undefined) {\n    setName(document ? document.name : \"\");\n  }\n\n  return (\n    <Modal open={props.open} centered={false}>\n      <Modal.Header>\n        <TextField\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </Modal.Header>\n      <Modal.Content>\n        <ReactQuill\n          ref={instance => setEditor(instance != null ? instance : undefined)}\n          defaultValue={document && document.content}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            if (isChanged) {\n              let confirm = window.confirm(\n                \"Are you sure you want to exit? You will lose unsave data.\"\n              );\n              if (confirm) {\n                props.setOpen(false);\n              }\n            } else {\n              props.setOpen(false);\n            }\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (editor && name) {\n                let data = editor.getEditor().getContents();\n                if (document) {\n                  // update current document\n                  await nas.updateDocument(document.id, name, data);\n                } else {\n                  if (name !== \"\") {\n                    await nas.createNewDocument(name, data);\n                  } else {\n                    throw \"Name should not be empty\";\n                  }\n                }\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Save\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Grid, Header, Icon } from \"semantic-ui-react\";\nimport {\n  IconButton,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  CardActionArea\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Folder, Document as NasDocument } from \"../../../../models/Folder\";\nimport RenameDialog from \"./RenameDialog\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function FilesActions() {\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [shadow, setShadow] = useState<number>();\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState<NasDocument>();\n\n  return (\n    <div style={{ width: \"100%\", margin: \"20px\" }}>\n      <Grid>\n        <Grid.Row>\n          {/*Render documents*/}\n          {nas.currentFolder &&\n            nas.currentFolder.documents.map((f, i) => (\n              <Grid.Column\n                computer={4}\n                mobile={8}\n                style={{ padding: 10 }}\n                key={`document-${i}`}\n              >\n                <Card variant=\"outlined\" raised={shadow === i ? true : false}>\n                  <NavLink to={`/document/${f.id}`}>\n                    <CardActionArea style={{ height: 80 }}>\n                      <CardContent>\n                        <h3>{f.name}</h3>\n                      </CardContent>\n                    </CardActionArea>\n                  </NavLink>\n                  <CardActions>\n                    <IconButton\n                      onClick={async () => {\n                        await nas.deleteDocument(f.id);\n                        update();\n                      }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                    <IconButton\n                      onClick={async () => {\n                        setSelectedDocument(f);\n                        setShowRenameDialog(true);\n                      }}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                  </CardActions>\n                </Card>\n              </Grid.Column>\n            ))}\n          {/*End Render documents*/}\n        </Grid.Row>\n      </Grid>\n      {selectedDocument && (\n        <RenameDialog\n          type=\"document\"\n          open={showRenameDialog}\n          selectedFile={selectedDocument}\n          onClose={() => {\n            setShowRenameDialog(false);\n            setSelectedDocument(undefined);\n            update();\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\ninterface Props {\n  file: string;\n}\n\nexport default function PDFViewer(props: Props) {\n  const [pageNumber, setpageNumber] = useState(1);\n  const [current, setcurrent] = useState(1);\n\n  return (\n    <Document\n      file={props.file}\n      onLoadSuccess={pdf => {\n        setpageNumber(pdf.numPages);\n      }}\n    >\n      {Array.from(new Array(pageNumber), (el, index) => (\n        <Page key={`page-${index}`} pageNumber={index + 1} />\n      ))}\n    </Document>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Icon,\n  Modal,\n  Image,\n  SemanticICONS,\n  Dropdown,\n  CardContent\n} from \"semantic-ui-react\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  TableContainer,\n  TableHead,\n  Table,\n  TableCell,\n  TableRow,\n  Menu,\n  MenuItem,\n  TableBody,\n  IconButton,\n  Popper,\n  Paper,\n  CardMedia,\n  Card,\n  CardActionArea,\n  Checkbox,\n  Toolbar,\n  Tooltip,\n  DialogTitle,\n  DialogContent\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport \"video-react/dist/video-react.css\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../../models/Folder\";\nimport Editor from \"../documents/Editor\";\nimport { downloadURL, fileURL } from \"../../../../models/urls\";\nimport { Grid } from \"semantic-ui-react\";\nimport FilesActions from \"./FilesActions\";\nimport RenameDialog from \"./RenameDialog\";\nimport { formatBytes } from \"./utils\";\nimport PDFViewer from \"./pdf/PDFViewer\";\nimport { Dialog } from \"@material-ui/core\";\nimport MoveDialog from \"../../../document/components/MoveDialog\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\n\nconst { Player } = require(\"video-react\");\n\nconst imageExt = [\".jpg\", \".png\", \".bmp\", \".JPG\", \".gif\", \".jpeg\", \".JPEG\"];\nconst videoExt = [\".mov\", \".mp4\", \".avi\", \".m4v\", \".MOV\", \".MP4\"];\nconst pdfExt = [\".pdf\"];\nconst audioExt = [\".mp3\", \".m4a\"];\n\nexport default function ListFilesPanel() {\n  const {\n    nas,\n    isLoading,\n    update,\n    selectedDocument,\n    selectDocument\n  } = useContext(HomePageContext);\n  const [previewAnchor, setPreviewAnchor] = React.useState<null | HTMLElement>(\n    null\n  );\n  const [selectedFiles, setSelectedFiles] = useState<NasFile[]>([]);\n  const [onHoverFile, setOnHoverFile] = useState<NasFile>();\n  const [selectedFile, setselectedFile] = useState<NasFile>();\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [showMoveToDialog, setShowMoveToDialog] = useState(false);\n  const [showMultiMoveDialog, setShowMultiMoveDialog] = useState(false);\n  const [imageSrc, setImageSrc] = useState<string | undefined>(undefined);\n  const [audioSrc, setaudioSrc] = useState<string | undefined>(undefined);\n  const [videoSrc, setVideoSrc] = useState<\n    { src: string; cover: string } | undefined\n  >(undefined);\n\n  const [pdfSrc, setpdfSrc] = useState<string | undefined>(undefined);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClosePreview = () => {\n    setPreviewAnchor(null);\n  };\n\n  function isImage(filepath: string): boolean {\n    return imageExt.includes(path.extname(filepath));\n  }\n\n  function isVideo(filepath: string): boolean {\n    return videoExt.includes(path.extname(filepath));\n  }\n\n  function isPdf(filepath: string): boolean {\n    return pdfExt.includes(path.extname(filepath));\n  }\n\n  function isAudio(filepath: string): boolean {\n    return audioExt.includes(path.extname(filepath));\n  }\n\n  function getIcon(filepath: string): SemanticICONS {\n    if (isImage(filepath)) {\n      return \"images\";\n    } else if (isVideo(filepath)) {\n      return \"file video\";\n    }\n\n    return \"file\";\n  }\n\n  return (\n    <div id=\"file-list\">\n      <Grid>\n        <FilesActions />\n        <Toolbar>\n          <div>\n            {selectedFiles.length === 0 ? (\n              <h2>Files</h2>\n            ) : (\n              <h2>Selected {selectedFiles.length} files</h2>\n            )}\n          </div>\n          {selectedFiles.length === 0 ? (\n            <div> </div>\n          ) : (\n            <div>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={async () => {\n                    let confirm = window.confirm(\n                      \"Do you want to delete these files?\"\n                    );\n                    if (confirm) {\n                      for (let file of selectedFiles) {\n                        await nas.deleteFile(file.id, false);\n                        update();\n                      }\n                      setSelectedFiles([]);\n                    }\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Move To\">\n                <IconButton\n                  aria-label=\"Move To\"\n                  onClick={async () => {\n                    setShowMultiMoveDialog(true);\n                  }}\n                >\n                  <FileCopyIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n          )}\n        </Toolbar>\n        <Grid.Row style={{ overflow: \"auto\", overflowX: \"hidden\" }}>\n          {/** Render files */}\n          {nas.currentFolder && nas.currentFolder.files.length > 0 && (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox\n                        onChange={e => {\n                          if (e.target.checked) {\n                            if (nas.currentFolder)\n                              setSelectedFiles(nas.currentFolder.files);\n                          } else {\n                            setSelectedFiles([]);\n                          }\n                          update();\n                        }}\n                        checked={\n                          selectedFiles.length ===\n                          nas.currentFolder.files.length\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Last Modify</TableCell>\n                    <TableCell>Size</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {nas.currentFolder.files.map((f, i) => (\n                    <TableRow hover selected={selectedFiles.includes(f)}>\n                      <TableCell>\n                        <Checkbox\n                          checked={selectedFiles.includes(f)}\n                          onChange={e => {\n                            if (e.target.checked) {\n                              selectedFiles.push(f);\n                            } else {\n                              let index = selectedFiles.indexOf(f);\n                              selectedFiles.splice(index, 1);\n                            }\n                            update();\n                            setSelectedFiles(selectedFiles);\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        style={{ cursor: \"grab\" }}\n                        onMouseOver={e => {\n                          setPreviewAnchor(e.currentTarget);\n                          setOnHoverFile(f);\n                        }}\n                        onMouseLeave={() => {\n                          handleClosePreview();\n                          setOnHoverFile(undefined);\n                        }}\n                        onClick={() => {\n                          if (isImage(f.file)) {\n                            setImageSrc(f.file);\n                          } else if (isVideo(f.file)) {\n                            setVideoSrc({\n                              src: f.transcode_filepath ?? f.file,\n                              cover: f.cover\n                            });\n                          } else if (isAudio(f.file)) {\n                            setaudioSrc(f.file);\n                          } else if (isPdf(f.file)) {\n                            setpdfSrc(f.file);\n                          }\n                        }}\n                      >\n                        <Icon\n                          name={getIcon(f.file)}\n                          size=\"large\"\n                          color=\"teal\"\n                        />\n                        {path.basename(f.filename)}\n                      </TableCell>\n                      <TableCell>\n                        {moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                      </TableCell>\n                      <TableCell>{formatBytes(f.size)}</TableCell>\n                      <TableCell>\n                        <IconButton\n                          onClick={e => {\n                            setselectedFile(f);\n                            handleClick(e);\n                          }}\n                        >\n                          <MoreHorizIcon></MoreHorizIcon>\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n          {/** End Render files */}\n        </Grid.Row>\n        {/** File Action Menu */}\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem\n            onClick={() => {\n              /// Download from link\n              if (selectedFile) {\n                const link = document.createElement(\"a\");\n                link.href = `${selectedFile.file}`;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n              }\n              handleClose();\n            }}\n          >\n            Download\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                handleClose();\n                setShowRenameDialog(true);\n              }\n            }}\n          >\n            Rename\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                await nas.deleteFile(selectedFile.id);\n                handleClose();\n                update();\n              }\n            }}\n          >\n            Delete\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                handleClose();\n                setShowMoveToDialog(true);\n              }\n            }}\n          >\n            Move To\n          </MenuItem>\n        </Menu>\n        {/** end file action menu */}\n        {selectedDocument && (\n          <Editor\n            open={selectedDocument !== undefined}\n            setOpen={v => {\n              !v && selectDocument(undefined);\n            }}\n            document={selectedDocument}\n          ></Editor>\n        )}\n        {/** Preview image */}\n        <Modal\n          open={imageSrc !== undefined}\n          onClose={() => setImageSrc(undefined)}\n        >\n          <Image src={imageSrc} fluid></Image>\n        </Modal>\n        {/** End preview image */}\n        {/** Preview image */}\n        <Dialog\n          fullWidth\n          open={audioSrc !== undefined}\n          onClose={() => setaudioSrc(undefined)}\n          style={{ overflowX: \"hidden\" }}\n        >\n          <DialogTitle>\n            <h4>{decodeURIComponent(path.basename(audioSrc ?? \"\"))}</h4>\n          </DialogTitle>\n          <DialogContent>\n            <AudioPlayer src={audioSrc} />\n          </DialogContent>\n        </Dialog>\n        {/** End preview image */}\n        {/** Preview video */}\n        <Modal\n          open={videoSrc !== undefined}\n          onClose={() => setVideoSrc(undefined)}\n        >\n          <Player poster={videoSrc && videoSrc.cover}>\n            <source src={videoSrc && videoSrc.src} />\n          </Player>\n        </Modal>\n        {/** End preview video */}\n        {/** Preview pdf */}\n        <Modal open={pdfSrc !== undefined} onClose={() => setpdfSrc(undefined)}>\n          {pdfSrc && <PDFViewer file={pdfSrc} />}\n        </Modal>\n        {/** End preview pdf */}\n        {selectedFile && (\n          <Dialog\n            open={showMoveToDialog}\n            onClose={() => {\n              setselectedFile(undefined);\n              setShowMoveToDialog(false);\n            }}\n          >\n            <MoveDialog\n              currentFile={selectedFile}\n              onClose={() => {\n                setselectedFile(undefined);\n                setShowMoveToDialog(false);\n              }}\n              onMove={async (file, dest) => {\n                await nas.moveFileTo(file.id, dest.id);\n                update();\n              }}\n            />\n          </Dialog>\n        )}\n        {selectedFiles.length > 0 && (\n          <Dialog\n            open={showMultiMoveDialog}\n            onClose={() => {\n              setShowMultiMoveDialog(false);\n            }}\n          >\n            <MoveDialog\n              currentFile={selectedFiles[0]}\n              onClose={() => {\n                setSelectedFiles([]);\n                setShowMultiMoveDialog(false);\n              }}\n              onMove={async (file, dest) => {\n                for (let f of selectedFiles) {\n                  await nas.moveFileTo(f.id, dest.id);\n                  update();\n                }\n              }}\n            />\n          </Dialog>\n        )}\n        {selectedFile && (\n          <RenameDialog\n            type=\"file\"\n            open={showRenameDialog}\n            selectedFile={selectedFile}\n            onClose={() => {\n              setShowRenameDialog(false);\n              setselectedFile(undefined);\n            }}\n          />\n        )}\n      </Grid>\n      {/** Preview */}\n      <Popper open={Boolean(previewAnchor)} anchorEl={previewAnchor}>\n        {onHoverFile && (\n          <Card style={{ padding: 10 }}>\n            {isImage(onHoverFile.filename) && (\n              <CardMedia\n                style={{ height: 140, width: 140 }}\n                image={onHoverFile.file}\n              />\n            )}\n            {isVideo(onHoverFile.filename) ? (\n              onHoverFile.cover ? (\n                <CardActionArea>\n                  <CardMedia\n                    style={{ height: 140, width: 140 }}\n                    image={onHoverFile.cover}\n                  />\n                  <CardContent> {formatBytes(onHoverFile.size)}</CardContent>\n                </CardActionArea>\n              ) : (\n                <div>\n                  {onHoverFile.filename} - {formatBytes(onHoverFile.size)}\n                </div>\n              )\n            ) : (\n              <div>\n                {onHoverFile.filename} - {formatBytes(onHoverFile.size)}\n              </div>\n            )}\n          </Card>\n        )}\n      </Popper>\n      {/** end preview */}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport List from \"@material-ui/core/List\";\nimport { Icon, Grid, Item } from \"semantic-ui-react\";\nimport {\n  ListItem,\n  ListItemText,\n  LinearProgress,\n  Box,\n  Typography\n} from \"@material-ui/core\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\n\nexport default function UploadFilesSideBar() {\n  const { uploadFiles, uploadInfo, uploadedFiles } = useContext(\n    HomePageContext\n  );\n  const { systemInfo } = useContext(SystemContext);\n\n  return (\n    <List style={{ overflowY: \"auto\", height: \"100%\", overflowX: \"hidden\" }}>\n      {systemInfo && (\n        <Grid>\n          <Grid.Row style={{ height: 40 }}>\n            <Grid.Column width={8}>\n              <div>CPU</div>\n              <LinearProgress\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={systemInfo.cpu}\n              />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <div>Memory</div>\n              <LinearProgress\n                title=\"Memory\"\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={(systemInfo.memory.used / systemInfo.memory.total) * 100}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )}\n\n      {uploadFiles ? (\n        uploadFiles\n          .filter(f => !uploadedFiles.includes(f))\n          .map((f, i) => (\n            <ListItem>\n              <ListItemIcon>\n                <Icon name=\"file\" />\n              </ListItemIcon>\n              <ListItemText\n                primary={f.name}\n                secondary={\n                  <LinearProgress\n                    color=\"secondary\"\n                    variant={\n                      uploadInfo && uploadInfo.currentIndex === i\n                        ? \"determinate\"\n                        : \"indeterminate\"\n                    }\n                    value={\n                      uploadInfo && uploadInfo.currentIndex === i\n                        ? uploadInfo.progress\n                        : undefined\n                    }\n                  />\n                }\n              />\n            </ListItem>\n          ))\n      ) : (\n        <Grid centered verticalAlign=\"middle\">\n          <div style={{ marginTop: \"10px\", marginBottom: \"auto\" }}>\n            No Pending Uploads\n          </div>\n        </Grid>\n      )}\n    </List>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  fade,\n  InputBase,\n  MenuList,\n  Popper,\n  Paper,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../../models/Folder\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popper: {\n      marginTop: 10,\n      marginRight: 15,\n      width: \"40ch\",\n      maxHeight: 400,\n      overflow: \"auto\"\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport default function SearchField() {\n  const classes = useStyles();\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [value, setValue] = useState(\"\");\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        {isLoading ? (\n          <CircularProgress size={20} color=\"inherit\" />\n        ) : (\n          <SearchIcon />\n        )}\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput\n        }}\n        inputProps={{ \"aria-label\": \"search\" }}\n        onClick={e => setAnchorEl(e.currentTarget)}\n        onChange={async e => {\n          let keyword = e.target.value;\n          setValue(keyword);\n        }}\n        onKeyDown={async e => {\n          if (e.key === \"Enter\") {\n            setIsLoading(true);\n            await nas.search(value);\n            update();\n            setIsLoading(false);\n          }\n        }}\n      />\n\n      <Popper open={Boolean(anchorEl)} anchorEl={anchorEl}>\n        <ClickAwayListener onClickAway={handleClose}>\n          <Paper className={classes.popper}>\n            {nas.searchedFiles.length === 0 && (\n              <MenuItem>No File. Press Enter to search</MenuItem>\n            )}\n            {nas.searchedFiles.map(f => (\n              <MenuItem\n                key={f.id}\n                onClick={() => {\n                  window.location.href = `#/home/${f.parent}`;\n                  handleClose();\n                }}\n              >\n                {path.basename(f.filename)}\n              </MenuItem>\n            ))}\n          </Paper>\n        </ClickAwayListener>\n      </Popper>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport Header from \"./components/others/Header\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport ListPanel from \"./components/folders/ListFolderPanel\";\nimport { Container, Segment, Progress, Grid, Menu } from \"semantic-ui-react\";\nimport NasMenus from \"./components/others/NasMenu\";\nimport ComputerStatus from \"./components/others/ComputerStatus\";\nimport ListFilesPanel from \"./components/files/ListFilesPanel\";\nimport { HomePageContext } from \"../../models/HomeContext\";\nimport { ContextMenu, ContextMenuTrigger } from \"react-contextmenu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport UploadFilesSideBar from \"./components/files/UploadFilesSideBar\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {\n  Hidden,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n  Typography,\n  InputBase,\n  createMuiTheme,\n  ThemeProvider\n} from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport SearchField from \"./components/files/SearchField\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fafafa\"\n    }\n  }\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport function HomePage() {\n  const { nas, isLoading, update } = useContext(HomePageContext);\n  const [show, setShow] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div\n        id=\"home\"\n        style={{\n          height: \"100%\",\n          overflow: \"hidden\"\n        }}\n      >\n        {/** App Bar */}\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Hidden mdUp>\n              <IconButton\n                className={classes.menuButton}\n                color=\"inherit\"\n                onClick={() => {\n                  setShow(true);\n                }}\n              >\n                <MenuIcon />\n              </IconButton>\n            </Hidden>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Django Nas\n            </Typography>\n            <SearchField />\n          </Toolbar>\n        </AppBar>\n        {/** End App Bar */}\n        {/** drawer */}\n        <Drawer open={show} onClose={() => setShow(false)}>\n          <div style={{ width: 300, height: \"100%\" }}>\n            <ListPanel />\n          </div>\n        </Drawer>\n        {/** end drawer */}\n        <Segment\n          loading={isLoading}\n          style={{\n            height: \"100%\",\n            margin: 0\n          }}\n        >\n          <Grid\n            style={{\n              height: \"100%\",\n              overflow: \"hidden\",\n              position: \"relative\"\n            }}\n          >\n            <Grid.Row\n              style={{ height: \"100%\", paddingTop: 0, paddingBottom: 0 }}\n            >\n              {/** left side */}\n              <Hidden smDown implementation=\"js\">\n                <Grid.Column\n                  computer={3}\n                  style={{ height: \"100%\", backgroundColor: \"#fcfcfc\" }}\n                >\n                  <ContextMenuTrigger id=\"folder\">\n                    <Grid.Row style={{ height: \"92%\" }}>\n                      <ListPanel />\n                    </Grid.Row>\n                    <Grid.Row>\n                      <ComputerStatus />\n                    </Grid.Row>\n                  </ContextMenuTrigger>\n                </Grid.Column>\n              </Hidden>\n              {/** end left */}\n              <Grid.Column\n                computer={10}\n                mobile={16}\n                tablet={16}\n                style={{ height: \"100%\" }}\n              >\n                <ContextMenuTrigger id=\"files\">\n                  <ListFilesPanel />\n                </ContextMenuTrigger>\n              </Grid.Column>\n              {/** right side */}\n              <Hidden smDown implementation=\"js\">\n                <Grid.Column\n                  computer={3}\n                  style={{\n                    height: \"100%\",\n                    backgroundColor: \"#fcfcfc\"\n                  }}\n                >\n                  <UploadFilesSideBar />\n                </Grid.Column>\n              </Hidden>\n              {/** end right side */}\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        <NasMenus />\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  Cell\n} from \"recharts\";\nimport { Segment } from \"semantic-ui-react\";\n\ninterface Props {\n  title: string;\n  used: number;\n  total: number;\n  color: string;\n  color2: string;\n}\nconst data02 = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\nexport default function PercentageChart(props: Props) {\n  const { title, used, total, color, color2 } = props;\n  let data = [\n    {\n      name: \"Used\",\n      value: used\n    },\n    { name: \"Available\", value: total - used }\n  ];\n\n  return (\n    <Segment>\n      <ResponsiveContainer\n        minHeight={300}\n        height=\"100%\"\n        width=\"100%\"\n        minWidth={200}\n      >\n        <PieChart>\n          <Pie\n            data={data}\n            dataKey=\"value\"\n            label\n            fill={color}\n            isAnimationActive={false}\n          >\n            <Cell fill={color}></Cell>\n            <Cell fill={color2}></Cell>\n          </Pie>\n\n          <Tooltip></Tooltip>\n        </PieChart>\n      </ResponsiveContainer>\n      <span>{title}</span>\n    </Segment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Container, Grid, Segment } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../models/SystemContext\";\nimport PercentageChart from \"./PercentageChart\";\n\nexport default function SystemInfoPage() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return <div>Infomation Not Available</div>;\n  }\n\n  return (\n    <div id=\"home\" style={{ width: \"100%\", color: \"black\" }}>\n      <Container>\n        <h1>System Info</h1>\n        <Grid columns={2}>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.disk.used / 1024 / 1024)}\n              total={Math.round(systemInfo.disk.total / 1024 / 1024)}\n              title=\"Disk(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.memory.used / 1024 / 1024)}\n              total={Math.round(systemInfo.memory.total / 1024 / 1024)}\n              title=\"Memory(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={systemInfo.cpu}\n              total={100}\n              title=\"CPU Usage(Percentage)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Temperature</h4>\n              <h1>\n                {systemInfo.temperature\n                  ? systemInfo.temperature.toFixed(1)\n                  : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Humidity</h4>\n              <h1>\n                {systemInfo.humidity ? systemInfo.humidity.toFixed(1) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Pressure</h4>\n              <h1>\n                {systemInfo.pressure ? systemInfo.pressure.toFixed(2) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\nimport * as path from \"path\";\n//@ts-ignore\nimport { MarkdownToQuill } from \"md-to-quill-delta\";\nconst QuillDeltaToHtmlConverter = require(\"quill-delta-to-html\")\n  .QuillDeltaToHtmlConverter;\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface DocumentContext {\n  nas: Nas;\n  isLoading: boolean;\n  errorMsg?: string;\n  currentDocument?: NasDocument;\n  update(): void;\n  updateDocument(doc: NasDocument): void;\n  saveDocument(): Promise<void>;\n  saveToLocal(savingType: \"html\" | \"pdf\"): Promise<void>;\n  oepnFromLocal(): Promise<void>;\n  newDocument(name: string): Promise<void>;\n}\n\ninterface DocumentProps extends RouteComponentProps<RouterProps> {}\n\nexport class DocumentProvider extends Component<\n  DocumentProps,\n  DocumentContext\n> {\n  constructor(props: DocumentProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      isLoading: false,\n      update: this.update,\n      updateDocument: this.update,\n      saveDocument: this.saveDocument,\n      saveToLocal: this.saveToLocal,\n      oepnFromLocal: this.openFromLocal,\n      newDocument: this.newDocument\n    };\n  }\n\n  async componentDidUpdate(oldProps: DocumentProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      if (id) {\n        await this.fetch(id);\n      }\n    }\n  }\n\n  updateDocument = (doc: NasDocument) => {\n    this.setState({ currentDocument: doc });\n  };\n\n  saveDocument = async () => {\n    try {\n      let doc = this.state.currentDocument;\n      if (doc) {\n        this.setState({ isLoading: true });\n        await this.state.nas.updateDocument(doc.id, doc.name, doc.content);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to save\" });\n    } finally {\n      this.setState({ isLoading: false });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  newDocument = async (name: string) => {};\n\n  readFile = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onload = content => {\n        let text = reader.result;\n\n        resolve(text as string);\n      };\n      reader.readAsText(file);\n    });\n  };\n\n  openFromLocal = async () => {\n    const { currentDocument, nas } = this.state;\n    try {\n      let input =\n        (document.getElementById(\"new file\") as HTMLInputElement) ??\n        document.createElement(\"input\");\n      input.id = \"new file\";\n      input.type = \"file\";\n      input.accept = \".md,.html\";\n      input.multiple = false;\n      input.click();\n      input.addEventListener(\"change\", async e => {\n        this.setState({\n          isLoading: true,\n          errorMsg: \"Reading Local Document...\"\n        });\n        let files = input.files;\n        if (files) {\n          let file = files[0];\n          let ext = path.extname(file.name);\n          if (ext === \".md\") {\n            const converter = new MarkdownToQuill();\n            let content = await this.readFile(file);\n            let delta = converter.convert(content);\n            this.setState({ errorMsg: \"Creating New Document\" });\n            let d = await nas.createNewDocument(\n              file.name,\n              { ops: delta } as any,\n              currentDocument?.parent\n            );\n            this.setState({\n              errorMsg: \"Document Created. Preparing for redirecting\"\n            });\n            setTimeout(() => {\n              this.setState({ isLoading: false, errorMsg: undefined });\n              window.location.href = \"#/document/\" + d.id;\n            }, 1500);\n          }\n        }\n        input.remove();\n      });\n    } catch (err) {\n      this.setState({ errorMsg: \"Unable to open file\", isLoading: false });\n    }\n  };\n\n  saveToLocal = async (savingType: \"html\" | \"pdf\") => {\n    let doc = this.state.currentDocument;\n    if (doc) {\n      switch (savingType) {\n        case \"html\":\n          let converter = new QuillDeltaToHtmlConverter(doc.content);\n          let html = converter.convert();\n          break;\n      }\n    }\n  };\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    if (id) {\n      await this.fetch(id);\n    }\n  }\n\n  fetch = async (id: string) => {\n    try {\n      this.setState({ isLoading: true });\n      let document = await this.state.nas.getDocument(id);\n      setTimeout(() => {\n        this.setState({ currentDocument: document });\n      }, 400);\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to open\" });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 500);\n      this.setState({ currentDocument: undefined });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <DocumentContext.Provider value={this.state}>\n        {this.props.children}\n      </DocumentContext.Provider>\n    );\n  }\n}\n\nconst context: DocumentContext = {\n  nas: new Nas(),\n  update: () => {},\n  updateDocument: (d: NasDocument) => {},\n  saveDocument: () => {\n    return Promise.resolve();\n  },\n  oepnFromLocal: () => {\n    return Promise.resolve();\n  },\n  newDocument: () => {\n    return Promise.resolve();\n  },\n  saveToLocal: () => {\n    return Promise.resolve();\n  },\n  isLoading: false\n};\n\nexport const DocumentContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport AutosizeInput from \"react-input-autosize\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  Popper,\n  ClickAwayListener,\n  Paper,\n  Fade,\n  Slide,\n  Collapse\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/Folder\";\nimport MoveDialog from \"./MoveDialog\";\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"18px\",\n    paddingTop: 5\n  },\n  button: {\n    padding: \"0px 5px\"\n  }\n}));\n\nexport default function Titlebar() {\n  const {\n    currentDocument,\n    updateDocument,\n    saveDocument,\n    isLoading,\n    nas,\n    update\n  } = useContext(DocumentContext);\n\n  const [anchorEl, setAnchorEl] = React.useState<undefined | HTMLElement>();\n  const [numChanges, setNumChanges] = useState(0);\n  const classes = useStyles();\n\n  if (currentDocument === undefined && !isLoading) {\n    return (\n      <div>\n        <AutosizeInput\n          id=\"test-input\"\n          className={classes.notchedOutline}\n          style={{\n            maxWidth: window.innerWidth * 0.8\n          }}\n          value={\"Cannot fetch document\"}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ marginTop: 15, marginLeft: 5 }}>\n      <Collapse in={isLoading && !currentDocument} unmountOnExit mountOnEnter>\n        <div style={{ height: 24, width: 100 }}>\n          <LinearProgress\n            variant=\"indeterminate\"\n            style={{ marginTop: 15, width: 100 }}\n          />\n        </div>\n      </Collapse>\n      <Collapse\n        in={!isLoading && currentDocument !== undefined}\n        mountOnEnter\n        unmountOnExit\n      >\n        <div>\n          <Tooltip title=\"Rename\">\n            <ClickAwayListener\n              onClickAway={async () => {\n                if (numChanges > 0) {\n                  await saveDocument();\n                  setNumChanges(0);\n                }\n              }}\n            >\n              <AutosizeInput\n                id=\"test-input\"\n                className={classes.notchedOutline}\n                style={{\n                  maxWidth: window.innerWidth * 0.8\n                }}\n                value={currentDocument?.name}\n                onChange={e => {\n                  if (currentDocument) {\n                    currentDocument.name = e.target.value;\n                    setNumChanges(numChanges + 1);\n                    updateDocument(currentDocument);\n                  }\n                }}\n              />\n            </ClickAwayListener>\n          </Tooltip>\n          <Tooltip title=\"Move\">\n            <IconButton\n              className={classes.button}\n              onClick={async e => {\n                setAnchorEl(e.currentTarget);\n                if (currentDocument) {\n                  await nas.getContent(currentDocument.parent as number);\n                }\n\n                update();\n              }}\n            >\n              <FolderIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </Collapse>\n\n      {anchorEl && (\n        <ClickAwayListener onClickAway={() => setAnchorEl(undefined)}>\n          <Popper\n            open={Boolean(anchorEl)}\n            anchorEl={anchorEl}\n            style={{ zIndex: 2000 }}\n            placement=\"right-end\"\n          >\n            {currentDocument && (\n              <MoveDialog\n                currentFile={currentDocument}\n                onClose={() => setAnchorEl(undefined)}\n                onMove={async (file: NasDocument, dest) => {\n                  await nas.moveDocument(file.id, dest.id);\n                  currentDocument.parent = dest.id;\n                  updateDocument(currentDocument);\n                }}\n              />\n            )}\n          </Popper>\n        </ClickAwayListener>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport FormatBoldIcon from \"@material-ui/icons/FormatBold\";\nimport FormatItalicIcon from \"@material-ui/icons/FormatItalic\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\nimport {\n  IconButton,\n  makeStyles,\n  Theme,\n  createStyles,\n  withStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    divider: {\n      height: \"10px\",\n      borderLeft: \"6px solid black\"\n    }\n  })\n);\n\nconst StyledToggleButtonGroup = withStyles(theme => ({\n  grouped: {\n    margin: theme.spacing(0.5),\n    border: \"none\",\n    padding: theme.spacing(0, 1),\n    \"&:not(:first-child)\": {\n      borderRadius: theme.shape.borderRadius\n    },\n    \"&:first-child\": {\n      borderRadius: theme.shape.borderRadius\n    }\n  }\n}))(ToggleButtonGroup);\nexport default function ToolsBar() {\n  const classes = useStyles();\n  return (\n    <div id=\"toolbar\">\n      <span className=\"ql-formats\">\n        <select className=\"ql-size\">\n          <option value=\"small\"></option>\n          <option selected></option>\n          <option value=\"large\"></option>\n          <option value=\"huge\"></option>\n        </select>\n        <button type=\"button\" className=\"ql-italic\"></button>\n        <button type=\"button\" className=\"ql-underline\"></button>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-indent\" value=\"-1\"></button>\n          <button type=\"button\" className=\"ql-indent\" value=\"+1\"></button>\n          <select className=\"ql-align\">\n            <option value=\"center\"></option>\n            <option value=\"right\"></option>\n            <option value=\"justify\"></option>\n          </select>\n          <button type=\"button\" className=\"ql-direction\" value=\"rtl\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"ordered\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"bullet\"></button>\n        </span>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-image\"></button>\n          <button type=\"button\" className=\"ql-code-block\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"sub\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"super\"></button>\n          <button type=\"button\" className=\"ql-clean\"></button>\n        </span>\n      </span>\n    </div>\n  );\n}\n","import Parchment from \"parchment\";\nimport { Quill } from \"react-quill\";\n\nconst BlockEmbed = Quill.import('blots/block/embed') as { new(node: any, value: any): Object };\nexport class DividerBlot extends BlockEmbed {\n  static blotName = 'divider';\n  static tagName = 'hr';\n}\n","import React, { useContext, useState } from \"react\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  InputBase,\n  TextField,\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/Folder\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport { DividerBlot } from \"./blots/DividerBlot\";\n\nQuill.register(DividerBlot);\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"20px\"\n  }\n}));\n\nexport default function BodyEditor() {\n  const { currentDocument, updateDocument, saveDocument } = useContext(\n    DocumentContext\n  );\n  const [numChanges, setNumberOfChanges] = useState(0);\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n  const save = async () => {\n    if (currentDocument && editor) {\n      let data = editor.getEditor().getContents();\n      currentDocument.content = data;\n      updateDocument(currentDocument);\n      await saveDocument();\n      setNumberOfChanges(0);\n    }\n  };\n\n  const modules = {\n    toolbar: {\n      container: \"#toolbar\"\n    }\n  };\n  if (currentDocument === undefined) {\n    return (\n      <ReactQuill\n        style={{\n          height: \"100%\",\n          border: 0,\n          paddingBottom: \"85px\"\n        }}\n        modules={modules}\n      />\n    );\n  }\n\n  return (\n    <ClickAwayListener\n      onClickAway={async () => {\n        if (numChanges > 0) {\n          await save();\n        }\n      }}\n    >\n      <ReactQuill\n        ref={instance => setEditor(instance != null ? instance : undefined)}\n        onKeyDown={async () => {\n          setNumberOfChanges(numChanges + 1);\n          if (numChanges > 3) {\n            await save();\n          }\n        }}\n        onChange={async e => {}}\n        style={{ height: \"100%\", border: 0, paddingBottom: \"85px\" }}\n        defaultValue={currentDocument.content}\n        modules={modules}\n      />\n    </ClickAwayListener>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { Button, makeStyles, MenuItem, Menu } from \"@material-ui/core\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    padding: \"4px 6px\",\n    minWidth: \"40px\",\n    fontSize: \"14px\",\n    fontWeight: \"normal\",\n    textTransform: \"capitalize\"\n  },\n  menuItem: {\n    minWidth: 150\n  }\n}));\n\nexport default function MenuBar() {\n  const classes = useStyles();\n  const { isLoading, saveToLocal, oepnFromLocal } = React.useContext(\n    DocumentContext\n  );\n  const [fileEl, setfileEl] = React.useState<null | HTMLElement>(null);\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        size=\"small\"\n        onClick={e => setfileEl(e.currentTarget)}\n      >\n        File\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Edit\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Settings\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Tools\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Help\n      </Button>\n      <span\n        style={{ textDecoration: \"underline\", color: \"grey\", marginLeft: 20 }}\n      >\n        {isLoading ? \"Commnucating with server\" : \"All changes saved in Drive\"}\n      </span>\n      <Menu\n        anchorEl={fileEl}\n        keepMounted\n        open={Boolean(fileEl)}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        onClose={() => {\n          setfileEl(null);\n        }}\n      >\n        <MenuItem\n          onClick={async () => {\n            await oepnFromLocal();\n            setfileEl(null);\n          }}\n        >\n          Open\n        </MenuItem>\n        <NestedMenuItem\n          label=\"Download\"\n          parentMenuOpen={Boolean(fileEl)}\n          className={classes.menuItem}\n        >\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"pdf\");\n              setfileEl(null);\n            }}\n          >\n            PDF Document (.pdf){\" \"}\n          </MenuItem>\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"html\");\n              setfileEl(null);\n            }}\n          >\n            Web Page (.html){\" \"}\n          </MenuItem>\n        </NestedMenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button, Grid, Divider } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Backdrop,\n  CircularProgress,\n  Card,\n  AppBar,\n  Toolbar,\n  createMuiTheme,\n  ThemeProvider,\n  IconButton,\n  makeStyles,\n  Container,\n  Paper,\n  Snackbar,\n  Tooltip\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../models/DocumentContext\";\nimport Titlebar from \"./components/Titlebar\";\nimport ToolsBar from \"./components/ToolsBar\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport BodyEditor from \"./components/BodyEditor\";\nimport \"../../../document.css\";\nimport { NavLink } from \"react-router-dom\";\nimport MenuBar from \"./components/MenuBar\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: \"#ffffff\"\n    },\n    primary: {\n      main: \"#00b2ff\"\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  appbar: {\n    height: \"90px\"\n  },\n  container: {\n    paddingTop: \"95px\",\n    height: \"100%\"\n  },\n  row: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  largeIcon: {\n    width: 40,\n    height: 40\n  }\n}));\n\nexport default function DocumentEditor() {\n  const { currentDocument, isLoading, errorMsg } = useContext(DocumentContext);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <AppBar elevation={0} className={classes.appbar} color=\"secondary\">\n          <Toolbar>\n            <Tooltip title=\"Back\">\n              <NavLink to={`/home/${currentDocument?.parent ?? \"\"}`}>\n                <DescriptionIcon\n                  className={classes.largeIcon}\n                  fontSize=\"large\"\n                  color=\"primary\"\n                />\n              </NavLink>\n            </Tooltip>\n            <Grid style={{ marginLeft: 10 }}>\n              <Grid.Row style={{ padding: 0 }}>\n                <Titlebar />\n              </Grid.Row>\n              <Grid.Row style={{ paddingTop: 0, paddingBottom: 0 }}>\n                <MenuBar />\n              </Grid.Row>\n              <Grid.Row style={{ padding: 0 }}>\n                {currentDocument && <ToolsBar />}\n              </Grid.Row>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Container id=\"container\" className={classes.container}>\n          {currentDocument && (\n            <Paper\n              style={{ height: \"100%\", minHeight: window.innerHeight - 95 }}\n              square\n            >\n              <BodyEditor />\n            </Paper>\n          )}\n        </Container>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={errorMsg !== undefined}\n          message={errorMsg}\n        />\n        <Backdrop\n          open={isLoading && currentDocument === undefined}\n          style={{\n            zIndex: 1,\n            color: \"#fff\"\n          }}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { I18nProvider } from \"@lingui/react\";\n\nReactDOM.render(\n  <I18nProvider catalogs={{}}>\n    <App />\n  </I18nProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  HashRouter as Router,\n  Route,\n  Link,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport { HomePage } from \"./components/pages/home/HomePage\";\nimport { HomePageProvider } from \"./components/models/HomeContext\";\nimport { SystemProvider } from \"./components/models/SystemContext\";\nimport SystemInfoPage from \"./components/pages/systemInfo/SystemInfoPage\";\nimport { Sidebar, Menu, Icon, Button } from \"semantic-ui-react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { IconButton } from \"@material-ui/core\";\nimport { DocumentProvider } from \"./components/models/DocumentContext\";\nimport DocumentEditor from \"./components/pages/document/DocumentEditor\";\nimport { MovingProvider } from \"./components/models/MovingContext\";\n\nexport default function App() {\n  const [visible, setVisible] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <SystemProvider>\n      <Router>\n        <div style={{ height: \"100%\" }}>\n          <Route exact path=\"/\" component={() => <Redirect to=\"/home\" />} />\n          <Route\n            exact\n            path=\"/home/:id?\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return (\n                <MovingProvider>\n                  <HomePageProvider {...props}>\n                    <HomePage></HomePage>\n                  </HomePageProvider>\n                </MovingProvider>\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/document/:id\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return (\n                <MovingProvider>\n                  <DocumentProvider {...props}>\n                    <DocumentEditor />\n                  </DocumentProvider>\n                </MovingProvider>\n              );\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/info\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return <SystemInfoPage />;\n            }}\n          />\n        </div>\n      </Router>\n    </SystemProvider>\n  );\n}\n"],"sourceRoot":""}