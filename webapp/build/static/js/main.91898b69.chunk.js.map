{"version":3,"sources":["components/models/urls.ts","components/models/nas.ts","components/models/HomeContext.tsx","components/pages/home/components/files/RenameDialog.tsx","components/models/MovingContext.tsx","components/pages/document/components/MoveDialog.tsx","components/pages/home/components/folders/ListFolderPanel.tsx","components/pages/home/components/files/UploadDialog.tsx","components/pages/home/JSONSchema/model/Schema.ts","components/pages/home/components/folders/NewFolderDialog.tsx","components/pages/home/components/documents/CreateDocumentDialog.tsx","components/pages/home/components/others/NasMenu.tsx","components/models/SystemContext.tsx","components/pages/home/components/files/utils.ts","components/pages/home/components/others/ComputerStatus.tsx","components/pages/home/components/documents/Editor.tsx","components/pages/home/components/files/FilesActions.tsx","components/pages/home/components/files/pdf/PDFViewer.tsx","components/pages/home/components/files/music/Musicplayer.tsx","components/pages/home/components/files/ListFilesPanel.tsx","components/pages/home/components/files/UploadFilesSideBar.tsx","components/pages/home/components/files/SearchField.tsx","components/pages/home/HomePage.tsx","components/pages/systemInfo/PercentageChart.tsx","components/pages/systemInfo/SystemInfoPage.tsx","components/models/DocumentContext.tsx","components/pages/document/components/Titlebar.tsx","components/pages/document/components/ToolsBar.tsx","components/pages/document/components/blots/DividerBlot.ts","components/pages/document/components/BodyEditor.tsx","components/pages/document/components/MenuBar.tsx","components/pages/document/DocumentEditor.tsx","components/models/MusicContext.tsx","components/pages/music/components/left/CurrentPlayingPage.tsx","components/pages/music/components/right/MusicList.tsx","components/pages/music/components/SearchField.tsx","components/pages/music/MusicPage.tsx","serviceWorker.js","index.js","App.tsx","../node_modules/pdfjs-dist/build sync"],"names":["url","documentURL","Nas","constructor","menus","currentFolder","searchedFiles","errorMsg","moveFileTo","fileId","dest","a","Axios","patch","getContent","id","fetchMusicList","get","data","console","log","moveDocument","documentId","moveFolderTo","folderId","u","rename","newName","search","keyword","response","parents","undefined","uploadFile","files","isDir","onUpload","onFileUploaded","index","f","size","getUploadFileAndCreateFolder","getSingleUploadFile","formData","post","headers","onUploadProgress","progress","p","Math","round","loaded","total","alert","toString","deleteFile","showAlert","window","confirm","delete","deleteFolder","createNewFolder","name","parent","res","folders","push","renameFolder","findIndex","renameDocument","documents","getDocument","Promise","resolve","content","JSON","parse","createNewDocument","stringify","ops","updateDocument","deleteDocument","reject","this","file","FormData","append","paths","webkitRelativePath","HomePageProvider","Component","props","super","setUploadedFile","setState","uploadedFiles","selectDocument","document","selectedDocument","updateUploadInfo","uploadInfo","setUploadInfo","uploadFiles","fetch","isLoading","nas","state","update","setUploadedFiles","componentDidUpdate","oldProps","match","params","componentWillMount","render","HomePageContext","Provider","value","children","context","info","React","createContext","RenameDialog","useContext","useState","type","ext","path","selectedFile","filename","getDefaultName","setName","Dialog","open","fullWidth","DialogTitle","DialogContent","TextField","color","onChange","e","target","DialogActions","Button","onClick","onClose","MovingProvider","MovingContext","MoveDialog","currentFile","onMove","loading","setLoading","loadingFolder","setLoadingFolder","then","catch","err","Card","style","width","CardContent","IconButton","disabled","setTimeout","Collapse","in","mountOnEnter","unmountOnExit","LinearProgress","backgroundColor","List","padding","map","i","ListItem","key","button","ListItemIcon","ListItemText","primary","Divider","CardActions","disableSpacing","Tooltip","title","marginLeft","ListPanel","showMoveToDialog","setShowMoveToDialog","showRenameDialog","setShowRenameDialog","selectedFolder","setSelectedFolder","anchorEl","setAnchorEl","handleClose","overflow","overflowX","height","Grid","centered","Row","verticalAlign","Column","to","Message","error","MessageHeader","timeout","ListItemAvatar","Icon","location","href","secondary","moment","modified_at","format","ListItemSecondaryAction","currentTarget","Menu","keepMounted","Boolean","MenuItem","link","createElement","download_url","body","appendChild","click","removeChild","Error","UploadDialog","onInputChange","l","length","Modal","Header","Content","multiple","webkitdirectory","marginTop","Segment","Progress","percent","attached","active","currentName","currentIndex","Actions","basic","setOpen","inverted","current","uploadedDataSize","totalDataSize","Widget","text","NewFolderDialog","folderName","setFolderName","setIsLoading","label","required","CreateDocumentDialog","setIsloading","NasMenus","openFilesUpload","setOpenFilesUpload","openFolderUpload","setOpenFolderUpload","openNewFolder","setOpenNewFolder","openEditor","setOpenEditor","vertical","SystemProvider","fetchSystemInfo","componentDidMount","systemInfo","SystemContext","formatBytes","bytes","decimals","dm","floor","parseFloat","pow","toFixed","ComputerStatus","disk","used","Editor","editor","setEditor","isChanged","ref","instance","defaultValue","getEditor","getContents","FilesActions","shadow","setSelectedDocument","margin","computer","mobile","variant","raised","CardActionArea","PDFViewer","pageNumber","setpageNumber","onLoadSuccess","pdf","numPages","Array","from","el","pdfjs","GlobalWorkerOptions","workerSrc","version","readMusicTag","musicSrc","mm","metadata","Musicplayer","tag","pictures","common","picture","CardMedia","image","decodeURIComponent","Typography","component","artist","album","volume","src","Player","require","imageExt","videoExt","pdfExt","audioExt","ListFilesPanel","previewAnchor","setPreviewAnchor","selectedFiles","setSelectedFiles","onHoverFile","setOnHoverFile","setselectedFile","showMultiMoveDialog","setShowMultiMoveDialog","imageSrc","setImageSrc","audioSrc","setaudioSrc","videoSrc","setVideoSrc","pdfSrc","setpdfSrc","isImage","filepath","includes","extname","isVideo","Toolbar","aria-label","TableContainer","Table","TableHead","TableRow","TableCell","Checkbox","checked","TableBody","hover","selected","indexOf","splice","cursor","onMouseOver","onMouseLeave","transcode_filepath","cover","isPdf","basename","v","Image","fluid","poster","Popper","UploadFilesSideBar","filtedFiles","filter","overflowY","cpu","memory","itemCount","min","itemSize","marginBottom","useStyles","makeStyles","theme","createStyles","popper","marginRight","maxHeight","position","borderRadius","shape","fade","palette","white","breakpoints","up","spacing","searchIcon","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchField","classes","setValue","className","CircularProgress","InputBase","placeholder","root","input","inputProps","onKeyDown","ClickAwayListener","onClickAway","Paper","createMuiTheme","main","flexGrow","menuButton","HomePage","show","setShow","ThemeProvider","AppBar","Hidden","mdUp","noWrap","Drawer","paddingTop","paddingBottom","smDown","implementation","tablet","PercentageChart","color2","minHeight","minWidth","dataKey","fill","isAnimationActive","SystemInfoPage","Container","columns","temperature","humidity","pressure","QuillDeltaToHtmlConverter","DocumentProvider","doc","currentDocument","saveDocument","newDocument","readFile","reader","FileReader","onload","result","readAsText","openFromLocal","getElementById","accept","addEventListener","converter","MarkdownToQuill","delta","convert","d","remove","saveToLocal","savingType","oepnFromLocal","DocumentContext","notchedOutline","border","fontWeight","background","fontSize","Titlebar","numChanges","setNumChanges","maxWidth","innerWidth","zIndex","placement","divider","borderLeft","withStyles","grouped","ToggleButtonGroup","ToolsBar","BlockEmbed","Quill","import","DividerBlot","blotName","tagName","register","BodyEditor","setNumberOfChanges","save","modules","toolbar","container","textTransform","menuItem","MenuBar","fileEl","setfileEl","textDecoration","getContentAnchorEl","anchorOrigin","horizontal","transformOrigin","parentMenuOpen","appbar","row","largeIcon","DocumentEditor","elevation","innerHeight","square","Snackbar","message","Backdrop","MusicProvider","musicResponse","play","music","currentTag","currentMusic","stop","musicList","MusicContext","getMusicPicture","CurrentPlayingPage","createRef","controls","loop","crossOrigin","autoPlay","meterWidth","audioId","MusicList","setWidth","setheight","isSelected","file2","stickyHeader","results","m","TableFooter","Pagination","count","total_pages","MusicSearchField","orange","backdrop","drawer","MusicPage","item","xs","md","hostname","ReactDOM","catalogs","setShowMenu","exact","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","code","keys","module","exports"],"mappings":"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","file":"static/js/main.91898b69.chunk.js","sourcesContent":["export const systemURL = \"/system/\"\nexport const url = \"/api/folder/\"\nexport const fileURL = \"/api/file/\"\nexport const documentURL = \"/api/document/\"\nexport const searchFileURL = \"/api/file?search=\"\n// download folder\nexport const downloadURL = \"/api/download/\"\n//music \nexport const musicURL = \"/api/music/\"","import Axios from \"axios\"\nimport { Folder, Parent, File as NasFile, Document as NasDocument, PaginationResponse } from './Folder';\n\nimport { url, documentURL, fileURL, searchFileURL, musicURL } from \"./urls\"\nimport { DeltaStatic } from \"quill\";\nimport * as path from 'path';\n\n\n\ntype UploadProgressCallback = (index: number, progress: number) => void\n\n\nexport class Nas {\n    menus: Parent[]\n    currentFolder?: Folder\n    searchedFiles: NasFile[];\n    errorMsg?: string\n\n\n    constructor() {\n        this.menus = []\n        this.searchedFiles = [];\n    }\n\n    moveFileTo = async (fileId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`\n                await Axios.patch(url, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Fetch list of music\n     */\n    fetchMusicList = async () => {\n        try {\n\n            let url = `${musicURL}`\n            let data = await Axios.get<PaginationResponse<NasFile>>(url)\n            return data.data\n        } catch (err) {\n            console.log(\"err\")\n            this.errorMsg = err;\n        }\n    }\n\n    moveDocument = async (documentId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${documentURL}${documentId}/`\n                await Axios.patch(url, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    moveFolderTo = async (folderId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let u = `${url}${folderId}/`\n                await Axios.patch(u, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Rename file\n     */\n    rename = async (fileId: number, newName: string) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`\n                await Axios.patch(url, { \"filename\": newName })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Search by keyword\n     * @param keyword Keyword\n     */\n    search = async (keyword: String) => {\n        try {\n            let url = `${searchFileURL}${keyword}`\n            let response = await Axios.get<NasFile[]>(url);\n            this.searchedFiles = response.data;\n        } catch (err) {\n            this.errorMsg = err\n        }\n    }\n\n    /**\n     * Get content by id\n     */\n    getContent = async (id?: number | string) => {\n        try {\n            let u = id ? `${url}${id}/` : url\n            let response = await Axios.get<Folder>(u)\n            const { data } = response\n            this.menus = data.parents\n            this.currentFolder = data\n            this.errorMsg = undefined\n        } catch (err) {\n            this.errorMsg = err\n            this.currentFolder = undefined\n        }\n    }\n\n\n    /**\n     * Upload file to server.\n     * If upload fail, will show alert dialog\n     * @param files: List of files\n     * @param onUpload: callback function\n     * @param isDir: Whether upload directory\n     */\n    uploadFile = async (files: File[], isDir: boolean, onUpload: (index: number, progress: number, current: number, total: number) => void, onFileUploaded: (file: File) => Promise<void>) => {\n        try {\n            let index = 0;\n            for (let f of files) {\n                if (this.currentFolder) {\n                    onUpload(index, 0, 0, f.size);\n\n                    let formData =\n                        isDir ?\n                            await this.getUploadFileAndCreateFolder(f) :\n                            this.getSingleUploadFile(f)\n\n                    await Axios.post<NasFile>(fileURL, formData,\n                        {\n                            headers: { 'Content-Type': 'multipart/form-data' },\n                            // eslint-disable-next-line no-loop-func\n                            onUploadProgress: (progress) => {\n                                let p = Math.round((progress.loaded * 100) / progress.total);\n                                onUpload(index, p, f.size * progress.loaded, progress.total)\n\n                            }\n\n                        })\n\n                    await this.getContent(this.currentFolder?.id)\n                    await onFileUploaded(f)\n\n                }\n                index += 1\n            }\n            onUpload(index, 100, 0, 0);\n        } catch (err) {\n            console.log(err)\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Only get the formdata but don't create folder\n     * @param file File\n     */\n    getSingleUploadFile(file: File): FormData | undefined {\n        if (this.currentFolder) {\n            let formData = new FormData()\n            formData.append(\"file\", file)\n            this.currentFolder.id && formData.append(\"parent\", this.currentFolder.id.toString())\n            return formData\n        }\n\n    }\n\n    /**\n     * Create folder for file. And then return the file\n     * For example file with path a/a.jpg will create a folder\n     * @param file Upload file\n     */\n    async getUploadFileAndCreateFolder(file: File): Promise<FormData | undefined> {\n        if (this.currentFolder) {\n            //@ts-ignore\n            let paths = file.webkitRelativePath\n\n            let folder: Folder | undefined;\n            let formData = new FormData()\n\n            formData.append(\"file\", file)\n            folder && folder.id && formData.append(\"parent\", `${folder?.id}`)\n            formData.append(\"paths\", paths)\n            return formData\n        }\n\n    }\n\n    /** \n     * Delete file by id\n     */\n    deleteFile = async (id: number, showAlert = true) => {\n        try {\n\n            let confirm = showAlert ? window.confirm(\"Are you sure you want to delete this file?\") : true\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${fileURL}${id}/`)\n                await this.getContent(this.currentFolder.id)\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Delete folder by id\n     */\n    deleteFolder = async (id: number) => {\n        try {\n            let confirm = window.confirm(\"Are you sure you want to delete this folder?\")\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${url}${id}/`)\n                await this.getContent(this.currentFolder.id)\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Create folder with name\n     * @param name\n     */\n    createNewFolder = async (name: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.post<Folder>(url, { name: name, parent: this.currentFolder.id ? this.currentFolder.id : null })\n            this.currentFolder.folders.push(res.data)\n        } else {\n            alert(\"Create new folder error: empty parent folder\")\n        }\n    }\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameFolder = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<Folder>(`${url}${id}/`, { \"name\": newName })\n            let index = this.currentFolder.folders.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.folders[index] = res.data\n            }\n        } else {\n            alert(\"Rename new folder error: empty parent folder\")\n        }\n    }\n\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameDocument = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { \"name\": newName })\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data\n            }\n        } else {\n            alert(\"Rename new document error\")\n        }\n    }\n\n    /**\n     * Get document from server.\n     * We need this function because we are getting abstract document object from server\n     * at begining(Which doesn't include content field).\n     * \n     * We will Call this function when user want to edit the file\n     */\n    getDocument = async (id: string | number): Promise<NasDocument> => {\n\n        let res = await Axios.get<NasDocument>(`${documentURL}${id}/`)\n        /// Need to parse the content into js object\n        return Promise.resolve({ ...res.data, content: JSON.parse(res.data.content) })\n\n    }\n\n    /**\n     * Create new document\n     * @param name: Name of the document\n     * @param data: EditorJS object\n     */\n    createNewDocument = async (name: string, data?: DeltaStatic, parent?: any) => {\n        let res = await Axios.post<NasDocument>(documentURL,\n            {\n                name: name, parent: this.currentFolder && this.currentFolder.id ? this.currentFolder.id : parent,\n                content: data ? JSON.stringify(data.ops) : undefined\n            })\n        this.currentFolder && this.currentFolder.documents.push(res.data)\n        return res.data\n    }\n\n    /**\n     * Update Document\n     * @param id: document's id\n     * @param data: EditorJS object\n     */\n    updateDocument = async (id: number, name: string, data: DeltaStatic) => {\n\n        let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { name, content: JSON.stringify(data?.ops) })\n        if (this.currentFolder) {\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data\n            }\n\n        }\n\n    }\n\n    /**\n     * Delete document by id\n     * \n     * @param id: document's id\n     */\n    deleteDocument = async (id: number) => {\n        if (this.currentFolder) {\n            let confirm = window.confirm(\"Do you want to delete this document?\")\n            if (confirm) {\n                let res = await Axios.delete<NasDocument>(`${documentURL}${id}/`)\n                await this.getContent(this.currentFolder.id)\n                return Promise.resolve(res.data)\n            } else {\n\n            }\n\n        } else {\n            alert(\"Create new folder error: empty parent folder\")\n            return Promise.reject()\n        }\n    }\n\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface HomePageContext {\n  nas: Nas;\n  selectedDocument?: NasDocument;\n  uploadInfo?: UploadInfo;\n  updateUploadInfo(info?: UploadInfo): void;\n  uploadFiles?: File[];\n  uploadedFiles: File[];\n  setUploadInfo(files?: File[]): void;\n  update(): void;\n  selectDocument(doc?: NasDocument): void;\n  setUploadedFiles(files: File[]): void;\n  isLoading: boolean;\n}\n\ninterface HomePageProps extends RouteComponentProps<RouterProps> {}\n\nexport class HomePageProvider extends Component<\n  HomePageProps,\n  HomePageContext\n> {\n  constructor(props: HomePageProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      selectDocument: this.selectDocument,\n      updateUploadInfo: this.updateUploadInfo,\n      setUploadInfo: this.setUploadInfo,\n      update: this.update,\n      uploadedFiles: [],\n      setUploadedFiles: this.setUploadedFile,\n      isLoading: false\n    };\n  }\n\n  setUploadedFile = (files: File[]) => {\n    this.setState({ uploadedFiles: files });\n  };\n\n  selectDocument = (document?: NasDocument) => {\n    this.setState({ selectedDocument: document });\n  };\n\n  updateUploadInfo = (uploadInfo?: UploadInfo) => {\n    this.setState({ uploadInfo });\n  };\n\n  setUploadInfo = (file: File[]) => {\n    this.setState({ uploadFiles: file });\n  };\n\n  async componentDidUpdate(oldProps: HomePageProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      await this.fetch(id);\n    }\n  }\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    await this.fetch(id);\n  }\n\n  fetch = async (id: any) => {\n    this.setState({ isLoading: true });\n    const { nas } = this.state;\n    await nas.getContent(id);\n    this.setState({ nas, isLoading: false });\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <HomePageContext.Provider value={this.state}>\n        {this.props.children}\n      </HomePageContext.Provider>\n    );\n  }\n}\n\nconst context: HomePageContext = {\n  nas: new Nas(),\n  uploadedFiles: [],\n  setUploadedFiles: (files: File[]) => {},\n  update: () => {},\n  selectDocument: () => {},\n  updateUploadInfo: (info: UploadInfo) => {},\n  setUploadInfo: (files: File[]) => {},\n  isLoading: false\n};\n\nexport const HomePageContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport * as path from \"path\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Button,\n  DialogActions\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  onClose(): void;\n  type: \"file\" | \"folder\" | \"document\";\n  selectedFile: NasFile | NasDocument | Folder;\n}\n\nexport default function RenameDialog(props: Props) {\n  const getDefaultName = () => {\n    switch (props.type) {\n      case \"file\":\n        let ext = path.extname((props.selectedFile as NasFile).filename);\n        return path.basename((props.selectedFile as NasFile).filename, ext);\n\n      case \"folder\":\n        return (props.selectedFile as Folder).name;\n\n      default:\n        return (props.selectedFile as NasDocument).name;\n    }\n  };\n\n  const { nas } = useContext(HomePageContext);\n\n  const [name, setName] = useState<string>(getDefaultName());\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>Rename</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          fullWidth\n          value={name}\n          onChange={e => {\n            setName(e.target.value);\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.onClose();\n            setName(\"\");\n          }}\n        >\n          cancel\n        </Button>\n        <Button\n          onClick={async () => {\n            if (name) {\n              switch (props.type) {\n                case \"file\":\n                  let ext = path.extname(\n                    (props.selectedFile as NasFile).filename\n                  );\n                  await nas.rename(props.selectedFile.id, `${name}${ext}`);\n                  break;\n                case \"folder\":\n                  await nas.renameFolder(props.selectedFile.id, name);\n                  break;\n                case \"document\":\n                  await nas.renameDocument(props.selectedFile.id, name);\n                  break;\n              }\n            }\n            props.onClose();\n          }}\n        >\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\n//@ts-ignore\n\ninterface MovingContext {\n  nas: Nas;\n  update(): void;\n}\n\ninterface MovingProps {}\n\nexport class MovingProvider extends Component<MovingProps, MovingContext> {\n  constructor(props: MovingProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      update: this.update\n    };\n  }\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <MovingContext.Provider value={this.state}>\n        {this.props.children}\n      </MovingContext.Provider>\n    );\n  }\n}\n\nconst context: MovingContext = {\n  nas: new Nas(),\n  update: () => {}\n};\n\nexport const MovingContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  CardActions,\n  IconButton,\n  CircularProgress,\n  Fade,\n  Collapse,\n  LinearProgress,\n  Tooltip,\n  Divider\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\n\nimport { Button } from \"semantic-ui-react\";\nimport { MovingContext } from \"../../../models/MovingContext\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../models/Folder\";\n\ninterface Props {\n  currentFile: Folder | NasFile | NasDocument;\n  onClose(): void;\n  onMove(file: Folder | NasFile | NasDocument, dest: Folder): Promise<void>;\n}\n\nexport default function MoveDialog(props: Props) {\n  const { nas, update } = useContext(MovingContext);\n  const { currentFile, onMove, onClose } = props;\n  const [loading, setLoading] = useState(false);\n  const [loadingFolder, setLoadingFolder] = useState(\n    nas.currentFolder === undefined\n  );\n\n  if (!nas.currentFolder) {\n    nas\n      .getContent(currentFile.parent as any)\n      .then(() => {\n        setLoadingFolder(false);\n      })\n      .catch(err => {\n        alert(`${err}`);\n        setLoadingFolder(false);\n      });\n  }\n\n  return (\n    <Card style={{ width: \"300px\" }}>\n      <CardContent>\n        <div>\n          <IconButton\n            disabled={nas.currentFolder?.parent === undefined}\n            onClick={async () => {\n              setLoadingFolder(true);\n              await nas.getContent(nas.currentFolder?.parent);\n              update();\n              setTimeout(() => {\n                setLoadingFolder(false);\n              }, 500);\n            }}\n          >\n            <ArrowBackIosIcon />\n          </IconButton>\n          {nas.currentFolder?.name ?? \"root\"}\n        </div>\n        <Collapse in={loadingFolder} mountOnEnter unmountOnExit>\n          <LinearProgress style={{ backgroundColor: \"#47bcff\" }} />\n        </Collapse>\n\n        <Collapse in={!loadingFolder} mountOnEnter unmountOnExit>\n          <List style={{ padding: 0 }}>\n            {nas.currentFolder?.folders?.map((f, i) => (\n              <ListItem\n                key={`folder-${i}`}\n                button\n                onClick={async () => {\n                  setLoadingFolder(true);\n                  await nas.getContent(f.id);\n                  update();\n                  setTimeout(() => {\n                    setLoadingFolder(false);\n                  }, 500);\n                }}\n              >\n                <ListItemIcon>\n                  <FolderIcon />\n                </ListItemIcon>\n                <ListItemText primary={f.name} />\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n        <Divider />\n      </CardContent>\n      <CardActions disableSpacing>\n        <Tooltip title=\"New Folder\">\n          <IconButton>\n            <CreateNewFolderIcon />\n          </IconButton>\n        </Tooltip>\n        <Button\n          loading={loading}\n          color=\"blue\"\n          style={{ marginLeft: \"auto\" }}\n          size=\"tiny\"\n          onClick={async () => {\n            if (currentFile && nas.currentFolder) {\n              try {\n                setLoading(true);\n                await onMove(currentFile, nas.currentFolder);\n                setTimeout(() => {\n                  setLoading(false);\n                  update();\n                  onClose();\n                  nas.currentFolder = undefined;\n                }, 400);\n              } catch (err) {\n                alert(\"Cannot move to this location\");\n                setLoading(false);\n              }\n            }\n          }}\n        >\n          Move Here\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Segment,\n  MessageHeader,\n  Message,\n  Icon,\n  Modal,\n  Image,\n  SemanticICONS,\n  Divider,\n  Label,\n  Button,\n  Popup,\n  Grid\n} from \"semantic-ui-react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  Collapse,\n  Dialog\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport Axios from \"axios\";\nimport \"video-react/dist/video-react.css\";\nimport { Folder, Document as NasDocument } from \"../../../../models/Folder\";\n\nimport { NavLink } from \"react-router-dom\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport RenameDialog from \"../files/RenameDialog\";\nimport { downloadURL } from \"../../../../models/urls\";\nimport MoveDialog from \"../../../document/components/MoveDialog\";\n\nexport default function ListPanel() {\n  const { nas, isLoading, update } = useContext(HomePageContext);\n  const [showMoveToDialog, setShowMoveToDialog] = useState(false);\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedFolder, setSelectedFolder] = useState<Folder | undefined>(\n    undefined\n  );\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      style={{\n        overflow: \"auto\",\n        overflowX: \"hidden\",\n        height: \"100%\",\n        color: \"blue\"\n      }}\n    >\n      <List>\n        <Grid centered>\n          <Grid.Row verticalAlign=\"middle\">\n            <Grid.Column width={5}>\n              {nas.currentFolder && nas.currentFolder.parent ? (\n                <NavLink to={`/home/${nas.currentFolder.parent}`}>\n                  <IconButton>\n                    <ArrowBackIosIcon />\n                  </IconButton>\n                </NavLink>\n              ) : (\n                <IconButton>\n                  <NavLink to={`/home`}>\n                    <ArrowBackIosIcon />\n                  </NavLink>{\" \"}\n                </IconButton>\n              )}\n            </Grid.Column>\n            <Grid.Column width={11}>\n              <div style={{ color: \"black\" }}>\n                {nas.currentFolder && nas.currentFolder.name}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        {nas.errorMsg && (\n          <Message error>\n            <MessageHeader>Network Error</MessageHeader>\n            <div>{nas.errorMsg.toString()}</div>\n          </Message>\n        )}\n        <Collapse in={!isLoading} timeout={300}>\n          {/*Render Folders*/}\n          {nas.currentFolder &&\n            nas.currentFolder.folders.map((f, i) => (\n              <ListItem button key={`folder-${f.id}`}>\n                <ListItemAvatar>\n                  <Icon name=\"folder\" size=\"large\" color=\"grey\"></Icon>\n                </ListItemAvatar>\n                <ListItemText\n                  onClick={() => {\n                    window.location.href = `#/home/${f.id}`;\n                  }}\n                  style={{ color: \"black\" }}\n                  primary={f.name}\n                  secondary={moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                />\n                {/** folder menu button */}\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={e => {\n                      handleClick(e);\n                      setSelectedFolder(f);\n                    }}\n                  >\n                    <MoreHorizIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n\n                {/** end folder menu button */}\n              </ListItem>\n            ))}\n        </Collapse>\n        {/*End Render Folders*/}\n      </List>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem\n          onClick={() => {\n            setShowRenameDialog(true);\n            handleClose();\n          }}\n        >\n          Rename\n        </MenuItem>\n        <MenuItem\n          onClick={async () => {\n            if (selectedFolder) {\n              let response = await Axios.post(\n                `${downloadURL}${selectedFolder.id}`\n              );\n\n              const link = document.createElement(\"a\");\n              link.href = `${response.data.download_url}`;\n              console.log(link.href);\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n            }\n          }}\n        >\n          Download Folder\n        </MenuItem>\n        <MenuItem\n          onClick={async () => {\n            if (selectedFolder) {\n              await nas.deleteFolder(selectedFolder.id);\n              handleClose();\n              update();\n              setSelectedFolder(undefined);\n            }\n          }}\n        >\n          Delete\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleClose();\n            setShowMoveToDialog(true);\n          }}\n        >\n          Move To\n        </MenuItem>\n      </Menu>\n\n      {selectedFolder && showRenameDialog && (\n        <RenameDialog\n          type=\"folder\"\n          selectedFile={selectedFolder}\n          open={showRenameDialog}\n          onClose={() => {\n            setSelectedFolder(undefined);\n            setShowRenameDialog(false);\n          }}\n        />\n      )}\n\n      {selectedFolder && showMoveToDialog && (\n        <Dialog\n          open={showMoveToDialog}\n          onClose={() => {\n            setShowMoveToDialog(false);\n            setSelectedFolder(undefined);\n          }}\n        >\n          <MoveDialog\n            currentFile={selectedFolder}\n            onClose={() => {\n              setShowMoveToDialog(false);\n              setSelectedFolder(undefined);\n            }}\n            onMove={async (file, dest) => {\n              if (file.id === dest.id) {\n                throw Error(\"Cannot move to this place\");\n              }\n              await nas.moveFolderTo(file.id, dest.id);\n              update();\n            }}\n          />\n        </Dialog>\n      )}\n    </div>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  isDir: boolean;\n}\n\nexport interface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n  uploadedDataSize: number;\n  totalDataSize: number;\n}\n\nexport default function UploadDialog(props: Props) {\n  const {\n    nas,\n    update,\n    uploadInfo,\n    setUploadInfo,\n    uploadFiles,\n    updateUploadInfo,\n    setUploadedFiles,\n    uploadedFiles\n  } = useContext(HomePageContext);\n\n  const onInputChange = e => {\n    let uploadFiles = e.target.files;\n    if (uploadFiles) {\n      let l: File[] = [];\n      for (var i = 0; i < uploadFiles.length; i++) {\n        l.push(uploadFiles[i]);\n      }\n\n      setUploadInfo(l);\n    }\n  };\n\n  return (\n    <Modal open={props.open}>\n      <Modal.Header>Select {props.isDir ? \"Folder\" : \"Files\"} </Modal.Header>\n      <Modal.Content>\n        <Grid.Row>\n          {props.isDir ? (\n            <input\n              type=\"file\"\n              multiple\n              webkitdirectory=\"\"\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          ) : (\n            <input\n              type=\"file\"\n              multiple\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          )}\n        </Grid.Row>\n        {uploadInfo && (\n          <Grid.Row style={{ marginTop: 20 }}>\n            <Segment>\n              <Progress\n                percent={uploadInfo.progress}\n                attached=\"top\"\n                color=\"green\"\n                active\n              />\n              {uploadInfo.currentName} {uploadInfo.currentIndex}/\n              {uploadInfo.total} --- {uploadInfo.progress} %\n              <Progress\n                percent={(uploadInfo.currentIndex / uploadInfo.total) * 100}\n                attached=\"bottom\"\n                color=\"blue\"\n                active\n              />\n            </Segment>\n          </Grid.Row>\n        )}\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> {uploadInfo ? \"Minimize\" : \"Close\"}\n        </Button>\n        <Button\n          disabled={uploadFiles === undefined}\n          color=\"green\"\n          loading={uploadInfo !== undefined}\n          inverted\n          onClick={async () => {\n            if (uploadFiles) {\n              await nas.uploadFile(\n                uploadFiles,\n                props.isDir,\n                (\n                  index: number,\n                  progress: number,\n                  current: number,\n                  total: number\n                ) => {\n                  updateUploadInfo({\n                    total: uploadFiles.length,\n                    currentIndex: index,\n                    currentName: uploadFiles[index]\n                      ? uploadFiles[index].name\n                      : \"Finished\",\n                    progress: progress,\n                    uploadedDataSize: current,\n                    totalDataSize: total\n                  });\n                },\n                async file => {\n                  uploadedFiles.push(file);\n                  // setUploadedFiles(uploadedFiles);\n                }\n              );\n              update();\n              setTimeout(() => {\n                props.setOpen(false);\n                setUploadInfo(undefined);\n                updateUploadInfo(undefined);\n              }, 300);\n            }\n          }}\n        >\n          <Icon name=\"checkmark\" /> Upload\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import { FieldIcon } from \"./Icon\";\nimport { FieldAction } from \"./Action\";\nimport { string } from \"prop-types\";\n\n\ninterface Extra {\n    default?: any;\n    help?: string;\n    related_model?: string;\n    choices?: Choice[]\n\n}\n\nexport enum Widget {\n    text = \"text\",\n    number = \"number\",\n    datetime = \"datetime\",\n    foreignkey = \"foreignkey\",\n    unknown = \"unknown\",\n    select = \"select\",\n    tomanyTable = \"tomany-table\"\n}\n\ninterface Validation {\n    length: Length\n\n}\n\nexport interface Choice {\n    label: string;\n    value: any;\n}\n\ninterface Length {\n    maximum?: number;\n    minimum?: number;\n}\n\nexport interface Schema {\n    label: string;\n    readonly: boolean;\n    /// Could be null\n    extra?: Extra;\n    /// Map's key\n    name: string;\n    /// If widget type is not defined in the enum, then\n    /// return widgetType.unknown\n    widget: Widget | string;\n    required: boolean;\n    /// could be null\n    validations?: Validation;\n    /// this is value will be displayed at screen if set,\n    /// else null\n    value?: any;\n    /// Set this value only if the field includes selection\n    choice?: Choice;\n    /// icon for the field\n    /// this will be set through the params of JSONForm widget\n    icon?: FieldIcon;\n    /// action for the field\n    /// this will be set through the params of JSONForm widget\n    action?: FieldAction;\n\n}\n\n\n\nexport class SchemaList {\n\n    schemaList: Schema[];\n\n    constructor(schemas: Schema[]) {\n        schemas.forEach(s => {\n            if (s.extra && s.extra.default) {\n                s.value = s.extra.default\n            }\n        })\n        this.schemaList = schemas;\n    }\n\n    merge(values: { [key: string]: any }) {\n        this.schemaList = this.schemaList.map((s) => {\n            if (values[s.name]) {\n                let value = values[s.name];\n                if (s.widget == Widget.select) {\n                    let choice: Choice | undefined = s.extra\n                        && s.extra.choices\n                        && s.extra.choices.find((c) => c.value === value)\n                    s.choice = choice;\n                } else if (s.widget == Widget.foreignkey) {\n                    let choice: Choice = value;\n                    s.choice = choice;\n                    s.value = value.value;\n                } else {\n                    s.value = value;\n                }\n            }\n            return s;\n        });\n    }\n\n    onSubmit(): { [key: string]: any } {\n        console.log(this.schemaList)\n        let maps: { [key: string]: any } = {};\n        this.schemaList.filter(s => !s.readonly && s.widget !== Widget.tomanyTable).forEach((s) => maps[s.name] = s.value);\n        console.log(maps)\n        return maps;\n\n    }\n\n}\n","import React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport { SchemaList, Schema, Widget } from \"../../JSONSchema/model/Schema\";\nimport { DialogContent } from \"@material-ui/core\";\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogTitle\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n}\n\ninterface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n}\n\nconst schema: Schema[] = [\n  {\n    name: \"name\",\n    label: \"Folder Name\",\n    readonly: false,\n    required: true,\n    widget: Widget.text\n  }\n];\n\nexport default function NewFolderDialog(props: Props) {\n  const { nas, update } = useContext(HomePageContext);\n  const [folderName, setFolderName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>New Folder</DialogTitle>\n      <DialogContent>\n        <TextField\n          onChange={e => {\n            setFolderName(e.target.value);\n          }}\n          value={folderName}\n          color=\"secondary\"\n          fullWidth\n          label=\"Folder Name\"\n          required\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> No\n        </Button>\n        <Button\n          basic\n          color=\"green\"\n          onClick={async () => {\n            setIsLoading(true);\n            await nas.createNewFolder(folderName);\n            update();\n            setIsLoading(false);\n            props.setOpen(false);\n          }}\n          loading={isLoading}\n        >\n          <Icon name=\"add\" /> Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function CreateDocumentDialog(props: Props) {\n  const [name, setName] = useState<string | undefined>();\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  return (\n    <Dialog open={props.open} onClose={() => props.setOpen(false)} fullWidth>\n      <DialogTitle>Document</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.setOpen(false);\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (name) {\n                await nas.createNewDocument(name, undefined);\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  Grid,\n  Breadcrumb,\n  Segment,\n  Card,\n  MenuItem as MMenuItem\n} from \"semantic-ui-react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport UploadDialog from \"../files/UploadDialog\";\nimport NewFolderDialog from \"../folders/NewFolderDialog\";\nimport Editor from \"../documents/Editor\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nimport { Menu } from \"semantic-ui-react\";\nimport CreateDocumentDialog from \"../documents/CreateDocumentDialog\";\n\nexport default function NasMenus() {\n  const { nas } = useContext(HomePageContext);\n\n  const [openFilesUpload, setOpenFilesUpload] = useState(false);\n  const [openFolderUpload, setOpenFolderUpload] = useState(false);\n  const [openNewFolder, setOpenNewFolder] = useState(false);\n  const [openEditor, setOpenEditor] = useState(false);\n\n  return (\n    <div>\n      <ContextMenu id=\"folder\">\n        <Menu id=\"folder\" vertical>\n          <MenuItem\n            onClick={() => {\n              setOpenNewFolder(true);\n            }}\n          >\n            <MMenuItem>New Folder</MMenuItem>\n          </MenuItem>\n        </Menu>\n      </ContextMenu>\n      <ContextMenu id=\"files\">\n        <Menu vertical>\n          <MMenuItem onClick={() => setOpenEditor(true)}>\n            New Document\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFilesUpload(true);\n            }}\n          >\n            Upload Files\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFolderUpload(true);\n            }}\n          >\n            Upload Folder\n          </MMenuItem>\n        </Menu>\n      </ContextMenu>\n      <UploadDialog\n        isDir={false}\n        open={openFilesUpload}\n        setOpen={setOpenFilesUpload}\n      />\n      <UploadDialog\n        isDir={true}\n        open={openFolderUpload}\n        setOpen={setOpenFolderUpload}\n      />\n      <NewFolderDialog\n        open={openNewFolder}\n        setOpen={setOpenNewFolder}\n      ></NewFolderDialog>\n      <CreateDocumentDialog open={openEditor} setOpen={setOpenEditor} />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { SystemInfo } from \"./Folder\";\nimport Axios from \"axios\";\nimport { systemURL } from \"./urls\";\n\ninterface SystemContext {\n  systemInfo?: SystemInfo;\n}\n\ninterface SystemProps {}\n\nexport class SystemProvider extends Component<SystemProps, SystemContext> {\n  constructor(props: SystemProps) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    let info = await this.fetchSystemInfo();\n    if (info) {\n      this.setState({ systemInfo: info });\n    }\n    // setInterval(async () => {\n    //   let info = await this.fetchSystemInfo();\n    //   console.log(\"Update system info\");\n    //   if (info) {\n    //     this.setState({ systemInfo: info });\n    //   }\n    // }, 20000);\n  }\n\n  fetchSystemInfo = async (): Promise<SystemInfo> => {\n    let info = await Axios.get<SystemInfo>(systemURL);\n    return Promise.resolve(info.data);\n  };\n\n  render() {\n    return (\n      <SystemContext.Provider value={this.state}>\n        {this.props.children}\n      </SystemContext.Provider>\n    );\n  }\n}\n\nconst context: SystemContext = {};\n\nexport const SystemContext = React.createContext(context);\n","export function formatBytes(bytes: number, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}","import React, { useContext } from \"react\";\nimport { Progress, Message } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\nimport { formatBytes } from \"../files/utils\";\n\nexport default function ComputerStatus() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return (\n      <Message>\n        <p>No Info Avaliable currently</p>\n      </Message>\n    );\n  }\n  return (\n    <div>\n      <span>\n        Used Sapce: {formatBytes(systemInfo.disk.used)}/\n        {formatBytes(systemInfo.disk.total)}\n      </span>\n      <Progress\n        percent={((systemInfo.disk.used / systemInfo.disk.total) * 100).toFixed(\n          2\n        )}\n        size=\"tiny\"\n        color=\"green\"\n      />\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button } from \"semantic-ui-react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ReactQuill, { Quill } from \"react-quill\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function Editor(props: Props) {\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n  const [name, setName] = useState<string | undefined>();\n  const [isChanged, setIsChanged] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  if (name === undefined) {\n    setName(document ? document.name : \"\");\n  }\n\n  return (\n    <Modal open={props.open} centered={false}>\n      <Modal.Header>\n        <TextField\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </Modal.Header>\n      <Modal.Content>\n        <ReactQuill\n          ref={instance => setEditor(instance != null ? instance : undefined)}\n          defaultValue={document && document.content}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            if (isChanged) {\n              let confirm = window.confirm(\n                \"Are you sure you want to exit? You will lose unsave data.\"\n              );\n              if (confirm) {\n                props.setOpen(false);\n              }\n            } else {\n              props.setOpen(false);\n            }\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (editor && name) {\n                let data = editor.getEditor().getContents();\n                if (document) {\n                  // update current document\n                  await nas.updateDocument(document.id, name, data);\n                } else {\n                  if (name !== \"\") {\n                    await nas.createNewDocument(name, data);\n                  } else {\n                    throw \"Name should not be empty\";\n                  }\n                }\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Save\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Grid, Header, Icon } from \"semantic-ui-react\";\nimport {\n  IconButton,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  CardActionArea\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Folder, Document as NasDocument } from \"../../../../models/Folder\";\nimport RenameDialog from \"./RenameDialog\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function FilesActions() {\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [shadow, setShadow] = useState<number>();\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState<NasDocument>();\n\n  return (\n    <div style={{ width: \"100%\", margin: \"20px\" }}>\n      <Grid>\n        <Grid.Row>\n          {/*Render documents*/}\n          {nas.currentFolder &&\n            nas.currentFolder.documents.map((f, i) => (\n              <Grid.Column\n                computer={4}\n                mobile={8}\n                style={{ padding: 10 }}\n                key={`document-${i}`}\n              >\n                <Card variant=\"outlined\" raised={shadow === i ? true : false}>\n                  <NavLink to={`/document/${f.id}`}>\n                    <CardActionArea style={{ height: 80 }}>\n                      <CardContent>\n                        <h3>{f.name}</h3>\n                      </CardContent>\n                    </CardActionArea>\n                  </NavLink>\n                  <CardActions>\n                    <IconButton\n                      onClick={async () => {\n                        await nas.deleteDocument(f.id);\n                        update();\n                      }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                    <IconButton\n                      onClick={async () => {\n                        setSelectedDocument(f);\n                        setShowRenameDialog(true);\n                      }}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                  </CardActions>\n                </Card>\n              </Grid.Column>\n            ))}\n          {/*End Render documents*/}\n        </Grid.Row>\n      </Grid>\n      {selectedDocument && (\n        <RenameDialog\n          type=\"document\"\n          open={showRenameDialog}\n          selectedFile={selectedDocument}\n          onClose={() => {\n            setShowRenameDialog(false);\n            setSelectedDocument(undefined);\n            update();\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\ninterface Props {\n  file: string;\n}\n\nexport default function PDFViewer(props: Props) {\n  const [pageNumber, setpageNumber] = useState(1);\n  const [current, setcurrent] = useState(1);\n\n  return (\n    <Document\n      file={props.file}\n      onLoadSuccess={pdf => {\n        setpageNumber(pdf.numPages);\n      }}\n    >\n      {Array.from(new Array(pageNumber), (el, index) => (\n        <Page key={`page-${index}`} pageNumber={index + 1} />\n      ))}\n    </Document>\n  );\n}\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  makeStyles,\n  CardContent,\n  Typography,\n  CardMedia\n} from \"@material-ui/core\";\nimport * as path from \"path\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport jsmediatags from \"jsmediatags\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport { TagType } from \"jsmediatags/types\";\nimport * as mm from \"music-metadata-browser\";\nimport { Grid } from \"semantic-ui-react\";\n\ninterface Props {\n  musicSrc: string;\n  onClose(): void;\n}\n\ninterface State {\n  tag?: mm.IAudioMetadata;\n}\n\nconst readMusicTag = async (musicSrc: string): Promise<mm.IAudioMetadata> => {\n  const metadata = await mm.fetchFromUrl(musicSrc);\n  return metadata;\n};\n\nexport default class Musicplayer extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentWillMount() {\n    const { musicSrc } = this.props;\n    let data = await readMusicTag(musicSrc);\n    this.setState({ tag: data });\n  }\n\n  async componentDidUpdate(oldProps: Props) {\n    const { musicSrc } = this.props;\n    if (oldProps.musicSrc !== musicSrc) {\n      let data = await readMusicTag(musicSrc);\n      this.setState({ tag: data });\n    }\n  }\n\n  render() {\n    const { musicSrc, onClose } = this.props;\n    const { tag } = this.state;\n    const pictures = tag?.common.picture;\n    let picture: string | undefined = undefined;\n    if (pictures && pictures.length > 0) {\n      picture = pictures[0].data.toString(\"base64\");\n      picture = \"data:image/jpeg;base64,\" + picture;\n    }\n    return (\n      <Dialog\n        fullWidth\n        open={musicSrc !== undefined}\n        onClose={onClose}\n        style={{ overflowX: \"hidden\" }}\n      >\n        <CardMedia\n          style={{ height: 500, width: \"100%\" }}\n          image={picture}\n          title={decodeURIComponent(\n            tag?.common.title ?? path.basename(musicSrc)\n          )}\n        />\n        <DialogContent>\n          <Typography component=\"h5\" variant=\"h5\">\n            {decodeURIComponent(tag?.common.title ?? path.basename(musicSrc))}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {tag?.common.artist}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {tag?.common.album}\n          </Typography>\n        </DialogContent>\n        <div>\n          <AudioPlayer volume={0.5} src={musicSrc} />\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Icon,\n  Modal,\n  Image,\n  SemanticICONS,\n  Dropdown,\n  CardContent\n} from \"semantic-ui-react\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  TableContainer,\n  TableHead,\n  Table,\n  TableCell,\n  TableRow,\n  Menu,\n  MenuItem,\n  TableBody,\n  IconButton,\n  Popper,\n  Paper,\n  CardMedia,\n  Card,\n  CardActionArea,\n  Checkbox,\n  Toolbar,\n  Tooltip,\n  DialogTitle,\n  DialogContent\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport \"video-react/dist/video-react.css\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../../models/Folder\";\nimport Editor from \"../documents/Editor\";\nimport { downloadURL, fileURL } from \"../../../../models/urls\";\nimport { Grid } from \"semantic-ui-react\";\nimport FilesActions from \"./FilesActions\";\nimport RenameDialog from \"./RenameDialog\";\nimport { formatBytes } from \"./utils\";\nimport PDFViewer from \"./pdf/PDFViewer\";\nimport { Dialog } from \"@material-ui/core\";\nimport MoveDialog from \"../../../document/components/MoveDialog\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport Musicplayer from \"./music/Musicplayer\";\n\nconst { Player } = require(\"video-react\");\n\nconst imageExt = [\".jpg\", \".png\", \".bmp\", \".JPG\", \".gif\", \".jpeg\", \".JPEG\"];\nconst videoExt = [\".mov\", \".mp4\", \".avi\", \".m4v\", \".MOV\", \".MP4\"];\nconst pdfExt = [\".pdf\"];\nconst audioExt = [\".mp3\", \".m4a\"];\n\nexport default function ListFilesPanel() {\n  const {\n    nas,\n    isLoading,\n    update,\n    selectedDocument,\n    selectDocument\n  } = useContext(HomePageContext);\n  const [previewAnchor, setPreviewAnchor] = React.useState<null | HTMLElement>(\n    null\n  );\n  const [selectedFiles, setSelectedFiles] = useState<NasFile[]>([]);\n  const [onHoverFile, setOnHoverFile] = useState<NasFile>();\n  const [selectedFile, setselectedFile] = useState<NasFile>();\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [showMoveToDialog, setShowMoveToDialog] = useState(false);\n  const [showMultiMoveDialog, setShowMultiMoveDialog] = useState(false);\n  const [imageSrc, setImageSrc] = useState<string | undefined>(undefined);\n  const [audioSrc, setaudioSrc] = useState<string | undefined>(undefined);\n  const [videoSrc, setVideoSrc] = useState<\n    { src: string; cover: string } | undefined\n  >(undefined);\n\n  const [pdfSrc, setpdfSrc] = useState<string | undefined>(undefined);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClosePreview = () => {\n    setPreviewAnchor(null);\n  };\n\n  function isImage(filepath: string): boolean {\n    return imageExt.includes(path.extname(filepath));\n  }\n\n  function isVideo(filepath: string): boolean {\n    return videoExt.includes(path.extname(filepath));\n  }\n\n  function isPdf(filepath: string): boolean {\n    return pdfExt.includes(path.extname(filepath));\n  }\n\n  function isAudio(filepath: string): boolean {\n    return audioExt.includes(path.extname(filepath));\n  }\n\n  function getIcon(filepath: string): SemanticICONS {\n    if (isImage(filepath)) {\n      return \"images\";\n    } else if (isVideo(filepath)) {\n      return \"file video\";\n    }\n\n    return \"file\";\n  }\n\n  return (\n    <div id=\"file-list\">\n      <Grid>\n        <FilesActions />\n        <Toolbar>\n          <div>\n            {selectedFiles.length === 0 ? (\n              <h2>Files</h2>\n            ) : (\n              <h2>Selected {selectedFiles.length} files</h2>\n            )}\n          </div>\n          {selectedFiles.length === 0 ? (\n            <div> </div>\n          ) : (\n            <div>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={async () => {\n                    let confirm = window.confirm(\n                      \"Do you want to delete these files?\"\n                    );\n                    if (confirm) {\n                      for (let file of selectedFiles) {\n                        await nas.deleteFile(file.id, false);\n                        update();\n                      }\n                      setSelectedFiles([]);\n                    }\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Move To\">\n                <IconButton\n                  aria-label=\"Move To\"\n                  onClick={async () => {\n                    setShowMultiMoveDialog(true);\n                  }}\n                >\n                  <FileCopyIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n          )}\n        </Toolbar>\n        <Grid.Row style={{ overflow: \"auto\", overflowX: \"hidden\" }}>\n          {/** Render files */}\n          {nas.currentFolder && nas.currentFolder.files.length > 0 && (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox\n                        onChange={e => {\n                          if (e.target.checked) {\n                            if (nas.currentFolder)\n                              setSelectedFiles(nas.currentFolder.files);\n                          } else {\n                            setSelectedFiles([]);\n                          }\n                          update();\n                        }}\n                        checked={\n                          selectedFiles.length ===\n                          nas.currentFolder.files.length\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Last Modify</TableCell>\n                    <TableCell>Size</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {nas.currentFolder.files.map((f, i) => (\n                    <TableRow hover selected={selectedFiles.includes(f)}>\n                      <TableCell>\n                        <Checkbox\n                          checked={selectedFiles.includes(f)}\n                          onChange={e => {\n                            if (e.target.checked) {\n                              selectedFiles.push(f);\n                            } else {\n                              let index = selectedFiles.indexOf(f);\n                              selectedFiles.splice(index, 1);\n                            }\n                            update();\n                            setSelectedFiles(selectedFiles);\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        style={{ cursor: \"grab\" }}\n                        onMouseOver={e => {\n                          setPreviewAnchor(e.currentTarget);\n                          setOnHoverFile(f);\n                        }}\n                        onMouseLeave={() => {\n                          handleClosePreview();\n                          setOnHoverFile(undefined);\n                        }}\n                        onClick={() => {\n                          if (isImage(f.file)) {\n                            setImageSrc(f.file);\n                          } else if (isVideo(f.file)) {\n                            setVideoSrc({\n                              src: f.transcode_filepath ?? f.file,\n                              cover: f.cover\n                            });\n                          } else if (isAudio(f.file)) {\n                            setaudioSrc(f.file);\n                          } else if (isPdf(f.file)) {\n                            setpdfSrc(f.file);\n                          }\n                        }}\n                      >\n                        <Icon\n                          name={getIcon(f.file)}\n                          size=\"large\"\n                          color=\"teal\"\n                        />\n                        {path.basename(f.filename)}\n                      </TableCell>\n                      <TableCell>\n                        {moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                      </TableCell>\n                      <TableCell>{formatBytes(f.size)}</TableCell>\n                      <TableCell>\n                        <IconButton\n                          onClick={e => {\n                            setselectedFile(f);\n                            handleClick(e);\n                          }}\n                        >\n                          <MoreHorizIcon></MoreHorizIcon>\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n          {/** End Render files */}\n        </Grid.Row>\n        {/** File Action Menu */}\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem\n            onClick={() => {\n              /// Download from link\n              if (selectedFile) {\n                const link = document.createElement(\"a\");\n                link.href = `${selectedFile.file}`;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n              }\n              handleClose();\n            }}\n          >\n            Download\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                handleClose();\n                setShowRenameDialog(true);\n              }\n            }}\n          >\n            Rename\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                await nas.deleteFile(selectedFile.id);\n                handleClose();\n                update();\n              }\n            }}\n          >\n            Delete\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                handleClose();\n                setShowMoveToDialog(true);\n              }\n            }}\n          >\n            Move To\n          </MenuItem>\n        </Menu>\n        {audioSrc && (\n          <Musicplayer\n            musicSrc={audioSrc}\n            onClose={() => setaudioSrc(undefined)}\n          />\n        )}\n        {/** end file action menu */}\n        {selectedDocument && (\n          <Editor\n            open={selectedDocument !== undefined}\n            setOpen={v => {\n              !v && selectDocument(undefined);\n            }}\n            document={selectedDocument}\n          ></Editor>\n        )}\n        {/** Preview image */}\n        <Modal\n          open={imageSrc !== undefined}\n          onClose={() => setImageSrc(undefined)}\n        >\n          <Image src={imageSrc} fluid></Image>\n        </Modal>\n        {/** End preview image */}\n        {/** Preview image */}\n\n        {/** End preview image */}\n        {/** Preview video */}\n        <Modal\n          open={videoSrc !== undefined}\n          onClose={() => setVideoSrc(undefined)}\n        >\n          <Player poster={videoSrc && videoSrc.cover}>\n            <source src={videoSrc && videoSrc.src} />\n          </Player>\n        </Modal>\n        {/** End preview video */}\n        {/** Preview pdf */}\n        <Modal open={pdfSrc !== undefined} onClose={() => setpdfSrc(undefined)}>\n          {pdfSrc && <PDFViewer file={pdfSrc} />}\n        </Modal>\n        {/** End preview pdf */}\n        {selectedFile && (\n          <Dialog\n            open={showMoveToDialog}\n            onClose={() => {\n              setselectedFile(undefined);\n              setShowMoveToDialog(false);\n            }}\n          >\n            <MoveDialog\n              currentFile={selectedFile}\n              onClose={() => {\n                setselectedFile(undefined);\n                setShowMoveToDialog(false);\n              }}\n              onMove={async (file, dest) => {\n                await nas.moveFileTo(file.id, dest.id);\n                update();\n              }}\n            />\n          </Dialog>\n        )}\n        {selectedFiles.length > 0 && (\n          <Dialog\n            open={showMultiMoveDialog}\n            onClose={() => {\n              setShowMultiMoveDialog(false);\n            }}\n          >\n            <MoveDialog\n              currentFile={selectedFiles[0]}\n              onClose={() => {\n                setSelectedFiles([]);\n                setShowMultiMoveDialog(false);\n              }}\n              onMove={async (file, dest) => {\n                for (let f of selectedFiles) {\n                  await nas.moveFileTo(f.id, dest.id);\n                  update();\n                }\n              }}\n            />\n          </Dialog>\n        )}\n        {selectedFile && (\n          <RenameDialog\n            type=\"file\"\n            open={showRenameDialog}\n            selectedFile={selectedFile}\n            onClose={() => {\n              setShowRenameDialog(false);\n              setselectedFile(undefined);\n            }}\n          />\n        )}\n      </Grid>\n      {/** Preview */}\n      <Popper open={Boolean(previewAnchor)} anchorEl={previewAnchor}>\n        {onHoverFile && (\n          <Card style={{ padding: 10 }}>\n            {isImage(onHoverFile.filename) && (\n              <CardMedia\n                style={{ height: 140, width: 140 }}\n                image={onHoverFile.file}\n              />\n            )}\n            {isVideo(onHoverFile.filename) ? (\n              onHoverFile.cover ? (\n                <CardActionArea>\n                  <CardMedia\n                    style={{ height: 140, width: 140 }}\n                    image={onHoverFile.cover}\n                  />\n                  <CardContent> {formatBytes(onHoverFile.size)}</CardContent>\n                </CardActionArea>\n              ) : (\n                <div>\n                  {onHoverFile.filename} - {formatBytes(onHoverFile.size)}\n                </div>\n              )\n            ) : (\n              <div>\n                {onHoverFile.filename} - {formatBytes(onHoverFile.size)}\n              </div>\n            )}\n          </Card>\n        )}\n      </Popper>\n      {/** end preview */}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport List from \"@material-ui/core/List\";\nimport { FixedSizeList } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { Icon, Grid, Item } from \"semantic-ui-react\";\nimport {\n  ListItem,\n  ListItemText,\n  LinearProgress,\n  Box,\n  Typography\n} from \"@material-ui/core\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\n\nexport default function UploadFilesSideBar() {\n  const { uploadFiles, uploadInfo, uploadedFiles } = useContext(\n    HomePageContext\n  );\n  const { systemInfo } = useContext(SystemContext);\n  let filtedFiles = uploadFiles\n    ? uploadFiles.filter(f => !uploadedFiles.includes(f))\n    : [];\n\n  return (\n    <List style={{ overflowY: \"hidden\", height: \"100%\", overflowX: \"hidden\" }}>\n      {systemInfo && (\n        <Grid>\n          <Grid.Row style={{ height: 40 }}>\n            <Grid.Column width={8}>\n              <div>CPU</div>\n              <LinearProgress\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={systemInfo.cpu}\n              />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <div>Memory</div>\n              <LinearProgress\n                title=\"Memory\"\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={(systemInfo.memory.used / systemInfo.memory.total) * 100}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )}\n      <AutoSizer>\n        {({ height, width }) => (\n          <FixedSizeList\n            height={height - 100}\n            itemCount={Math.min(3000, filtedFiles.length)}\n            itemSize={80}\n            width={width}\n          >\n            {({ index, style }) => (\n              <ListItem key={`upload-${index}`} style={style}>\n                <ListItemIcon>\n                  <Icon name=\"file\" />\n                </ListItemIcon>\n                <ListItemText\n                  primary={filtedFiles[index].name}\n                  secondary={\n                    <LinearProgress\n                      color=\"secondary\"\n                      variant={\n                        uploadInfo && uploadInfo.currentIndex === index\n                          ? \"determinate\"\n                          : \"indeterminate\"\n                      }\n                      value={\n                        uploadInfo && uploadInfo.currentIndex === index\n                          ? uploadInfo.progress\n                          : undefined\n                      }\n                    />\n                  }\n                />\n              </ListItem>\n            )}\n          </FixedSizeList>\n        )}\n      </AutoSizer>\n      {uploadFiles === undefined && (\n        <Grid centered verticalAlign=\"middle\">\n          <div style={{ marginTop: \"50px\", marginBottom: \"auto\" }}>\n            No Pending Uploads\n          </div>\n        </Grid>\n      )}\n    </List>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  fade,\n  InputBase,\n  MenuList,\n  Popper,\n  Paper,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../../models/Folder\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popper: {\n      marginTop: 10,\n      marginRight: 15,\n      width: \"40ch\",\n      maxHeight: 400,\n      overflow: \"auto\"\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport default function SearchField() {\n  const classes = useStyles();\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [value, setValue] = useState(\"\");\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        {isLoading ? (\n          <CircularProgress size={20} color=\"inherit\" />\n        ) : (\n          <SearchIcon />\n        )}\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput\n        }}\n        inputProps={{ \"aria-label\": \"search\" }}\n        onClick={e => setAnchorEl(e.currentTarget)}\n        onChange={async e => {\n          let keyword = e.target.value;\n          setValue(keyword);\n        }}\n        onKeyDown={async e => {\n          if (e.key === \"Enter\") {\n            setIsLoading(true);\n            await nas.search(value);\n            update();\n            setIsLoading(false);\n          }\n        }}\n      />\n\n      <Popper open={Boolean(anchorEl)} anchorEl={anchorEl}>\n        <ClickAwayListener onClickAway={handleClose}>\n          <Paper className={classes.popper}>\n            {nas.searchedFiles.length === 0 && (\n              <MenuItem>No File. Press Enter to search</MenuItem>\n            )}\n            {nas.searchedFiles.map(f => (\n              <MenuItem\n                key={f.id}\n                onClick={() => {\n                  window.location.href = `#/home/${f.parent}`;\n                  handleClose();\n                }}\n              >\n                {path.basename(f.filename)}\n              </MenuItem>\n            ))}\n          </Paper>\n        </ClickAwayListener>\n      </Popper>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport Header from \"./components/others/Header\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport ListPanel from \"./components/folders/ListFolderPanel\";\nimport { Segment, Grid, Menu } from \"semantic-ui-react\";\nimport NasMenus from \"./components/others/NasMenu\";\nimport ComputerStatus from \"./components/others/ComputerStatus\";\nimport ListFilesPanel from \"./components/files/ListFilesPanel\";\nimport { HomePageContext } from \"../../models/HomeContext\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport UploadFilesSideBar from \"./components/files/UploadFilesSideBar\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport {\n  Hidden,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n  Typography,\n  InputBase,\n  createMuiTheme,\n  ThemeProvider,\n  Tooltip\n} from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport SearchField from \"./components/files/SearchField\";\nimport { NavLink } from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fafafa\"\n    }\n  }\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport function HomePage() {\n  const { nas, isLoading, update } = useContext(HomePageContext);\n  const [show, setShow] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div\n        id=\"home\"\n        style={{\n          height: \"100%\",\n          overflow: \"hidden\"\n        }}\n      >\n        {/** App Bar */}\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Hidden mdUp>\n              <IconButton\n                className={classes.menuButton}\n                color=\"inherit\"\n                onClick={() => {\n                  setShow(true);\n                }}\n              >\n                <MenuIcon />\n              </IconButton>\n            </Hidden>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Django Nas\n            </Typography>\n            <Tooltip title=\"Open Music App\">\n              <NavLink to=\"/music\">\n                <IconButton>\n                  <OpenInNewIcon />\n                </IconButton>\n              </NavLink>\n            </Tooltip>\n            <SearchField />\n          </Toolbar>\n        </AppBar>\n        {/** End App Bar */}\n        {/** drawer */}\n        <Drawer open={show} onClose={() => setShow(false)}>\n          <div style={{ width: 300, height: \"100%\" }}>\n            <ListPanel />\n          </div>\n        </Drawer>\n        {/** end drawer */}\n        <Segment\n          loading={isLoading}\n          style={{\n            height: \"100%\",\n            margin: 0\n          }}\n        >\n          <Grid\n            style={{\n              height: \"100%\",\n              overflow: \"hidden\",\n              position: \"relative\"\n            }}\n          >\n            <Grid.Row\n              style={{ height: \"100%\", paddingTop: 0, paddingBottom: 0 }}\n            >\n              {/** left side */}\n              <Hidden smDown implementation=\"js\">\n                <Grid.Column\n                  computer={3}\n                  style={{ height: \"100%\", backgroundColor: \"#fcfcfc\" }}\n                >\n                  <ContextMenuTrigger id=\"folder\">\n                    <Grid.Row style={{ height: \"92%\" }}>\n                      <ListPanel />\n                    </Grid.Row>\n                    <Grid.Row>\n                      <ComputerStatus />\n                    </Grid.Row>\n                  </ContextMenuTrigger>\n                </Grid.Column>\n              </Hidden>\n              {/** end left */}\n              <Grid.Column\n                computer={10}\n                mobile={16}\n                tablet={16}\n                style={{ height: \"100%\" }}\n              >\n                <ContextMenuTrigger id=\"files\">\n                  <ListFilesPanel />\n                </ContextMenuTrigger>\n              </Grid.Column>\n              {/** right side */}\n              <Hidden smDown implementation=\"js\">\n                <Grid.Column\n                  computer={3}\n                  style={{\n                    height: \"100%\",\n                    backgroundColor: \"#fcfcfc\"\n                  }}\n                >\n                  <UploadFilesSideBar />\n                </Grid.Column>\n              </Hidden>\n              {/** end right side */}\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        <NasMenus />\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  Cell\n} from \"recharts\";\nimport { Segment } from \"semantic-ui-react\";\n\ninterface Props {\n  title: string;\n  used: number;\n  total: number;\n  color: string;\n  color2: string;\n}\nconst data02 = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\nexport default function PercentageChart(props: Props) {\n  const { title, used, total, color, color2 } = props;\n  let data = [\n    {\n      name: \"Used\",\n      value: used\n    },\n    { name: \"Available\", value: total - used }\n  ];\n\n  return (\n    <Segment>\n      <ResponsiveContainer\n        minHeight={300}\n        height=\"100%\"\n        width=\"100%\"\n        minWidth={200}\n      >\n        <PieChart>\n          <Pie\n            data={data}\n            dataKey=\"value\"\n            label\n            fill={color}\n            isAnimationActive={false}\n          >\n            <Cell fill={color}></Cell>\n            <Cell fill={color2}></Cell>\n          </Pie>\n\n          <Tooltip></Tooltip>\n        </PieChart>\n      </ResponsiveContainer>\n      <span>{title}</span>\n    </Segment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Container, Grid, Segment } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../models/SystemContext\";\nimport PercentageChart from \"./PercentageChart\";\n\nexport default function SystemInfoPage() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return <div>Infomation Not Available</div>;\n  }\n\n  return (\n    <div id=\"home\" style={{ width: \"100%\", color: \"black\" }}>\n      <Container>\n        <h1>System Info</h1>\n        <Grid columns={2}>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.disk.used / 1024 / 1024)}\n              total={Math.round(systemInfo.disk.total / 1024 / 1024)}\n              title=\"Disk(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.memory.used / 1024 / 1024)}\n              total={Math.round(systemInfo.memory.total / 1024 / 1024)}\n              title=\"Memory(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={systemInfo.cpu}\n              total={100}\n              title=\"CPU Usage(Percentage)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Temperature</h4>\n              <h1>\n                {systemInfo.temperature\n                  ? systemInfo.temperature.toFixed(1)\n                  : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Humidity</h4>\n              <h1>\n                {systemInfo.humidity ? systemInfo.humidity.toFixed(1) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Pressure</h4>\n              <h1>\n                {systemInfo.pressure ? systemInfo.pressure.toFixed(2) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\nimport * as path from \"path\";\n//@ts-ignore\nimport { MarkdownToQuill } from \"md-to-quill-delta\";\nconst QuillDeltaToHtmlConverter = require(\"quill-delta-to-html\")\n  .QuillDeltaToHtmlConverter;\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface DocumentContext {\n  nas: Nas;\n  isLoading: boolean;\n  errorMsg?: string;\n  currentDocument?: NasDocument;\n  update(): void;\n  updateDocument(doc: NasDocument): void;\n  saveDocument(): Promise<void>;\n  saveToLocal(savingType: \"html\" | \"pdf\"): Promise<void>;\n  oepnFromLocal(): Promise<void>;\n  newDocument(name: string): Promise<void>;\n}\n\ninterface DocumentProps extends RouteComponentProps<RouterProps> {}\n\nexport class DocumentProvider extends Component<\n  DocumentProps,\n  DocumentContext\n> {\n  constructor(props: DocumentProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      isLoading: false,\n      update: this.update,\n      updateDocument: this.update,\n      saveDocument: this.saveDocument,\n      saveToLocal: this.saveToLocal,\n      oepnFromLocal: this.openFromLocal,\n      newDocument: this.newDocument\n    };\n  }\n\n  async componentDidUpdate(oldProps: DocumentProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      if (id) {\n        await this.fetch(id);\n      }\n    }\n  }\n\n  updateDocument = (doc: NasDocument) => {\n    this.setState({ currentDocument: doc });\n  };\n\n  saveDocument = async () => {\n    try {\n      let doc = this.state.currentDocument;\n      if (doc) {\n        this.setState({ isLoading: true });\n        await this.state.nas.updateDocument(doc.id, doc.name, doc.content);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to save\" });\n    } finally {\n      this.setState({ isLoading: false });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  newDocument = async (name: string) => {};\n\n  readFile = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onload = content => {\n        let text = reader.result;\n\n        resolve(text as string);\n      };\n      reader.readAsText(file);\n    });\n  };\n\n  openFromLocal = async () => {\n    const { currentDocument, nas } = this.state;\n    try {\n      let input =\n        (document.getElementById(\"new file\") as HTMLInputElement) ??\n        document.createElement(\"input\");\n      input.id = \"new file\";\n      input.type = \"file\";\n      input.accept = \".md,.html\";\n      input.multiple = false;\n      input.click();\n      input.addEventListener(\"change\", async e => {\n        this.setState({\n          isLoading: true,\n          errorMsg: \"Reading Local Document...\"\n        });\n        let files = input.files;\n        if (files) {\n          let file = files[0];\n          let ext = path.extname(file.name);\n          if (ext === \".md\") {\n            const converter = new MarkdownToQuill();\n            let content = await this.readFile(file);\n            let delta = converter.convert(content);\n            this.setState({ errorMsg: \"Creating New Document\" });\n            let d = await nas.createNewDocument(\n              file.name,\n              { ops: delta } as any,\n              currentDocument?.parent\n            );\n            this.setState({\n              errorMsg: \"Document Created. Preparing for redirecting\"\n            });\n            setTimeout(() => {\n              this.setState({ isLoading: false, errorMsg: undefined });\n              window.location.href = \"#/document/\" + d.id;\n            }, 1500);\n          }\n        }\n        input.remove();\n      });\n    } catch (err) {\n      this.setState({ errorMsg: \"Unable to open file\", isLoading: false });\n    }\n  };\n\n  saveToLocal = async (savingType: \"html\" | \"pdf\") => {\n    let doc = this.state.currentDocument;\n    if (doc) {\n      switch (savingType) {\n        case \"html\":\n          let converter = new QuillDeltaToHtmlConverter(doc.content);\n          let html = converter.convert();\n          break;\n      }\n    }\n  };\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    if (id) {\n      await this.fetch(id);\n    }\n  }\n\n  fetch = async (id: string) => {\n    try {\n      this.setState({ isLoading: true });\n      let document = await this.state.nas.getDocument(id);\n      setTimeout(() => {\n        this.setState({ currentDocument: document });\n      }, 400);\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to open\" });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 500);\n      this.setState({ currentDocument: undefined });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <DocumentContext.Provider value={this.state}>\n        {this.props.children}\n      </DocumentContext.Provider>\n    );\n  }\n}\n\nconst context: DocumentContext = {\n  nas: new Nas(),\n  update: () => {},\n  updateDocument: (d: NasDocument) => {},\n  saveDocument: () => {\n    return Promise.resolve();\n  },\n  oepnFromLocal: () => {\n    return Promise.resolve();\n  },\n  newDocument: () => {\n    return Promise.resolve();\n  },\n  saveToLocal: () => {\n    return Promise.resolve();\n  },\n  isLoading: false\n};\n\nexport const DocumentContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport AutosizeInput from \"react-input-autosize\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  Popper,\n  ClickAwayListener,\n  Paper,\n  Fade,\n  Slide,\n  Collapse\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/Folder\";\nimport MoveDialog from \"./MoveDialog\";\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"18px\",\n    paddingTop: 5\n  },\n  button: {\n    padding: \"0px 5px\"\n  }\n}));\n\nexport default function Titlebar() {\n  const {\n    currentDocument,\n    updateDocument,\n    saveDocument,\n    isLoading,\n    nas,\n    update\n  } = useContext(DocumentContext);\n\n  const [anchorEl, setAnchorEl] = React.useState<undefined | HTMLElement>();\n  const [numChanges, setNumChanges] = useState(0);\n  const classes = useStyles();\n\n  if (currentDocument === undefined && !isLoading) {\n    return (\n      <div>\n        <AutosizeInput\n          id=\"test-input\"\n          className={classes.notchedOutline}\n          style={{\n            maxWidth: window.innerWidth * 0.8\n          }}\n          value={\"Cannot fetch document\"}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ marginTop: 15, marginLeft: 5 }}>\n      <Collapse in={isLoading && !currentDocument} unmountOnExit mountOnEnter>\n        <div style={{ height: 24, width: 100 }}>\n          <LinearProgress\n            variant=\"indeterminate\"\n            style={{ marginTop: 15, width: 100 }}\n          />\n        </div>\n      </Collapse>\n      <Collapse\n        in={!isLoading && currentDocument !== undefined}\n        mountOnEnter\n        unmountOnExit\n      >\n        <div>\n          <Tooltip title=\"Rename\">\n            <ClickAwayListener\n              onClickAway={async () => {\n                if (numChanges > 0) {\n                  await saveDocument();\n                  setNumChanges(0);\n                }\n              }}\n            >\n              <AutosizeInput\n                id=\"test-input\"\n                className={classes.notchedOutline}\n                style={{\n                  maxWidth: window.innerWidth * 0.8\n                }}\n                value={currentDocument?.name}\n                onChange={e => {\n                  if (currentDocument) {\n                    currentDocument.name = e.target.value;\n                    setNumChanges(numChanges + 1);\n                    updateDocument(currentDocument);\n                  }\n                }}\n              />\n            </ClickAwayListener>\n          </Tooltip>\n          <Tooltip title=\"Move\">\n            <IconButton\n              className={classes.button}\n              onClick={async e => {\n                setAnchorEl(e.currentTarget);\n                if (currentDocument) {\n                  await nas.getContent(currentDocument.parent as number);\n                }\n\n                update();\n              }}\n            >\n              <FolderIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </Collapse>\n\n      {anchorEl && (\n        <ClickAwayListener onClickAway={() => setAnchorEl(undefined)}>\n          <Popper\n            open={Boolean(anchorEl)}\n            anchorEl={anchorEl}\n            style={{ zIndex: 2000 }}\n            placement=\"right-end\"\n          >\n            {currentDocument && (\n              <MoveDialog\n                currentFile={currentDocument}\n                onClose={() => setAnchorEl(undefined)}\n                onMove={async (file: NasDocument, dest) => {\n                  await nas.moveDocument(file.id, dest.id);\n                  currentDocument.parent = dest.id;\n                  updateDocument(currentDocument);\n                }}\n              />\n            )}\n          </Popper>\n        </ClickAwayListener>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport FormatBoldIcon from \"@material-ui/icons/FormatBold\";\nimport FormatItalicIcon from \"@material-ui/icons/FormatItalic\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\nimport {\n  IconButton,\n  makeStyles,\n  Theme,\n  createStyles,\n  withStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    divider: {\n      height: \"10px\",\n      borderLeft: \"6px solid black\"\n    }\n  })\n);\n\nconst StyledToggleButtonGroup = withStyles(theme => ({\n  grouped: {\n    margin: theme.spacing(0.5),\n    border: \"none\",\n    padding: theme.spacing(0, 1),\n    \"&:not(:first-child)\": {\n      borderRadius: theme.shape.borderRadius\n    },\n    \"&:first-child\": {\n      borderRadius: theme.shape.borderRadius\n    }\n  }\n}))(ToggleButtonGroup);\nexport default function ToolsBar() {\n  const classes = useStyles();\n  return (\n    <div id=\"toolbar\">\n      <span className=\"ql-formats\">\n        <select className=\"ql-size\">\n          <option value=\"small\"></option>\n          <option selected></option>\n          <option value=\"large\"></option>\n          <option value=\"huge\"></option>\n        </select>\n        <button type=\"button\" className=\"ql-italic\"></button>\n        <button type=\"button\" className=\"ql-underline\"></button>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-indent\" value=\"-1\"></button>\n          <button type=\"button\" className=\"ql-indent\" value=\"+1\"></button>\n          <select className=\"ql-align\">\n            <option value=\"center\"></option>\n            <option value=\"right\"></option>\n            <option value=\"justify\"></option>\n          </select>\n          <button type=\"button\" className=\"ql-direction\" value=\"rtl\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"ordered\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"bullet\"></button>\n        </span>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-image\"></button>\n          <button type=\"button\" className=\"ql-code-block\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"sub\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"super\"></button>\n          <button type=\"button\" className=\"ql-clean\"></button>\n        </span>\n      </span>\n    </div>\n  );\n}\n","import Parchment from \"parchment\";\nimport { Quill } from \"react-quill\";\n\nconst BlockEmbed = Quill.import('blots/block/embed') as { new(node: any, value: any): Object };\nexport class DividerBlot extends BlockEmbed {\n  static blotName = 'divider';\n  static tagName = 'hr';\n}\n","import React, { useContext, useState } from \"react\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  InputBase,\n  TextField,\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/Folder\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport { DividerBlot } from \"./blots/DividerBlot\";\n\nQuill.register(DividerBlot);\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"20px\"\n  }\n}));\n\nexport default function BodyEditor() {\n  const { currentDocument, updateDocument, saveDocument } = useContext(\n    DocumentContext\n  );\n  const [numChanges, setNumberOfChanges] = useState(0);\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n  const save = async () => {\n    if (currentDocument && editor) {\n      let data = editor.getEditor().getContents();\n      currentDocument.content = data;\n      updateDocument(currentDocument);\n      await saveDocument();\n      setNumberOfChanges(0);\n    }\n  };\n\n  const modules = {\n    toolbar: {\n      container: \"#toolbar\"\n    }\n  };\n  if (currentDocument === undefined) {\n    return (\n      <ReactQuill\n        style={{\n          height: \"100%\",\n          border: 0,\n          paddingBottom: \"85px\"\n        }}\n        modules={modules}\n      />\n    );\n  }\n\n  return (\n    <ClickAwayListener\n      onClickAway={async () => {\n        if (numChanges > 0) {\n          await save();\n        }\n      }}\n    >\n      <ReactQuill\n        ref={instance => setEditor(instance != null ? instance : undefined)}\n        onKeyDown={async () => {\n          setNumberOfChanges(numChanges + 1);\n          if (numChanges > 3) {\n            await save();\n          }\n        }}\n        onChange={async e => {}}\n        style={{ height: \"100%\", border: 0, paddingBottom: \"85px\" }}\n        defaultValue={currentDocument.content}\n        modules={modules}\n      />\n    </ClickAwayListener>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { Button, makeStyles, MenuItem, Menu } from \"@material-ui/core\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    padding: \"4px 6px\",\n    minWidth: \"40px\",\n    fontSize: \"14px\",\n    fontWeight: \"normal\",\n    textTransform: \"capitalize\"\n  },\n  menuItem: {\n    minWidth: 150\n  }\n}));\n\nexport default function MenuBar() {\n  const classes = useStyles();\n  const { isLoading, saveToLocal, oepnFromLocal } = React.useContext(\n    DocumentContext\n  );\n  const [fileEl, setfileEl] = React.useState<null | HTMLElement>(null);\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        size=\"small\"\n        onClick={e => setfileEl(e.currentTarget)}\n      >\n        File\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Edit\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Settings\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Tools\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Help\n      </Button>\n      <span\n        style={{ textDecoration: \"underline\", color: \"grey\", marginLeft: 20 }}\n      >\n        {isLoading ? \"Commnucating with server\" : \"All changes saved in Drive\"}\n      </span>\n      <Menu\n        anchorEl={fileEl}\n        keepMounted\n        open={Boolean(fileEl)}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        onClose={() => {\n          setfileEl(null);\n        }}\n      >\n        <MenuItem\n          onClick={async () => {\n            await oepnFromLocal();\n            setfileEl(null);\n          }}\n        >\n          Open\n        </MenuItem>\n        <NestedMenuItem\n          label=\"Download\"\n          parentMenuOpen={Boolean(fileEl)}\n          className={classes.menuItem}\n        >\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"pdf\");\n              setfileEl(null);\n            }}\n          >\n            PDF Document (.pdf){\" \"}\n          </MenuItem>\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"html\");\n              setfileEl(null);\n            }}\n          >\n            Web Page (.html){\" \"}\n          </MenuItem>\n        </NestedMenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button, Grid, Divider } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Backdrop,\n  CircularProgress,\n  Card,\n  AppBar,\n  Toolbar,\n  createMuiTheme,\n  ThemeProvider,\n  IconButton,\n  makeStyles,\n  Container,\n  Paper,\n  Snackbar,\n  Tooltip\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../models/DocumentContext\";\nimport Titlebar from \"./components/Titlebar\";\nimport ToolsBar from \"./components/ToolsBar\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport BodyEditor from \"./components/BodyEditor\";\nimport \"../../../document.css\";\nimport { NavLink } from \"react-router-dom\";\nimport MenuBar from \"./components/MenuBar\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: \"#ffffff\"\n    },\n    primary: {\n      main: \"#00b2ff\"\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  appbar: {\n    height: \"90px\"\n  },\n  container: {\n    paddingTop: \"95px\",\n    height: \"100%\"\n  },\n  row: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  largeIcon: {\n    width: 40,\n    height: 40\n  }\n}));\n\nexport default function DocumentEditor() {\n  const { currentDocument, isLoading, errorMsg } = useContext(DocumentContext);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <AppBar elevation={0} className={classes.appbar} color=\"secondary\">\n          <Toolbar>\n            <Tooltip title=\"Back\">\n              <NavLink to={`/home/${currentDocument?.parent ?? \"\"}`}>\n                <DescriptionIcon\n                  className={classes.largeIcon}\n                  fontSize=\"large\"\n                  color=\"primary\"\n                />\n              </NavLink>\n            </Tooltip>\n            <Grid style={{ marginLeft: 10 }}>\n              <Grid.Row style={{ padding: 0 }}>\n                <Titlebar />\n              </Grid.Row>\n              <Grid.Row style={{ paddingTop: 0, paddingBottom: 0 }}>\n                <MenuBar />\n              </Grid.Row>\n              <Grid.Row style={{ padding: 0 }}>\n                {currentDocument && <ToolsBar />}\n              </Grid.Row>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Container id=\"container\" className={classes.container}>\n          {currentDocument && (\n            <Paper\n              style={{ height: \"100%\", minHeight: window.innerHeight - 95 }}\n              square\n            >\n              <BodyEditor />\n            </Paper>\n          )}\n        </Container>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={errorMsg !== undefined}\n          message={errorMsg}\n        />\n        <Backdrop\n          open={isLoading && currentDocument === undefined}\n          style={{\n            zIndex: 1,\n            color: \"#fff\"\n          }}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile,\n  PaginationResponse\n} from \"./Folder\";\nimport Axios from \"axios\";\nimport * as mm from \"music-metadata-browser\";\nimport { musicURL } from \"./urls\";\n//@ts-ignore\nconst readMusicTag = async (musicSrc: string): Promise<mm.IAudioMetadata> => {\n  const metadata = await mm.fetchFromUrl(musicSrc);\n  return metadata;\n};\ninterface MusicContext {\n  nas: Nas;\n  isLoading: boolean;\n  errorMsg?: string;\n  update(): void;\n  currentTag?: mm.IAudioMetadata;\n  currentMusic?: NasFile;\n  musicResponse?: PaginationResponse<NasFile>;\n  play(music: NasFile): Promise<void>;\n  stop(): void;\n  fetch(url: string): Promise<void>;\n  search(k: string): Promise<void>;\n}\n\ninterface MusicProps {}\n\nexport class MusicProvider extends Component<MusicProps, MusicContext> {\n  constructor(props: MusicProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      isLoading: false,\n      update: this.update,\n      play: this.play,\n      stop: this.stop,\n      fetch: this.fetch,\n      search: this.search\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true, errorMsg: \"Loading Music Library\" });\n    let musicList = await this.state.nas.fetchMusicList();\n    setTimeout(() => {\n      this.setState({ musicResponse: musicList, isLoading: false });\n    }, 400);\n    setTimeout(() => {\n      this.setState({ errorMsg: undefined });\n    }, 3000);\n  }\n\n  search = async (keyword: string) => {\n    try {\n      let response = await Axios.get<PaginationResponse<NasFile>>(\n        `${musicURL}?search=${keyword}`\n      );\n      this.setState({ musicResponse: response.data });\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    }\n  };\n\n  fetch = async (url: string) => {\n    try {\n      this.setState({ isLoading: true });\n      let response = await Axios.get<PaginationResponse<NasFile>>(url);\n      this.setState({ musicResponse: response.data });\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      this.setState({ isLoading: false });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 1000);\n    }\n  };\n\n  play = async (music: NasFile) => {\n    let tag = await readMusicTag(music.file);\n    this.setState({ currentTag: tag, currentMusic: music });\n  };\n\n  stop = async () => {\n    this.setState({ currentTag: undefined, currentMusic: undefined });\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <MusicContext.Provider value={this.state}>\n        {this.props.children}\n      </MusicContext.Provider>\n    );\n  }\n}\n\n//@ts-ignore\nconst context: MusicContext = {\n  nas: new Nas(),\n  update: () => {},\n  stop: () => {},\n  play: (music: NasFile) => {\n    return Promise.resolve();\n  },\n  isLoading: false\n};\n\nexport const MusicContext = React.createContext(context);\n","import React from \"react\";\nimport * as mm from \"music-metadata-browser\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport {\n  CardMedia,\n  CardContent,\n  Typography,\n  Collapse\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport * as path from \"path\";\n//@ts-ignore\nimport AudioSpectrum from \"react-audio-spectrum\";\n\nconst getMusicPicture = (tag?: mm.IAudioMetadata) => {\n  const pictures = tag?.common.picture;\n  let picture: string | undefined = undefined;\n  if (pictures && pictures.length > 0) {\n    picture = pictures[0].data.toString(\"base64\");\n    picture = \"data:image/jpeg;base64,\" + picture;\n  }\n  return picture;\n};\n\nexport default function CurrentPlayingPage() {\n  const { currentMusic, currentTag } = React.useContext(MusicContext);\n  let player = React.createRef<HTMLAudioElement | undefined>();\n  return (\n    <div style={{ marginTop: 40 }}>\n      <Collapse in={currentMusic === undefined} mountOnEnter unmountOnExit>\n        <Typography variant=\"subtitle1\">No Music Selected</Typography>\n      </Collapse>\n      <Collapse\n        in={currentTag?.common.picture !== undefined}\n        mountOnEnter\n        unmountOnExit\n      >\n        <CardMedia\n          style={{\n            height: 300,\n            width: \"100%\",\n\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          }}\n          image={getMusicPicture(currentTag)}\n        />\n      </Collapse>\n      <Collapse in={currentMusic !== undefined} mountOnEnter unmountOnExit>\n        <CardContent\n          style={{\n            width: \"100%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          }}\n        >\n          <Typography component=\"h5\" variant=\"h5\">\n            {decodeURIComponent(\n              currentTag?.common.title ??\n                path.basename(currentMusic?.filename ?? \"\")\n            )}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {decodeURIComponent(currentTag?.common.artist ?? \"\")}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {decodeURIComponent(currentTag?.common.album ?? \"\")}\n          </Typography>\n          {currentMusic && (\n            <audio\n              controls\n              loop\n              crossOrigin=\"anonymous\"\n              autoPlay\n              src={currentMusic?.file}\n              id=\"music\"\n            />\n          )}\n          {currentMusic && (\n            <AudioSpectrum\n              id=\"audio-canvas\"\n              height={200}\n              width={300}\n              meterWidth={6}\n              audioId=\"music\"\n            />\n          )}\n        </CardContent>\n      </Collapse>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Paper,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport { TableBody, TableFooter } from \"semantic-ui-react\";\nimport * as path from \"path\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { IconButton } from \"@material-ui/core\";\nimport { musicURL } from \"../../../../models/urls\";\nimport { File as NasFile } from \"../../../../models/Folder\";\n\nexport default function MusicList() {\n  const { musicResponse, play, currentMusic, stop, fetch } = React.useContext(\n    MusicContext\n  );\n  const [width, setWidth] = React.useState(window.innerWidth);\n  const [height, setheight] = React.useState(window.innerHeight);\n  const isSelected = (\n    file: NasFile | undefined,\n    file2: NasFile | undefined\n  ): boolean => {\n    return file?.id === file2?.id;\n  };\n\n  window.addEventListener(\"resize\", e => {\n    setWidth(window.innerWidth);\n    setheight(window.innerHeight);\n  });\n\n  return (\n    <TableContainer\n      component={Paper}\n      style={{\n        marginTop: \"40px\",\n        marginLeft: 30,\n        maxHeight: width < 960 ? height / 2 : height - 100\n      }}\n    >\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {musicResponse &&\n            musicResponse.results.map((m, i) => (\n              <TableRow selected={isSelected(currentMusic, m)}>\n                <TableCell>{path.basename(m.filename)}</TableCell>\n                <TableCell>\n                  <IconButton\n                    onClick={async () => {\n                      if (isSelected(currentMusic, m)) {\n                        stop();\n                      } else {\n                        await play(m);\n                      }\n                    }}\n                  >\n                    {isSelected(currentMusic, m) ? (\n                      <StopIcon />\n                    ) : (\n                      <PlayArrowIcon />\n                    )}\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <Pagination\n              size=\"medium\"\n              style={{ marginBottom: 10, marginTop: 10 }}\n              count={musicResponse?.total_pages ?? 0}\n              onChange={async (e, value) => {\n                await fetch(`${musicURL}?page=${value}`);\n              }}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  IconButton,\n  CircularProgress,\n  fade,\n  InputBase\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { MusicContext } from \"../../../models/MusicContext\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../models/Folder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popper: {\n      marginTop: 10,\n      marginRight: 15,\n      width: \"40ch\",\n      maxHeight: 400,\n      overflow: \"auto\"\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport default function MusicSearchField() {\n  const classes = useStyles();\n  const { search } = useContext(MusicContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        {isLoading ? (\n          <CircularProgress size={20} color=\"inherit\" />\n        ) : (\n          <SearchIcon />\n        )}\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput\n        }}\n        inputProps={{ \"aria-label\": \"search\" }}\n        onChange={async e => {\n          let keyword = e.target.value;\n          setValue(keyword);\n        }}\n        onKeyDown={async e => {\n          if (e.key === \"Enter\") {\n            setIsLoading(true);\n            search(value);\n            setIsLoading(false);\n          }\n        }}\n      />\n      <IconButton\n        onClick={async () => {\n          setIsLoading(true);\n          setValue(\"\");\n          await search(\"\");\n          setIsLoading(false);\n        }}\n      >\n        <ClearIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\n\nimport { Container, Segment, Progress, Menu } from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../models/HomeContext\";\nimport { ContextMenu, ContextMenuTrigger } from \"react-contextmenu\";\nimport {\n  Grid,\n  Hidden,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n  Typography,\n  InputBase,\n  createMuiTheme,\n  ThemeProvider,\n  Backdrop,\n  CircularProgress,\n  Snackbar\n} from \"@material-ui/core\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport CurrentPlayingPage from \"./components/left/CurrentPlayingPage\";\nimport MusicList from \"./components/right/MusicList\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { NavLink } from \"react-router-dom\";\nimport { MusicContext } from \"../../models/MusicContext\";\nimport MusicSearchField from \"./components/SearchField\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: orange\n  }\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\"\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\"\n      }\n    }\n  })\n);\n\nexport default function MusicPage() {\n  const { isLoading, errorMsg } = React.useContext(MusicContext);\n  const [show, setShow] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div\n        style={{\n          height: \"100%\",\n          overflow: \"hidden\"\n        }}\n      >\n        {/** App Bar */}\n        <AppBar>\n          <Toolbar>\n            <NavLink to=\"/\">\n              <IconButton>\n                <ArrowBackIosIcon />\n              </IconButton>\n            </NavLink>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Music\n            </Typography>\n            <MusicSearchField />\n          </Toolbar>\n        </AppBar>\n        <Backdrop className={classes.backdrop} open={isLoading}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        <Container style={{ paddingTop: 20 }}>\n          {/** End App Bar */}\n          <Grid container style={{ margin: 10 }}>\n            <Grid item xs={12} md={4}>\n              <CurrentPlayingPage />\n            </Grid>\n            <Grid item xs={12} md={8}>\n              <MusicList />\n            </Grid>\n          </Grid>\n        </Container>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={errorMsg !== undefined}\n          message={`${errorMsg}`}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { I18nProvider } from \"@lingui/react\";\n\nReactDOM.render(\n  <I18nProvider catalogs={{}}>\n    <App />\n  </I18nProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  HashRouter as Router,\n  Route,\n  Link,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport { HomePage } from \"./components/pages/home/HomePage\";\nimport { HomePageProvider } from \"./components/models/HomeContext\";\nimport { SystemProvider } from \"./components/models/SystemContext\";\nimport SystemInfoPage from \"./components/pages/systemInfo/SystemInfoPage\";\nimport { Sidebar, Menu, Icon, Button } from \"semantic-ui-react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { IconButton } from \"@material-ui/core\";\nimport { DocumentProvider } from \"./components/models/DocumentContext\";\nimport DocumentEditor from \"./components/pages/document/DocumentEditor\";\nimport { MovingProvider } from \"./components/models/MovingContext\";\nimport { MusicProvider } from \"./components/models/MusicContext\";\nimport MusicPage from \"./components/pages/music/MusicPage\";\n\n\nexport default function App() {\n  const [visible, setVisible] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <SystemProvider>\n      <Router>\n        <div style={{ height: \"100%\" }}>\n          <Route exact path=\"/\" component={() => <Redirect to=\"/home\" />} />\n          <Route\n            exact\n            path=\"/home/:id?\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return (\n                <MovingProvider>\n                  <HomePageProvider {...props}>\n                    <HomePage></HomePage>\n                  </HomePageProvider>\n                </MovingProvider>\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/document/:id\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return (\n                <MovingProvider>\n                  <DocumentProvider {...props}>\n                    <DocumentEditor />\n                  </DocumentProvider>\n                </MovingProvider>\n              );\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/info\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return <SystemInfoPage />;\n            }}\n          />\n          <Route\n            exact\n            path=\"/music\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return (\n                <MusicProvider>\n                  <MusicPage />\n                </MusicProvider>\n              );\n            }}\n          />\n        </div>\n      </Router>\n    </SystemProvider>\n  );\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 219;"],"sourceRoot":""}