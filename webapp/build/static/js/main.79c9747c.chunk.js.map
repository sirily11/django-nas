{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","components/models/urls.ts","components/models/nas.ts","components/models/HomeContext.tsx","components/pages/home/components/files/MoveDialog.tsx","components/pages/home/components/files/RenameDialog.tsx","components/pages/home/components/folders/ListFolderPanel.tsx","components/pages/home/components/files/UploadDialog.tsx","components/pages/home/JSONSchema/model/Schema.ts","components/pages/home/components/folders/NewFolderDialog.tsx","components/pages/home/components/documents/CreateDocumentDialog.tsx","components/pages/home/components/others/NasMenu.tsx","components/models/SystemContext.tsx","components/pages/home/components/files/utils.ts","components/pages/home/components/others/ComputerStatus.tsx","components/pages/home/components/documents/Editor.tsx","components/pages/home/components/files/FilesActions.tsx","components/pages/home/components/files/pdf/PDFViewer.tsx","components/pages/home/components/files/ListFilesPanel.tsx","components/pages/home/components/files/UploadFilesSideBar.tsx","components/pages/home/components/files/SearchField.tsx","components/pages/home/HomePage.tsx","components/pages/systemInfo/PercentageChart.tsx","components/pages/systemInfo/SystemInfoPage.tsx","components/models/DocumentContext.tsx","components/pages/document/components/MoveDialog.tsx","components/pages/document/components/Titlebar.tsx","components/pages/document/components/ToolsBar.tsx","components/pages/document/components/blots/DividerBlot.ts","components/pages/document/components/BodyEditor.tsx","components/pages/document/components/MenuBar.tsx","components/pages/document/DocumentEditor.tsx","serviceWorker.js","index.js","App.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","url","documentURL","Nas","constructor","menus","currentFolder","searchedFiles","errorMsg","moveFileTo","fileId","dest","a","Axios","patch","getContent","moveDocument","documentId","moveFolderTo","folderId","u","rename","newName","search","keyword","get","response","data","parents","undefined","uploadFile","files","isDir","onUpload","index","f","size","getUploadFileAndCreateFolder","getSingleUploadFile","formData","post","headers","onUploadProgress","progress","p","Math","round","loaded","total","console","log","alert","toString","deleteFile","window","confirm","delete","deleteFolder","createNewFolder","name","parent","res","folders","push","renameFolder","findIndex","renameDocument","documents","getDocument","Promise","content","JSON","parse","createNewDocument","stringify","ops","updateDocument","deleteDocument","reject","this","file","FormData","append","path","webkitRelativePath","split","folder","HomePageProvider","Component","props","super","selectDocument","document","setState","selectedDocument","updateUploadInfo","uploadInfo","setUploadInfo","uploadFiles","fetch","isLoading","nas","state","update","componentDidUpdate","oldProps","match","params","componentWillMount","render","HomePageContext","Provider","value","children","context","info","React","createContext","MoveDialog","useContext","useState","selection","setSelection","Dialog","open","fullWidth","DialogTitle","DialogContent","FormControl","InputLabel","Select","color","onChange","target","MenuItem","filter","type","selectedFile","map","key","DialogActions","Button","onClick","onClose","s","RenameDialog","ext","filename","getDefaultName","setName","TextField","ListPanel","showMoveToDialog","setShowMoveToDialog","showRenameDialog","setShowRenameDialog","selectedFolder","setSelectedFolder","anchorEl","setAnchorEl","handleClose","style","overflow","overflowX","height","List","Grid","centered","Row","verticalAlign","Column","width","to","IconButton","Message","error","MessageHeader","Collapse","in","timeout","i","ListItem","button","ListItemAvatar","Icon","ListItemText","location","href","primary","secondary","moment","modified_at","format","ListItemSecondaryAction","currentTarget","Menu","keepMounted","Boolean","UploadDialog","onInputChange","l","length","Modal","Header","Content","multiple","webkitdirectory","marginTop","Segment","Progress","percent","attached","active","currentName","currentIndex","Actions","basic","setOpen","disabled","loading","inverted","current","uploadedDataSize","totalDataSize","setTimeout","Widget","text","NewFolderDialog","folderName","setFolderName","setIsLoading","label","required","CreateDocumentDialog","setIsloading","NasMenus","openFilesUpload","setOpenFilesUpload","openFolderUpload","setOpenFolderUpload","openNewFolder","setOpenNewFolder","openEditor","setOpenEditor","vertical","SystemProvider","fetchSystemInfo","componentDidMount","systemInfo","SystemContext","formatBytes","bytes","decimals","dm","floor","parseFloat","pow","toFixed","ComputerStatus","disk","used","Editor","editor","setEditor","isChanged","ref","instance","defaultValue","getEditor","getContents","FilesActions","shadow","setSelectedDocument","margin","computer","mobile","padding","Card","variant","raised","CardActionArea","CardActions","PDFViewer","pageNumber","setpageNumber","onLoadSuccess","pdf","numPages","Array","from","el","pdfjs","GlobalWorkerOptions","workerSrc","version","Player","require","imageExt","videoExt","pdfExt","ListFilesPanel","previewAnchor","setPreviewAnchor","onHoverFile","setOnHoverFile","setselectedFile","imageSrc","setImageSrc","videoSrc","setVideoSrc","pdfSrc","setpdfSrc","isImage","filepath","includes","extname","isVideo","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","hover","cursor","onMouseOver","onMouseLeave","src","transcode_filepath","cover","basename","link","createElement","body","appendChild","click","removeChild","v","Image","fluid","poster","Popper","CardMedia","image","CardContent","UploadFilesSideBar","LinearProgress","cpu","title","memory","ListItemIcon","marginBottom","useStyles","makeStyles","theme","createStyles","popper","marginRight","maxHeight","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","breakpoints","up","spacing","searchIcon","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchField","classes","setValue","className","CircularProgress","InputBase","placeholder","root","input","inputProps","onKeyDown","ClickAwayListener","onClickAway","Paper","createMuiTheme","main","flexGrow","menuButton","HomePage","show","setShow","ThemeProvider","AppBar","Toolbar","Hidden","mdUp","Typography","noWrap","Drawer","paddingTop","paddingBottom","smDown","implementation","tablet","PercentageChart","color2","minHeight","minWidth","dataKey","fill","isAnimationActive","SystemInfoPage","Container","columns","temperature","humidity","pressure","QuillDeltaToHtmlConverter","DocumentProvider","doc","currentDocument","saveDocument","newDocument","readFile","reader","FileReader","onload","result","readAsText","openFromLocal","getElementById","accept","addEventListener","converter","MarkdownToQuill","delta","convert","d","remove","err","saveToLocal","savingType","oepnFromLocal","DocumentContext","setLoading","loadingFolder","setLoadingFolder","mountOnEnter","unmountOnExit","Divider","disableSpacing","Tooltip","notchedOutline","border","fontWeight","background","fontSize","Titlebar","numChanges","setNumChanges","maxWidth","innerWidth","zIndex","placement","divider","borderLeft","withStyles","grouped","ToggleButtonGroup","ToolsBar","selected","BlockEmbed","Quill","import","DividerBlot","blotName","tagName","register","BodyEditor","setNumberOfChanges","save","modules","toolbar","container","textTransform","menuItem","MenuBar","fileEl","setfileEl","textDecoration","getContentAnchorEl","anchorOrigin","horizontal","transformOrigin","parentMenuOpen","appbar","row","largeIcon","DocumentEditor","elevation","innerHeight","square","Snackbar","message","Backdrop","hostname","ReactDOM","catalogs","setShowMenu","exact","component","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79c9747c.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 196;","export const systemURL = \"/system/\"\nexport const url = \"/api/folder/\"\nexport const fileURL = \"/api/file/\"\nexport const documentURL = \"/api/document/\"\nexport const searchFileURL = \"/api/file?search=\"\n// download folder\nexport const downloadURL = \"/api/download/\"","import Axios from \"axios\"\nimport { Folder, Parent, File as NasFile, Document as NasDocument } from './Folder';\n\nimport { url, documentURL, fileURL, searchFileURL } from \"./urls\"\nimport { DeltaStatic } from \"quill\";\nimport * as path from 'path';\n\n\n\ntype UploadProgressCallback = (index: number, progress: number) => void\n\n\nexport class Nas {\n    menus: Parent[]\n    currentFolder?: Folder\n    searchedFiles: NasFile[];\n    errorMsg?: string\n\n\n    constructor() {\n        this.menus = []\n        this.searchedFiles = [];\n    }\n\n    moveFileTo = async (fileId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`\n                await Axios.patch(url, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    moveDocument = async (documentId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${documentURL}${documentId}/`\n                await Axios.patch(url, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    moveFolderTo = async (folderId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let u = `${url}${folderId}/`\n                await Axios.patch(u, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Rename file\n     */\n    rename = async (fileId: number, newName: string) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`\n                await Axios.patch(url, { \"filename\": newName })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Search by keyword\n     * @param keyword Keyword\n     */\n    search = async (keyword: String) => {\n        try {\n            let url = `${searchFileURL}${keyword}`\n            let response = await Axios.get<NasFile[]>(url);\n            this.searchedFiles = response.data;\n        } catch (err) {\n            this.errorMsg = err\n        }\n    }\n\n    /**\n     * Get content by id\n     */\n    getContent = async (id?: number | string) => {\n        try {\n            let u = id ? `${url}${id}/` : url\n            let response = await Axios.get<Folder>(u)\n            const { data } = response\n            this.menus = data.parents\n            this.currentFolder = data\n            this.errorMsg = undefined\n        } catch (err) {\n            this.errorMsg = err\n            this.currentFolder = undefined\n        }\n    }\n\n\n    /**\n     * Upload file to server.\n     * If upload fail, will show alert dialog\n     * @param files: List of files\n     * @param onUpload: callback function\n     * @param isDir: Whether upload directory\n     */\n    uploadFile = async (files: File[], isDir: boolean, onUpload: (index: number, progress: number, current: number, total: number) => void) => {\n        try {\n            let index = 0;\n            for (let f of files) {\n                if (this.currentFolder) {\n                    onUpload(index, 0, 0, f.size);\n\n                    let formData =\n                        isDir ?\n                            await this.getUploadFileAndCreateFolder(f) :\n                            this.getSingleUploadFile(f)\n\n                    await Axios.post<NasFile>(fileURL, formData,\n                        {\n                            headers: { 'Content-Type': 'multipart/form-data' },\n                            // eslint-disable-next-line no-loop-func\n                            onUploadProgress: (progress) => {\n                                let p = Math.round((progress.loaded * 100) / progress.total);\n                                onUpload(index, p, f.size * progress.loaded, progress.total)\n\n                            }\n\n                        })\n                    await this.getContent(this.currentFolder.id)\n\n                }\n                index += 1\n            }\n            onUpload(index, 100, 0, 0);\n        } catch (err) {\n            console.log(err)\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Only get the formdata but don't create folder\n     * @param file File\n     */\n    getSingleUploadFile(file: File): FormData | undefined {\n        if (this.currentFolder) {\n            let formData = new FormData()\n            formData.append(\"file\", file)\n            this.currentFolder.id && formData.append(\"parent\", this.currentFolder.id.toString())\n            return formData\n        }\n\n    }\n\n    /**\n     * Create folder for file. And then return the file\n     * For example file with path a/a.jpg will create a folder\n     * @param file Upload file\n     */\n    async getUploadFileAndCreateFolder(file: File): Promise<FormData | undefined> {\n        if (this.currentFolder) {\n            //@ts-ignore\n            let folders = path.dirname(file.webkitRelativePath).split(path.sep)\n            let folder: Folder | undefined;\n\n            for (let f of folders) {\n                let res = await Axios.post(url, { \"parent\": folder?.id ?? this.currentFolder.id ?? null, \"name\": f })\n                folder = res.data;\n\n            }\n\n            let formData = new FormData()\n\n            formData.append(\"file\", file)\n            console.log(\"parent\", folder)\n            folder && folder.id && formData.append(\"parent\", `${folder?.id}`)\n            return formData\n        }\n\n    }\n\n    /** \n     * Delete file by id\n     */\n    deleteFile = async (id: number) => {\n        try {\n            let confirm = window.confirm(\"Are you sure you want to delete this file?\")\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${fileURL}${id}/`)\n                await this.getContent(this.currentFolder.id)\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Delete folder by id\n     */\n    deleteFolder = async (id: number) => {\n        try {\n            let confirm = window.confirm(\"Are you sure you want to delete this folder?\")\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${url}${id}/`)\n                await this.getContent(this.currentFolder.id)\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Create folder with name\n     * @param name\n     */\n    createNewFolder = async (name: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.post<Folder>(url, { name: name, parent: this.currentFolder.id ? this.currentFolder.id : null })\n            this.currentFolder.folders.push(res.data)\n        } else {\n            alert(\"Create new folder error: empty parent folder\")\n        }\n    }\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameFolder = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<Folder>(`${url}${id}/`, { \"name\": newName })\n            let index = this.currentFolder.folders.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.folders[index] = res.data\n            }\n        } else {\n            alert(\"Rename new folder error: empty parent folder\")\n        }\n    }\n\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameDocument = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { \"name\": newName })\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data\n            }\n        } else {\n            alert(\"Rename new document error\")\n        }\n    }\n\n    /**\n     * Get document from server.\n     * We need this function because we are getting abstract document object from server\n     * at begining(Which doesn't include content field).\n     * \n     * We will Call this function when user want to edit the file\n     */\n    getDocument = async (id: string | number): Promise<NasDocument> => {\n\n        let res = await Axios.get<NasDocument>(`${documentURL}${id}/`)\n        /// Need to parse the content into js object\n        return Promise.resolve({ ...res.data, content: JSON.parse(res.data.content) })\n\n    }\n\n    /**\n     * Create new document\n     * @param name: Name of the document\n     * @param data: EditorJS object\n     */\n    createNewDocument = async (name: string, data?: DeltaStatic, parent?: any) => {\n        let res = await Axios.post<NasDocument>(documentURL,\n            {\n                name: name, parent: this.currentFolder && this.currentFolder.id ? this.currentFolder.id : parent,\n                content: data ? JSON.stringify(data.ops) : undefined\n            })\n        this.currentFolder && this.currentFolder.documents.push(res.data)\n        return res.data\n    }\n\n    /**\n     * Update Document\n     * @param id: document's id\n     * @param data: EditorJS object\n     */\n    updateDocument = async (id: number, name: string, data: DeltaStatic) => {\n\n        let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { name, content: JSON.stringify(data?.ops) })\n        if (this.currentFolder) {\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data\n            }\n\n        }\n\n    }\n\n    /**\n     * Delete document by id\n     * \n     * @param id: document's id\n     */\n    deleteDocument = async (id: number) => {\n        if (this.currentFolder) {\n            let confirm = window.confirm(\"Do you want to delete this document?\")\n            if (confirm) {\n                let res = await Axios.delete<NasDocument>(`${documentURL}${id}/`)\n                await this.getContent(this.currentFolder.id)\n                return Promise.resolve(res.data)\n            } else {\n\n            }\n\n        } else {\n            alert(\"Create new folder error: empty parent folder\")\n            return Promise.reject()\n        }\n    }\n\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface HomePageContext {\n  nas: Nas;\n  selectedDocument?: NasDocument;\n  uploadInfo?: UploadInfo;\n  updateUploadInfo(info?: UploadInfo): void;\n  uploadFiles?: File[];\n  setUploadInfo(files?: File[]): void;\n  update(): void;\n  selectDocument(doc?: NasDocument): void;\n  isLoading: boolean;\n}\n\ninterface HomePageProps extends RouteComponentProps<RouterProps> {}\n\nexport class HomePageProvider extends Component<\n  HomePageProps,\n  HomePageContext\n> {\n  constructor(props: HomePageProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      selectDocument: this.selectDocument,\n      updateUploadInfo: this.updateUploadInfo,\n      setUploadInfo: this.setUploadInfo,\n      update: this.update,\n      isLoading: false\n    };\n  }\n\n  selectDocument = (document?: NasDocument) => {\n    this.setState({ selectedDocument: document });\n  };\n\n  updateUploadInfo = (uploadInfo?: UploadInfo) => {\n    this.setState({ uploadInfo });\n  };\n\n  setUploadInfo = (file: File[]) => {\n    this.setState({ uploadFiles: file });\n  };\n\n  async componentDidUpdate(oldProps: HomePageProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      await this.fetch(id);\n    }\n  }\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    await this.fetch(id);\n  }\n\n  fetch = async (id: any) => {\n    this.setState({ isLoading: true });\n    const { nas } = this.state;\n    await nas.getContent(id);\n    this.setState({ nas, isLoading: false });\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <HomePageContext.Provider value={this.state}>\n        {this.props.children}\n      </HomePageContext.Provider>\n    );\n  }\n}\n\nconst context: HomePageContext = {\n  nas: new Nas(),\n  update: () => {},\n  selectDocument: () => {},\n  updateUploadInfo: (info: UploadInfo) => {},\n  setUploadInfo: (files: File[]) => {},\n  isLoading: false\n};\n\nexport const HomePageContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport * as path from \"path\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Button,\n  DialogActions\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  onClose(): void;\n  type: \"file\" | \"folder\" | \"document\";\n  selectedFile: NasFile | NasDocument | Folder;\n}\n\nexport default function MoveDialog(props: Props) {\n  const { nas } = useContext(HomePageContext);\n\n  const [selection, setSelection] = useState<number>(-1);\n  console.log(selection);\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>Move File To</DialogTitle>\n      <DialogContent>\n        <FormControl fullWidth>\n          <InputLabel>Destnation</InputLabel>\n          <Select\n            color=\"secondary\"\n            value={selection}\n            onChange={e => {\n              let selection = e.target.value as number;\n              setSelection(selection);\n            }}\n            fullWidth\n          >\n            {nas.currentFolder && (\n              <MenuItem value={nas.currentFolder.parent ?? -1}>\n                Parent Folder\n              </MenuItem>\n            )}\n            {nas.currentFolder &&\n              nas.currentFolder.folders\n                .filter(f =>\n                  props.type === \"folder\"\n                    ? props.selectedFile.id !== f.id\n                    : true\n                )\n                .map(f => (\n                  <MenuItem key={f.id} value={f.id}>\n                    {f.name}\n                  </MenuItem>\n                ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            setSelection(-1);\n            props.onClose();\n          }}\n        >\n          cancel\n        </Button>\n        <Button\n          onClick={async () => {\n            if (selection) {\n              let s = selection === -1 ? null : selection;\n              switch (props.type) {\n                case \"file\":\n                  await nas.moveFileTo(props.selectedFile.id, s);\n                  break;\n                case \"folder\":\n                  await nas.moveFolderTo(props.selectedFile.id, s);\n              }\n            }\n            setSelection(-1);\n            props.onClose();\n          }}\n        >\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport * as path from \"path\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Button,\n  DialogActions\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  onClose(): void;\n  type: \"file\" | \"folder\" | \"document\";\n  selectedFile: NasFile | NasDocument | Folder;\n}\n\nexport default function RenameDialog(props: Props) {\n  const getDefaultName = () => {\n    switch (props.type) {\n      case \"file\":\n        let ext = path.extname((props.selectedFile as NasFile).filename);\n        return path.basename((props.selectedFile as NasFile).filename, ext);\n\n      case \"folder\":\n        return (props.selectedFile as Folder).name;\n\n      default:\n        return (props.selectedFile as NasDocument).name;\n    }\n  };\n\n  const { nas } = useContext(HomePageContext);\n\n  const [name, setName] = useState<string>(getDefaultName());\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>Rename</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          fullWidth\n          value={name}\n          onChange={e => {\n            setName(e.target.value);\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.onClose();\n            setName(\"\");\n          }}\n        >\n          cancel\n        </Button>\n        <Button\n          onClick={async () => {\n            if (name) {\n              switch (props.type) {\n                case \"file\":\n                  let ext = path.extname(\n                    (props.selectedFile as NasFile).filename\n                  );\n                  await nas.rename(props.selectedFile.id, `${name}${ext}`);\n                  break;\n                case \"folder\":\n                  await nas.renameFolder(props.selectedFile.id, name);\n                  break;\n                case \"document\":\n                  await nas.renameDocument(props.selectedFile.id, name);\n                  break;\n              }\n            }\n            props.onClose();\n          }}\n        >\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Segment,\n  MessageHeader,\n  Message,\n  Icon,\n  Modal,\n  Image,\n  SemanticICONS,\n  Divider,\n  Label,\n  Button,\n  Popup,\n  Grid\n} from \"semantic-ui-react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  Collapse\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport \"video-react/dist/video-react.css\";\nimport { Folder, Document as NasDocument } from \"../../../../models/Folder\";\n\nimport { NavLink } from \"react-router-dom\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport MoveDialog from \"../files/MoveDialog\";\nimport RenameDialog from \"../files/RenameDialog\";\n\nexport default function ListPanel() {\n  const { nas, isLoading, update } = useContext(HomePageContext);\n  const [showMoveToDialog, setShowMoveToDialog] = useState(false);\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedFolder, setSelectedFolder] = useState<Folder | undefined>(\n    undefined\n  );\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      style={{\n        overflow: \"auto\",\n        overflowX: \"hidden\",\n        height: \"100%\",\n        color: \"blue\"\n      }}\n    >\n      <List>\n        <Grid centered>\n          <Grid.Row verticalAlign=\"middle\">\n            <Grid.Column width={5}>\n              {nas.currentFolder && nas.currentFolder.parent ? (\n                <NavLink to={`/home/${nas.currentFolder.parent}`}>\n                  <IconButton>\n                    <ArrowBackIosIcon />\n                  </IconButton>\n                </NavLink>\n              ) : (\n                <IconButton>\n                  <NavLink to={`/home`}>\n                    <ArrowBackIosIcon />\n                  </NavLink>{\" \"}\n                </IconButton>\n              )}\n            </Grid.Column>\n            <Grid.Column width={11}>\n              <div style={{ color: \"black\" }}>\n                {nas.currentFolder && nas.currentFolder.name}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        {nas.errorMsg && (\n          <Message error>\n            <MessageHeader>Network Error</MessageHeader>\n            <div>{nas.errorMsg.toString()}</div>\n          </Message>\n        )}\n        <Collapse in={!isLoading} timeout={300}>\n          {/*Render Folders*/}\n          {nas.currentFolder &&\n            nas.currentFolder.folders.map((f, i) => (\n              <ListItem button key={`folder-${f.id}`}>\n                <ListItemAvatar>\n                  <Icon name=\"folder\" size=\"large\" color=\"grey\"></Icon>\n                </ListItemAvatar>\n                <ListItemText\n                  onClick={() => {\n                    window.location.href = `#/home/${f.id}`;\n                  }}\n                  style={{ color: \"black\" }}\n                  primary={f.name}\n                  secondary={moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                />\n                {/** folder menu button */}\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={e => {\n                      handleClick(e);\n                      setSelectedFolder(f);\n                    }}\n                  >\n                    <MoreHorizIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n\n                {/** end folder menu button */}\n              </ListItem>\n            ))}\n        </Collapse>\n        {/*End Render Folders*/}\n      </List>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem\n          onClick={() => {\n            setShowRenameDialog(true);\n            handleClose();\n          }}\n        >\n          Rename\n        </MenuItem>\n        <MenuItem\n          onClick={async () => {\n            if (selectedFolder) {\n              await nas.deleteFolder(selectedFolder.id);\n              handleClose();\n              update();\n              setSelectedFolder(undefined);\n            }\n          }}\n        >\n          Delete\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleClose();\n            setShowMoveToDialog(true);\n          }}\n        >\n          Move To\n        </MenuItem>\n      </Menu>\n\n      {selectedFolder && showRenameDialog && (\n        <RenameDialog\n          type=\"folder\"\n          selectedFile={selectedFolder}\n          open={showRenameDialog}\n          onClose={() => {\n            setSelectedFolder(undefined);\n            setShowRenameDialog(false);\n          }}\n        />\n      )}\n\n      {selectedFolder && showMoveToDialog && (\n        <MoveDialog\n          type=\"folder\"\n          selectedFile={selectedFolder}\n          open={showMoveToDialog}\n          onClose={() => {\n            setShowMoveToDialog(false);\n            setSelectedFolder(undefined);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  isDir: boolean;\n}\n\nexport interface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n  uploadedDataSize: number;\n  totalDataSize: number;\n}\n\nexport default function UploadDialog(props: Props) {\n  const {\n    nas,\n    update,\n    uploadInfo,\n    setUploadInfo,\n    uploadFiles,\n    updateUploadInfo\n  } = useContext(HomePageContext);\n\n  const onInputChange = e => {\n    let uploadFiles = e.target.files;\n    if (uploadFiles) {\n      let l: File[] = [];\n      for (var i = 0; i < uploadFiles.length; i++) {\n        l.push(uploadFiles[i]);\n      }\n\n      setUploadInfo(l);\n    }\n  };\n\n  return (\n    <Modal open={props.open}>\n      <Modal.Header>Select {props.isDir ? \"Folder\" : \"Files\"} </Modal.Header>\n      <Modal.Content>\n        <Grid.Row>\n          {props.isDir ? (\n            <input\n              type=\"file\"\n              multiple\n              webkitdirectory=\"\"\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          ) : (\n            <input\n              type=\"file\"\n              multiple\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          )}\n        </Grid.Row>\n        {uploadInfo && (\n          <Grid.Row style={{ marginTop: 20 }}>\n            <Segment>\n              <Progress\n                percent={uploadInfo.progress}\n                attached=\"top\"\n                color=\"green\"\n                active\n              />\n              {uploadInfo.currentName} {uploadInfo.currentIndex}/\n              {uploadInfo.total} --- {uploadInfo.progress} %\n              <Progress\n                percent={(uploadInfo.currentIndex / uploadInfo.total) * 100}\n                attached=\"bottom\"\n                color=\"blue\"\n                active\n              />\n            </Segment>\n          </Grid.Row>\n        )}\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> {uploadInfo ? \"Minimize\" : \"Close\"}\n        </Button>\n        <Button\n          disabled={uploadFiles === undefined}\n          color=\"green\"\n          loading={uploadInfo !== undefined}\n          inverted\n          onClick={async () => {\n            if (uploadFiles) {\n              await nas.uploadFile(\n                uploadFiles,\n                props.isDir,\n                (\n                  index: number,\n                  progress: number,\n                  current: number,\n                  total: number\n                ) => {\n                  updateUploadInfo({\n                    total: uploadFiles.length,\n                    currentIndex: index,\n                    currentName: uploadFiles[index]\n                      ? uploadFiles[index].name\n                      : \"Finished\",\n                    progress: progress,\n                    uploadedDataSize: current,\n                    totalDataSize: total\n                  });\n                }\n              );\n              update();\n              setTimeout(() => {\n                props.setOpen(false);\n                setUploadInfo(undefined);\n                updateUploadInfo(undefined);\n              }, 300);\n            }\n          }}\n        >\n          <Icon name=\"checkmark\" /> Upload\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import { FieldIcon } from \"./Icon\";\nimport { FieldAction } from \"./Action\";\nimport { string } from \"prop-types\";\n\n\ninterface Extra {\n    default?: any;\n    help?: string;\n    related_model?: string;\n    choices?: Choice[]\n\n}\n\nexport enum Widget {\n    text = \"text\",\n    number = \"number\",\n    datetime = \"datetime\",\n    foreignkey = \"foreignkey\",\n    unknown = \"unknown\",\n    select = \"select\",\n    tomanyTable = \"tomany-table\"\n}\n\ninterface Validation {\n    length: Length\n\n}\n\nexport interface Choice {\n    label: string;\n    value: any;\n}\n\ninterface Length {\n    maximum?: number;\n    minimum?: number;\n}\n\nexport interface Schema {\n    label: string;\n    readonly: boolean;\n    /// Could be null\n    extra?: Extra;\n    /// Map's key\n    name: string;\n    /// If widget type is not defined in the enum, then\n    /// return widgetType.unknown\n    widget: Widget | string;\n    required: boolean;\n    /// could be null\n    validations?: Validation;\n    /// this is value will be displayed at screen if set,\n    /// else null\n    value?: any;\n    /// Set this value only if the field includes selection\n    choice?: Choice;\n    /// icon for the field\n    /// this will be set through the params of JSONForm widget\n    icon?: FieldIcon;\n    /// action for the field\n    /// this will be set through the params of JSONForm widget\n    action?: FieldAction;\n\n}\n\n\n\nexport class SchemaList {\n\n    schemaList: Schema[];\n\n    constructor(schemas: Schema[]) {\n        schemas.forEach(s => {\n            if (s.extra && s.extra.default) {\n                s.value = s.extra.default\n            }\n        })\n        this.schemaList = schemas;\n    }\n\n    merge(values: { [key: string]: any }) {\n        this.schemaList = this.schemaList.map((s) => {\n            if (values[s.name]) {\n                let value = values[s.name];\n                if (s.widget == Widget.select) {\n                    let choice: Choice | undefined = s.extra\n                        && s.extra.choices\n                        && s.extra.choices.find((c) => c.value === value)\n                    s.choice = choice;\n                } else if (s.widget == Widget.foreignkey) {\n                    let choice: Choice = value;\n                    s.choice = choice;\n                    s.value = value.value;\n                } else {\n                    s.value = value;\n                }\n            }\n            return s;\n        });\n    }\n\n    onSubmit(): { [key: string]: any } {\n        console.log(this.schemaList)\n        let maps: { [key: string]: any } = {};\n        this.schemaList.filter(s => !s.readonly && s.widget !== Widget.tomanyTable).forEach((s) => maps[s.name] = s.value);\n        console.log(maps)\n        return maps;\n\n    }\n\n}\n","import React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport { SchemaList, Schema, Widget } from \"../../JSONSchema/model/Schema\";\nimport { DialogContent } from \"@material-ui/core\";\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogTitle\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n}\n\ninterface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n}\n\nconst schema: Schema[] = [\n  {\n    name: \"name\",\n    label: \"Folder Name\",\n    readonly: false,\n    required: true,\n    widget: Widget.text\n  }\n];\n\nexport default function NewFolderDialog(props: Props) {\n  const { nas, update } = useContext(HomePageContext);\n  const [folderName, setFolderName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>New Folder</DialogTitle>\n      <DialogContent>\n        <TextField\n          onChange={e => {\n            setFolderName(e.target.value);\n          }}\n          value={folderName}\n          color=\"secondary\"\n          fullWidth\n          label=\"Folder Name\"\n          required\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> No\n        </Button>\n        <Button\n          basic\n          color=\"green\"\n          onClick={async () => {\n            setIsLoading(true);\n            await nas.createNewFolder(folderName);\n            update();\n            setIsLoading(false);\n            props.setOpen(false);\n          }}\n          loading={isLoading}\n        >\n          <Icon name=\"add\" /> Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function CreateDocumentDialog(props: Props) {\n  const [name, setName] = useState<string | undefined>();\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  return (\n    <Dialog open={props.open} onClose={() => props.setOpen(false)} fullWidth>\n      <DialogTitle>Document</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.setOpen(false);\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (name) {\n                await nas.createNewDocument(name, undefined);\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  Grid,\n  Breadcrumb,\n  Segment,\n  Card,\n  MenuItem as MMenuItem\n} from \"semantic-ui-react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport UploadDialog from \"../files/UploadDialog\";\nimport NewFolderDialog from \"../folders/NewFolderDialog\";\nimport Editor from \"../documents/Editor\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nimport { Menu } from \"semantic-ui-react\";\nimport CreateDocumentDialog from \"../documents/CreateDocumentDialog\";\n\nexport default function NasMenus() {\n  const { nas } = useContext(HomePageContext);\n\n  const [openFilesUpload, setOpenFilesUpload] = useState(false);\n  const [openFolderUpload, setOpenFolderUpload] = useState(false);\n  const [openNewFolder, setOpenNewFolder] = useState(false);\n  const [openEditor, setOpenEditor] = useState(false);\n\n  return (\n    <div>\n      <ContextMenu id=\"folder\">\n        <Menu id=\"folder\" vertical>\n          <MenuItem\n            onClick={() => {\n              setOpenNewFolder(true);\n            }}\n          >\n            <MMenuItem>New Folder</MMenuItem>\n          </MenuItem>\n        </Menu>\n      </ContextMenu>\n      <ContextMenu id=\"files\">\n        <Menu vertical>\n          <MMenuItem onClick={() => setOpenEditor(true)}>\n            New Document\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFilesUpload(true);\n            }}\n          >\n            Upload Files\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFolderUpload(true);\n            }}\n          >\n            Upload Folder\n          </MMenuItem>\n        </Menu>\n      </ContextMenu>\n      <UploadDialog\n        isDir={false}\n        open={openFilesUpload}\n        setOpen={setOpenFilesUpload}\n      />\n      <UploadDialog\n        isDir={true}\n        open={openFolderUpload}\n        setOpen={setOpenFolderUpload}\n      />\n      <NewFolderDialog\n        open={openNewFolder}\n        setOpen={setOpenNewFolder}\n      ></NewFolderDialog>\n      <CreateDocumentDialog open={openEditor} setOpen={setOpenEditor} />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { SystemInfo } from \"./Folder\";\nimport Axios from \"axios\";\nimport { systemURL } from \"./urls\";\n\ninterface SystemContext {\n  systemInfo?: SystemInfo;\n}\n\ninterface SystemProps {}\n\nexport class SystemProvider extends Component<SystemProps, SystemContext> {\n  constructor(props: SystemProps) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    let info = await this.fetchSystemInfo();\n    if (info) {\n      this.setState({ systemInfo: info });\n    }\n    // setInterval(async () => {\n    //   let info = await this.fetchSystemInfo();\n    //   console.log(\"Update system info\");\n    //   if (info) {\n    //     this.setState({ systemInfo: info });\n    //   }\n    // }, 20000);\n  }\n\n  fetchSystemInfo = async (): Promise<SystemInfo> => {\n    let info = await Axios.get<SystemInfo>(systemURL);\n    return Promise.resolve(info.data);\n  };\n\n  render() {\n    return (\n      <SystemContext.Provider value={this.state}>\n        {this.props.children}\n      </SystemContext.Provider>\n    );\n  }\n}\n\nconst context: SystemContext = {};\n\nexport const SystemContext = React.createContext(context);\n","export function formatBytes(bytes: number, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}","import React, { useContext } from \"react\";\nimport { Progress, Message } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\nimport { formatBytes } from \"../files/utils\";\n\nexport default function ComputerStatus() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return (\n      <Message>\n        <p>No Info Avaliable currently</p>\n      </Message>\n    );\n  }\n  return (\n    <div>\n      <span>\n        Used Sapce: {formatBytes(systemInfo.disk.used)}/\n        {formatBytes(systemInfo.disk.total)}\n      </span>\n      <Progress\n        percent={((systemInfo.disk.used / systemInfo.disk.total) * 100).toFixed(\n          2\n        )}\n        size=\"tiny\"\n        color=\"green\"\n      />\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button } from \"semantic-ui-react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ReactQuill, { Quill } from \"react-quill\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function Editor(props: Props) {\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n  const [name, setName] = useState<string | undefined>();\n  const [isChanged, setIsChanged] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  if (name === undefined) {\n    setName(document ? document.name : \"\");\n  }\n\n  return (\n    <Modal open={props.open} centered={false}>\n      <Modal.Header>\n        <TextField\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </Modal.Header>\n      <Modal.Content>\n        <ReactQuill\n          ref={instance => setEditor(instance != null ? instance : undefined)}\n          defaultValue={document && document.content}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            if (isChanged) {\n              let confirm = window.confirm(\n                \"Are you sure you want to exit? You will lose unsave data.\"\n              );\n              if (confirm) {\n                props.setOpen(false);\n              }\n            } else {\n              props.setOpen(false);\n            }\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (editor && name) {\n                let data = editor.getEditor().getContents();\n                if (document) {\n                  // update current document\n                  await nas.updateDocument(document.id, name, data);\n                } else {\n                  if (name !== \"\") {\n                    await nas.createNewDocument(name, data);\n                  } else {\n                    throw \"Name should not be empty\";\n                  }\n                }\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Save\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Grid, Header, Icon } from \"semantic-ui-react\";\nimport {\n  IconButton,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  CardActionArea\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Folder, Document as NasDocument } from \"../../../../models/Folder\";\nimport RenameDialog from \"./RenameDialog\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function FilesActions() {\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [shadow, setShadow] = useState<number>();\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState<NasDocument>();\n\n  return (\n    <div style={{ width: \"100%\", margin: \"20px\" }}>\n      <Grid>\n        <Grid.Row>\n          {/*Render documents*/}\n          {nas.currentFolder &&\n            nas.currentFolder.documents.map((f, i) => (\n              <Grid.Column\n                computer={4}\n                mobile={8}\n                style={{ padding: 10 }}\n                key={`document-${i}`}\n              >\n                <Card variant=\"outlined\" raised={shadow === i ? true : false}>\n                  <NavLink to={`/document/${f.id}`}>\n                    <CardActionArea style={{ height: 80 }}>\n                      <CardContent>\n                        <h3>{f.name}</h3>\n                      </CardContent>\n                    </CardActionArea>\n                  </NavLink>\n                  <CardActions>\n                    <IconButton\n                      onClick={async () => {\n                        await nas.deleteDocument(f.id);\n                        update();\n                      }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                    <IconButton\n                      onClick={async () => {\n                        setSelectedDocument(f);\n                        setShowRenameDialog(true);\n                      }}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                  </CardActions>\n                </Card>\n              </Grid.Column>\n            ))}\n          {/*End Render documents*/}\n        </Grid.Row>\n\n        <Grid.Row>\n          <h3>Files</h3>\n        </Grid.Row>\n      </Grid>\n      {selectedDocument && (\n        <RenameDialog\n          type=\"document\"\n          open={showRenameDialog}\n          selectedFile={selectedDocument}\n          onClose={() => {\n            setShowRenameDialog(false);\n            setSelectedDocument(undefined);\n            update();\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\ninterface Props {\n  file: string;\n}\n\nexport default function PDFViewer(props: Props) {\n  const [pageNumber, setpageNumber] = useState(1);\n  const [current, setcurrent] = useState(1);\n\n  return (\n    <Document\n      file={props.file}\n      onLoadSuccess={pdf => {\n        setpageNumber(pdf.numPages);\n      }}\n    >\n      {Array.from(new Array(pageNumber), (el, index) => (\n        <Page key={`page-${index}`} pageNumber={index + 1} />\n      ))}\n    </Document>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Segment,\n  MessageHeader,\n  Message,\n  Icon,\n  Modal,\n  Image,\n  SemanticICONS,\n  Dropdown,\n  CardContent\n} from \"semantic-ui-react\";\nimport {\n  TableContainer,\n  TableHead,\n  Table,\n  TableCell,\n  TableRow,\n  Menu,\n  MenuItem,\n  TableBody,\n  IconButton,\n  Popper,\n  Paper,\n  CardMedia,\n  Card,\n  CardActionArea\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport \"video-react/dist/video-react.css\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../../models/Folder\";\nimport Editor from \"../documents/Editor\";\nimport { downloadURL, fileURL } from \"../../../../models/urls\";\nimport { Grid } from \"semantic-ui-react\";\nimport FilesActions from \"./FilesActions\";\nimport MoveDialog from \"./MoveDialog\";\nimport RenameDialog from \"./RenameDialog\";\nimport { formatBytes } from \"./utils\";\nimport PDFViewer from \"./pdf/PDFViewer\";\n\nconst { Player } = require(\"video-react\");\n\nconst imageExt = [\".jpg\", \".png\", \".bmp\", \".JPG\", \".gif\", \".jpeg\", \".JPEG\"];\nconst videoExt = [\".mov\", \".mp4\", \".avi\", \".m4v\", \".MOV\", \".MP4\"];\nconst pdfExt = [\".pdf\"];\n\nexport default function ListFilesPanel() {\n  const {\n    nas,\n    isLoading,\n    update,\n    selectedDocument,\n    selectDocument\n  } = useContext(HomePageContext);\n  const [previewAnchor, setPreviewAnchor] = React.useState<null | HTMLElement>(\n    null\n  );\n  const [onHoverFile, setOnHoverFile] = useState<NasFile>();\n  const [selectedFile, setselectedFile] = useState<NasFile>();\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [showMoveToDialog, setShowMoveToDialog] = useState(false);\n  const [imageSrc, setImageSrc] = useState<string | undefined>(undefined);\n  const [videoSrc, setVideoSrc] = useState<\n    { src: string; cover: string } | undefined\n  >(undefined);\n\n  const [pdfSrc, setpdfSrc] = useState<string | undefined>(undefined);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClosePreview = () => {\n    setPreviewAnchor(null);\n  };\n\n  function isImage(filepath: string): boolean {\n    return imageExt.includes(path.extname(filepath));\n  }\n\n  function isVideo(filepath: string): boolean {\n    return videoExt.includes(path.extname(filepath));\n  }\n\n  function isPdf(filepath: string): boolean {\n    return pdfExt.includes(path.extname(filepath));\n  }\n\n  function getIcon(filepath: string): SemanticICONS {\n    if (isImage(filepath)) {\n      return \"images\";\n    } else if (isVideo(filepath)) {\n      return \"file video\";\n    }\n\n    return \"file\";\n  }\n\n  return (\n    <div id=\"file-list\">\n      <Grid>\n        <FilesActions />\n        <Grid.Row style={{ overflow: \"auto\", overflowX: \"hidden\" }}>\n          {/** Render files */}\n          {nas.currentFolder && nas.currentFolder.files.length > 0 && (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Last Modify</TableCell>\n                    <TableCell>Size</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {nas.currentFolder.files.map((f, i) => (\n                    <TableRow hover>\n                      <TableCell\n                        style={{ cursor: \"grab\" }}\n                        onMouseOver={e => {\n                          setPreviewAnchor(e.currentTarget);\n                          setOnHoverFile(f);\n                        }}\n                        onMouseLeave={() => {\n                          handleClosePreview();\n                          setOnHoverFile(undefined);\n                        }}\n                        onClick={() => {\n                          if (isImage(f.file)) {\n                            setImageSrc(f.file);\n                          } else if (isVideo(f.file)) {\n                            setVideoSrc({\n                              src: f.transcode_filepath ?? f.file,\n                              cover: f.cover\n                            });\n                          } else if (isPdf(f.file)) {\n                            setpdfSrc(f.file);\n                          }\n                        }}\n                      >\n                        <Icon\n                          name={getIcon(f.file)}\n                          size=\"large\"\n                          color=\"teal\"\n                        />\n                        {path.basename(f.filename)}\n                      </TableCell>\n                      <TableCell>\n                        {moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                      </TableCell>\n                      <TableCell>{formatBytes(f.size)}</TableCell>\n                      <TableCell>\n                        <IconButton\n                          onClick={e => {\n                            setselectedFile(f);\n                            handleClick(e);\n                          }}\n                        >\n                          <MoreHorizIcon></MoreHorizIcon>\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n          {/** End Render files */}\n        </Grid.Row>\n        {/** File Action Menu */}\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem\n            onClick={() => {\n              /// Download from link\n              if (selectedFile) {\n                const link = document.createElement(\"a\");\n                link.href = `${selectedFile.file}`;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n              }\n              handleClose();\n            }}\n          >\n            Download\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                handleClose();\n                setShowRenameDialog(true);\n              }\n            }}\n          >\n            Rename\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                await nas.deleteFile(selectedFile.id);\n                handleClose();\n                update();\n              }\n            }}\n          >\n            Delete\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                handleClose();\n                setShowMoveToDialog(true);\n              }\n            }}\n          >\n            Move To\n          </MenuItem>\n        </Menu>\n        {/** end file action menu */}\n        {selectedDocument && (\n          <Editor\n            open={selectedDocument !== undefined}\n            setOpen={v => {\n              !v && selectDocument(undefined);\n            }}\n            document={selectedDocument}\n          ></Editor>\n        )}\n        {/** Preview image */}\n        <Modal\n          open={imageSrc !== undefined}\n          onClose={() => setImageSrc(undefined)}\n        >\n          <Image src={imageSrc} fluid></Image>\n        </Modal>\n        {/** End preview image */}\n        {/** Preview video */}\n        <Modal\n          open={videoSrc !== undefined}\n          onClose={() => setVideoSrc(undefined)}\n        >\n          <Player poster={videoSrc && videoSrc.cover}>\n            <source src={videoSrc && videoSrc.src} />\n          </Player>\n        </Modal>\n        {/** End preview video */}\n        {/** Preview pdf */}\n        <Modal open={pdfSrc !== undefined} onClose={() => setpdfSrc(undefined)}>\n          {pdfSrc && <PDFViewer file={pdfSrc} />}\n        </Modal>\n        {/** End preview pdf */}\n        {selectedFile && (\n          <MoveDialog\n            type=\"file\"\n            open={showMoveToDialog}\n            selectedFile={selectedFile}\n            onClose={() => {\n              setShowMoveToDialog(false);\n            }}\n          />\n        )}\n        {selectedFile && (\n          <RenameDialog\n            type=\"file\"\n            open={showRenameDialog}\n            selectedFile={selectedFile}\n            onClose={() => {\n              setShowRenameDialog(false);\n              setselectedFile(undefined);\n            }}\n          />\n        )}\n      </Grid>\n      {/** Preview */}\n      <Popper open={Boolean(previewAnchor)} anchorEl={previewAnchor}>\n        {onHoverFile && (\n          <Card style={{ padding: 10 }}>\n            {isImage(onHoverFile.filename) && (\n              <CardMedia\n                style={{ height: 140, width: 140 }}\n                image={onHoverFile.file}\n              />\n            )}\n            {isVideo(onHoverFile.filename) &&\n              (onHoverFile.cover ? (\n                <CardActionArea>\n                  <CardMedia\n                    style={{ height: 140, width: 140 }}\n                    image={onHoverFile.cover}\n                  />\n                  <CardContent> {formatBytes(onHoverFile.size)}</CardContent>\n                </CardActionArea>\n              ) : (\n                <div>\n                  {onHoverFile.filename} - {formatBytes(onHoverFile.size)}\n                </div>\n              ))}\n          </Card>\n        )}\n      </Popper>\n      {/** end preview */}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport List from \"@material-ui/core/List\";\nimport { Icon, Grid, Item } from \"semantic-ui-react\";\nimport {\n  ListItem,\n  ListItemText,\n  LinearProgress,\n  Box,\n  Typography\n} from \"@material-ui/core\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\n\nexport default function UploadFilesSideBar() {\n  const { uploadFiles, uploadInfo } = useContext(HomePageContext);\n  const { systemInfo } = useContext(SystemContext);\n\n  return (\n    <List>\n      {systemInfo && (\n        <Grid style={{ height: \"100%\", marginTop: 10 }}>\n          <Grid.Row style={{ height: 40 }}>\n            <Grid.Column width={8}>\n              <div>CPU</div>\n              <LinearProgress\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={systemInfo.cpu}\n              />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <div>Memory</div>\n              <LinearProgress\n                title=\"Memory\"\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={(systemInfo.memory.used / systemInfo.memory.total) * 100}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )}\n\n      {uploadFiles ? (\n        uploadFiles.map((f, i) => (\n          <ListItem>\n            <ListItemIcon>\n              <Icon name=\"file\" />\n            </ListItemIcon>\n            <ListItemText\n              primary={f.name}\n              secondary={\n                <LinearProgress\n                  color=\"secondary\"\n                  variant={\n                    uploadInfo && uploadInfo.currentIndex === i\n                      ? \"determinate\"\n                      : \"indeterminate\"\n                  }\n                  value={\n                    uploadInfo && uploadInfo.currentIndex === i\n                      ? uploadInfo.progress\n                      : undefined\n                  }\n                />\n              }\n            />\n          </ListItem>\n        ))\n      ) : (\n        <Grid style={{ height: \"100%\" }} centered verticalAlign=\"middle\">\n          <div style={{ marginTop: \"10px\", marginBottom: \"auto\" }}>\n            No Pending Uploads\n          </div>\n        </Grid>\n      )}\n    </List>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  fade,\n  InputBase,\n  MenuList,\n  Popper,\n  Paper,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../../models/Folder\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport { NavLink } from \"react-router-dom\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport MoveDialog from \"../files/MoveDialog\";\nimport RenameDialog from \"../files/RenameDialog\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popper: {\n      marginTop: 10,\n      marginRight: 15,\n      width: \"40ch\",\n      maxHeight: 400,\n      overflow: \"auto\"\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport default function SearchField() {\n  const classes = useStyles();\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [value, setValue] = useState(\"\");\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        {isLoading ? (\n          <CircularProgress size={20} color=\"inherit\" />\n        ) : (\n          <SearchIcon />\n        )}\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput\n        }}\n        inputProps={{ \"aria-label\": \"search\" }}\n        onClick={e => setAnchorEl(e.currentTarget)}\n        onChange={async e => {\n          let keyword = e.target.value;\n          setValue(keyword);\n        }}\n        onKeyDown={async e => {\n          if (e.key === \"Enter\") {\n            setIsLoading(true);\n            await nas.search(value);\n            update();\n            setIsLoading(false);\n          }\n        }}\n      />\n\n      <Popper open={Boolean(anchorEl)} anchorEl={anchorEl}>\n        <ClickAwayListener onClickAway={handleClose}>\n          <Paper className={classes.popper}>\n            {nas.searchedFiles.length === 0 && (\n              <MenuItem>No File. Press Enter to search</MenuItem>\n            )}\n            {nas.searchedFiles.map(f => (\n              <MenuItem\n                key={f.id}\n                onClick={() => {\n                  window.location.href = `#/home/${f.parent}`;\n                  handleClose();\n                }}\n              >\n                {path.basename(f.filename)}\n              </MenuItem>\n            ))}\n          </Paper>\n        </ClickAwayListener>\n      </Popper>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport Header from \"./components/others/Header\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport ListPanel from \"./components/folders/ListFolderPanel\";\nimport { Container, Segment, Progress, Grid, Menu } from \"semantic-ui-react\";\nimport NasMenus from \"./components/others/NasMenu\";\nimport ComputerStatus from \"./components/others/ComputerStatus\";\nimport ListFilesPanel from \"./components/files/ListFilesPanel\";\nimport { HomePageContext } from \"../../models/HomeContext\";\nimport { ContextMenu, ContextMenuTrigger } from \"react-contextmenu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport UploadFilesSideBar from \"./components/files/UploadFilesSideBar\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {\n  Hidden,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n  Typography,\n  InputBase,\n  createMuiTheme,\n  ThemeProvider\n} from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport SearchField from \"./components/files/SearchField\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fafafa\"\n    }\n  }\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport function HomePage() {\n  const { nas, isLoading, update } = useContext(HomePageContext);\n  const [show, setShow] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div\n        id=\"home\"\n        style={{\n          height: \"100%\",\n          overflow: \"hidden\"\n        }}\n      >\n        {/** App Bar */}\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Hidden mdUp>\n              <IconButton\n                className={classes.menuButton}\n                color=\"inherit\"\n                onClick={() => {\n                  setShow(true);\n                }}\n              >\n                <MenuIcon />\n              </IconButton>\n            </Hidden>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Django Nas\n            </Typography>\n            <SearchField />\n          </Toolbar>\n        </AppBar>\n        {/** End App Bar */}\n        {/** drawer */}\n        <Drawer open={show} onClose={() => setShow(false)}>\n          <div style={{ width: 300, height: \"100%\" }}>\n            <ListPanel />\n          </div>\n        </Drawer>\n        {/** end drawer */}\n        <Segment\n          loading={isLoading}\n          style={{\n            height: \"100%\",\n            margin: 0\n          }}\n        >\n          <Grid\n            style={{\n              height: \"100%\",\n              overflow: \"hidden\",\n              position: \"relative\"\n            }}\n          >\n            <Grid.Row\n              style={{ height: \"100%\", paddingTop: 0, paddingBottom: 0 }}\n            >\n              {/** left side */}\n              <Hidden smDown implementation=\"js\">\n                <Grid.Column\n                  computer={3}\n                  style={{ height: \"100%\", backgroundColor: \"#fcfcfc\" }}\n                >\n                  <ContextMenuTrigger id=\"folder\">\n                    <Grid.Row style={{ height: \"92%\" }}>\n                      <ListPanel />\n                    </Grid.Row>\n                    <Grid.Row>\n                      <ComputerStatus />\n                    </Grid.Row>\n                  </ContextMenuTrigger>\n                </Grid.Column>\n              </Hidden>\n              {/** end left */}\n              <Grid.Column\n                computer={10}\n                mobile={16}\n                tablet={16}\n                style={{ height: \"100%\" }}\n              >\n                <ContextMenuTrigger id=\"files\">\n                  <ListFilesPanel />\n                </ContextMenuTrigger>\n              </Grid.Column>\n              {/** right side */}\n              <Hidden smDown implementation=\"js\">\n                <Grid.Column\n                  computer={3}\n                  style={{\n                    height: \"100%\",\n                    backgroundColor: \"#fcfcfc\"\n                  }}\n                >\n                  <UploadFilesSideBar />\n                </Grid.Column>\n              </Hidden>\n              {/** end right side */}\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        <NasMenus />\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  Cell\n} from \"recharts\";\nimport { Segment } from \"semantic-ui-react\";\n\ninterface Props {\n  title: string;\n  used: number;\n  total: number;\n  color: string;\n  color2: string;\n}\nconst data02 = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\nexport default function PercentageChart(props: Props) {\n  const { title, used, total, color, color2 } = props;\n  let data = [\n    {\n      name: \"Used\",\n      value: used\n    },\n    { name: \"Available\", value: total - used }\n  ];\n\n  return (\n    <Segment>\n      <ResponsiveContainer\n        minHeight={300}\n        height=\"100%\"\n        width=\"100%\"\n        minWidth={200}\n      >\n        <PieChart>\n          <Pie\n            data={data}\n            dataKey=\"value\"\n            label\n            fill={color}\n            isAnimationActive={false}\n          >\n            <Cell fill={color}></Cell>\n            <Cell fill={color2}></Cell>\n          </Pie>\n\n          <Tooltip></Tooltip>\n        </PieChart>\n      </ResponsiveContainer>\n      <span>{title}</span>\n    </Segment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Container, Grid, Segment } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../models/SystemContext\";\nimport PercentageChart from \"./PercentageChart\";\n\nexport default function SystemInfoPage() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return <div>Infomation Not Available</div>;\n  }\n\n  return (\n    <div id=\"home\" style={{ width: \"100%\", color: \"black\" }}>\n      <Container>\n        <h1>System Info</h1>\n        <Grid columns={2}>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.disk.used / 1024 / 1024)}\n              total={Math.round(systemInfo.disk.total / 1024 / 1024)}\n              title=\"Disk(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.memory.used / 1024 / 1024)}\n              total={Math.round(systemInfo.memory.total / 1024 / 1024)}\n              title=\"Memory(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={systemInfo.cpu}\n              total={100}\n              title=\"CPU Usage(Percentage)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Temperature</h4>\n              <h1>\n                {systemInfo.temperature\n                  ? systemInfo.temperature.toFixed(1)\n                  : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Humidity</h4>\n              <h1>\n                {systemInfo.humidity ? systemInfo.humidity.toFixed(1) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Pressure</h4>\n              <h1>\n                {systemInfo.pressure ? systemInfo.pressure.toFixed(2) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\nimport * as path from \"path\";\n//@ts-ignore\nimport { MarkdownToQuill } from \"md-to-quill-delta\";\nconst QuillDeltaToHtmlConverter = require(\"quill-delta-to-html\")\n  .QuillDeltaToHtmlConverter;\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface DocumentContext {\n  nas: Nas;\n  isLoading: boolean;\n  errorMsg?: string;\n  currentDocument?: NasDocument;\n  update(): void;\n  updateDocument(doc: NasDocument): void;\n  saveDocument(): Promise<void>;\n  saveToLocal(savingType: \"html\" | \"pdf\"): Promise<void>;\n  oepnFromLocal(): Promise<void>;\n  newDocument(name: string): Promise<void>;\n}\n\ninterface DocumentProps extends RouteComponentProps<RouterProps> {}\n\nexport class DocumentProvider extends Component<\n  DocumentProps,\n  DocumentContext\n> {\n  constructor(props: DocumentProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      isLoading: false,\n      update: this.update,\n      updateDocument: this.update,\n      saveDocument: this.saveDocument,\n      saveToLocal: this.saveToLocal,\n      oepnFromLocal: this.openFromLocal,\n      newDocument: this.newDocument\n    };\n  }\n\n  async componentDidUpdate(oldProps: DocumentProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      if (id) {\n        await this.fetch(id);\n      }\n    }\n  }\n\n  updateDocument = (doc: NasDocument) => {\n    this.setState({ currentDocument: doc });\n  };\n\n  saveDocument = async () => {\n    try {\n      let doc = this.state.currentDocument;\n      if (doc) {\n        this.setState({ isLoading: true });\n        await this.state.nas.updateDocument(doc.id, doc.name, doc.content);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to save\" });\n    } finally {\n      this.setState({ isLoading: false });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  newDocument = async (name: string) => {};\n\n  readFile = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onload = content => {\n        let text = reader.result;\n\n        resolve(text as string);\n      };\n      reader.readAsText(file);\n    });\n  };\n\n  openFromLocal = async () => {\n    const { currentDocument, nas } = this.state;\n    try {\n      let input =\n        (document.getElementById(\"new file\") as HTMLInputElement) ??\n        document.createElement(\"input\");\n      input.id = \"new file\";\n      input.type = \"file\";\n      input.accept = \".md,.html\";\n      input.multiple = false;\n      input.click();\n      input.addEventListener(\"change\", async e => {\n        this.setState({\n          isLoading: true,\n          errorMsg: \"Reading Local Document...\"\n        });\n        let files = input.files;\n        if (files) {\n          let file = files[0];\n          let ext = path.extname(file.name);\n          if (ext === \".md\") {\n            const converter = new MarkdownToQuill();\n            let content = await this.readFile(file);\n            let delta = converter.convert(content);\n            this.setState({ errorMsg: \"Creating New Document\" });\n            let d = await nas.createNewDocument(\n              file.name,\n              { ops: delta } as any,\n              currentDocument?.parent\n            );\n            this.setState({\n              errorMsg: \"Document Created. Preparing for redirecting\"\n            });\n            setTimeout(() => {\n              this.setState({ isLoading: false, errorMsg: undefined });\n              window.location.href = \"#/document/\" + d.id;\n            }, 1500);\n          }\n        }\n        input.remove();\n      });\n    } catch (err) {\n      this.setState({ errorMsg: \"Unable to open file\", isLoading: false });\n    }\n  };\n\n  saveToLocal = async (savingType: \"html\" | \"pdf\") => {\n    let doc = this.state.currentDocument;\n    if (doc) {\n      switch (savingType) {\n        case \"html\":\n          let converter = new QuillDeltaToHtmlConverter(doc.content);\n          let html = converter.convert();\n          break;\n      }\n    }\n  };\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    if (id) {\n      await this.fetch(id);\n    }\n  }\n\n  fetch = async (id: string) => {\n    try {\n      this.setState({ isLoading: true });\n      let document = await this.state.nas.getDocument(id);\n      setTimeout(() => {\n        this.setState({ currentDocument: document });\n      }, 400);\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to open\" });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 500);\n      this.setState({ currentDocument: undefined });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <DocumentContext.Provider value={this.state}>\n        {this.props.children}\n      </DocumentContext.Provider>\n    );\n  }\n}\n\nconst context: DocumentContext = {\n  nas: new Nas(),\n  update: () => {},\n  updateDocument: (d: NasDocument) => {},\n  saveDocument: () => {\n    return Promise.resolve();\n  },\n  oepnFromLocal: () => {\n    return Promise.resolve();\n  },\n  newDocument: () => {\n    return Promise.resolve();\n  },\n  saveToLocal: () => {\n    return Promise.resolve();\n  },\n  isLoading: false\n};\n\nexport const DocumentContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  CardActions,\n  IconButton,\n  CircularProgress,\n  Fade,\n  Collapse,\n  LinearProgress,\n  Tooltip,\n  Divider\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\n\nimport { Button } from \"semantic-ui-react\";\n\ninterface Props {\n  onClose(): void;\n}\n\nexport default function MoveDialog(props: Props) {\n  const { nas, update, currentDocument, updateDocument } = useContext(\n    DocumentContext\n  );\n  const [loading, setLoading] = useState(false);\n  const [loadingFolder, setLoadingFolder] = useState(false);\n\n  return (\n    <Card style={{ width: \"300px\" }}>\n      <CardContent>\n        <div>\n          <IconButton\n            onClick={async () => {\n              setLoadingFolder(true);\n              await nas.getContent(nas.currentFolder?.parent);\n              update();\n              setTimeout(() => {\n                setLoadingFolder(false);\n              }, 500);\n            }}\n          >\n            <ArrowBackIosIcon />\n          </IconButton>\n          {nas.currentFolder?.name ?? \"root\"}\n        </div>\n        <Collapse in={loadingFolder} mountOnEnter unmountOnExit>\n          <LinearProgress />\n        </Collapse>\n\n        <Collapse in={!loadingFolder} mountOnEnter unmountOnExit>\n          <List style={{ padding: 0 }}>\n            {nas.currentFolder?.folders?.map((f, i) => (\n              <ListItem\n                key={`folder-${i}`}\n                button\n                onClick={async () => {\n                  setLoadingFolder(true);\n                  await nas.getContent(f.id);\n                  update();\n                  setTimeout(() => {\n                    setLoadingFolder(false);\n                  }, 500);\n                }}\n              >\n                <ListItemIcon>\n                  <FolderIcon />\n                </ListItemIcon>\n                <ListItemText primary={f.name} />\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n        <Divider />\n      </CardContent>\n      <CardActions disableSpacing>\n        <Tooltip title=\"New Folder\">\n          <IconButton>\n            <CreateNewFolderIcon />\n          </IconButton>\n        </Tooltip>\n        <Button\n          loading={loading}\n          color=\"blue\"\n          style={{ marginLeft: \"auto\" }}\n          size=\"tiny\"\n          onClick={async () => {\n            if (currentDocument && nas.currentFolder) {\n              setLoading(true);\n              console.log(nas.currentFolder);\n              await nas.moveDocument(\n                currentDocument.id,\n                nas.currentFolder.id ?? null\n              );\n              currentDocument.parent = nas.currentFolder.id;\n              updateDocument(currentDocument);\n\n              setTimeout(() => {\n                setLoading(false);\n                update();\n                props.onClose();\n              }, 400);\n            }\n          }}\n        >\n          Move Here\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport AutosizeInput from \"react-input-autosize\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  Popper,\n  ClickAwayListener,\n  Paper,\n  Fade,\n  Slide,\n  Collapse\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/Folder\";\nimport MoveDialog from \"./MoveDialog\";\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"18px\",\n    paddingTop: 5\n  },\n  button: {\n    padding: \"0px 5px\"\n  }\n}));\n\nexport default function Titlebar() {\n  const {\n    currentDocument,\n    updateDocument,\n    saveDocument,\n    isLoading,\n    nas,\n    update\n  } = useContext(DocumentContext);\n\n  const [anchorEl, setAnchorEl] = React.useState<undefined | HTMLElement>();\n  const [numChanges, setNumChanges] = useState(0);\n  const classes = useStyles();\n\n  if (currentDocument === undefined && !isLoading) {\n    return (\n      <div>\n        <AutosizeInput\n          id=\"test-input\"\n          className={classes.notchedOutline}\n          style={{\n            maxWidth: window.innerWidth * 0.8\n          }}\n          value={\"Cannot fetch document\"}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ marginTop: 15, marginLeft: 5 }}>\n      <Collapse in={isLoading && !currentDocument} unmountOnExit mountOnEnter>\n        <div style={{ height: 24, width: 100 }}>\n          <LinearProgress\n            variant=\"indeterminate\"\n            style={{ marginTop: 15, width: 100 }}\n          />\n        </div>\n      </Collapse>\n      <Collapse\n        in={!isLoading && currentDocument !== undefined}\n        mountOnEnter\n        unmountOnExit\n      >\n        <div>\n          <Tooltip title=\"Rename\">\n            <ClickAwayListener\n              onClickAway={async () => {\n                if (numChanges > 0) {\n                  await saveDocument();\n                  setNumChanges(0);\n                }\n              }}\n            >\n              <AutosizeInput\n                id=\"test-input\"\n                className={classes.notchedOutline}\n                style={{\n                  maxWidth: window.innerWidth * 0.8\n                }}\n                value={currentDocument?.name}\n                onChange={e => {\n                  if (currentDocument) {\n                    currentDocument.name = e.target.value;\n                    setNumChanges(numChanges + 1);\n                    updateDocument(currentDocument);\n                  }\n                }}\n              />\n            </ClickAwayListener>\n          </Tooltip>\n          <Tooltip title=\"Move\">\n            <IconButton\n              className={classes.button}\n              onClick={async e => {\n                setAnchorEl(e.currentTarget);\n                if (currentDocument) {\n                  await nas.getContent(currentDocument.parent as number);\n                }\n\n                update();\n              }}\n            >\n              <FolderIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </Collapse>\n\n      {anchorEl && (\n        <ClickAwayListener onClickAway={() => setAnchorEl(undefined)}>\n          <Popper\n            open={Boolean(anchorEl)}\n            anchorEl={anchorEl}\n            style={{ zIndex: 2000 }}\n            placement=\"right-end\"\n          >\n            <MoveDialog onClose={() => setAnchorEl(undefined)} />\n          </Popper>\n        </ClickAwayListener>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport FormatBoldIcon from \"@material-ui/icons/FormatBold\";\nimport FormatItalicIcon from \"@material-ui/icons/FormatItalic\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\nimport {\n  IconButton,\n  makeStyles,\n  Theme,\n  createStyles,\n  withStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    divider: {\n      height: \"10px\",\n      borderLeft: \"6px solid black\"\n    }\n  })\n);\n\nconst StyledToggleButtonGroup = withStyles(theme => ({\n  grouped: {\n    margin: theme.spacing(0.5),\n    border: \"none\",\n    padding: theme.spacing(0, 1),\n    \"&:not(:first-child)\": {\n      borderRadius: theme.shape.borderRadius\n    },\n    \"&:first-child\": {\n      borderRadius: theme.shape.borderRadius\n    }\n  }\n}))(ToggleButtonGroup);\nexport default function ToolsBar() {\n  const classes = useStyles();\n  return (\n    <div id=\"toolbar\">\n      <span className=\"ql-formats\">\n        <select className=\"ql-size\">\n          <option value=\"small\"></option>\n          <option selected></option>\n          <option value=\"large\"></option>\n          <option value=\"huge\"></option>\n        </select>\n        <button type=\"button\" className=\"ql-italic\"></button>\n        <button type=\"button\" className=\"ql-underline\"></button>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-indent\" value=\"-1\"></button>\n          <button type=\"button\" className=\"ql-indent\" value=\"+1\"></button>\n          <select className=\"ql-align\">\n            <option value=\"center\"></option>\n            <option value=\"right\"></option>\n            <option value=\"justify\"></option>\n          </select>\n          <button type=\"button\" className=\"ql-direction\" value=\"rtl\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"ordered\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"bullet\"></button>\n        </span>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-image\"></button>\n          <button type=\"button\" className=\"ql-code-block\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"sub\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"super\"></button>\n          <button type=\"button\" className=\"ql-clean\"></button>\n        </span>\n      </span>\n    </div>\n  );\n}\n","import Parchment from \"parchment\";\nimport { Quill } from \"react-quill\";\n\nconst BlockEmbed = Quill.import('blots/block/embed') as { new(node: any, value: any): Object };\nexport class DividerBlot extends BlockEmbed {\n  static blotName = 'divider';\n  static tagName = 'hr';\n}\n","import React, { useContext, useState } from \"react\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  InputBase,\n  TextField,\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/Folder\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport { DividerBlot } from \"./blots/DividerBlot\";\n\nQuill.register(DividerBlot);\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"20px\"\n  }\n}));\n\nexport default function BodyEditor() {\n  const { currentDocument, updateDocument, saveDocument } = useContext(\n    DocumentContext\n  );\n  const [numChanges, setNumberOfChanges] = useState(0);\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n  const save = async () => {\n    if (currentDocument && editor) {\n      let data = editor.getEditor().getContents();\n      currentDocument.content = data;\n      updateDocument(currentDocument);\n      await saveDocument();\n      setNumberOfChanges(0);\n    }\n  };\n\n  const modules = {\n    toolbar: {\n      container: \"#toolbar\"\n    }\n  };\n  if (currentDocument === undefined) {\n    return (\n      <ReactQuill\n        style={{\n          height: \"100%\",\n          border: 0,\n          paddingBottom: \"85px\"\n        }}\n        modules={modules}\n      />\n    );\n  }\n\n  return (\n    <ClickAwayListener\n      onClickAway={async () => {\n        if (numChanges > 0) {\n          await save();\n        }\n      }}\n    >\n      <ReactQuill\n        ref={instance => setEditor(instance != null ? instance : undefined)}\n        onKeyDown={async () => {\n          setNumberOfChanges(numChanges + 1);\n          if (numChanges > 3) {\n            await save();\n          }\n        }}\n        onChange={async e => {}}\n        style={{ height: \"100%\", border: 0, paddingBottom: \"85px\" }}\n        defaultValue={currentDocument.content}\n        modules={modules}\n      />\n    </ClickAwayListener>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { Button, makeStyles, MenuItem, Menu } from \"@material-ui/core\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    padding: \"4px 6px\",\n    minWidth: \"40px\",\n    fontSize: \"14px\",\n    fontWeight: \"normal\",\n    textTransform: \"capitalize\"\n  },\n  menuItem: {\n    minWidth: 150\n  }\n}));\n\nexport default function MenuBar() {\n  const classes = useStyles();\n  const { isLoading, saveToLocal, oepnFromLocal } = React.useContext(\n    DocumentContext\n  );\n  const [fileEl, setfileEl] = React.useState<null | HTMLElement>(null);\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        size=\"small\"\n        onClick={e => setfileEl(e.currentTarget)}\n      >\n        File\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Edit\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Settings\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Tools\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Help\n      </Button>\n      <span\n        style={{ textDecoration: \"underline\", color: \"grey\", marginLeft: 20 }}\n      >\n        {isLoading ? \"Commnucating with server\" : \"All changes saved in Drive\"}\n      </span>\n      <Menu\n        anchorEl={fileEl}\n        keepMounted\n        open={Boolean(fileEl)}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        onClose={() => {\n          setfileEl(null);\n        }}\n      >\n        <MenuItem\n          onClick={async () => {\n            await oepnFromLocal();\n            setfileEl(null);\n          }}\n        >\n          Open\n        </MenuItem>\n        <NestedMenuItem\n          label=\"Download\"\n          parentMenuOpen={Boolean(fileEl)}\n          className={classes.menuItem}\n        >\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"pdf\");\n              setfileEl(null);\n            }}\n          >\n            PDF Document (.pdf){\" \"}\n          </MenuItem>\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"html\");\n              setfileEl(null);\n            }}\n          >\n            Web Page (.html){\" \"}\n          </MenuItem>\n        </NestedMenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button, Grid, Divider } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Backdrop,\n  CircularProgress,\n  Card,\n  AppBar,\n  Toolbar,\n  createMuiTheme,\n  ThemeProvider,\n  IconButton,\n  makeStyles,\n  Container,\n  Paper,\n  Snackbar,\n  Tooltip\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../models/DocumentContext\";\nimport Titlebar from \"./components/Titlebar\";\nimport ToolsBar from \"./components/ToolsBar\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport BodyEditor from \"./components/BodyEditor\";\nimport \"../../../document.css\";\nimport { NavLink } from \"react-router-dom\";\nimport MenuBar from \"./components/MenuBar\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: \"#ffffff\"\n    },\n    primary: {\n      main: \"#00b2ff\"\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  appbar: {\n    height: \"90px\"\n  },\n  container: {\n    paddingTop: \"95px\",\n    height: \"100%\"\n  },\n  row: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  largeIcon: {\n    width: 40,\n    height: 40\n  }\n}));\n\nexport default function DocumentEditor() {\n  const { currentDocument, isLoading, errorMsg } = useContext(DocumentContext);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <AppBar elevation={0} className={classes.appbar} color=\"secondary\">\n          <Toolbar>\n            <Tooltip title=\"Back\">\n              <NavLink to={`/home/${currentDocument?.parent ?? \"\"}`}>\n                <DescriptionIcon\n                  className={classes.largeIcon}\n                  fontSize=\"large\"\n                  color=\"primary\"\n                />\n              </NavLink>\n            </Tooltip>\n            <Grid style={{ marginLeft: 10 }}>\n              <Grid.Row style={{ padding: 0 }}>\n                <Titlebar />\n              </Grid.Row>\n              <Grid.Row style={{ paddingTop: 0, paddingBottom: 0 }}>\n                <MenuBar />\n              </Grid.Row>\n              <Grid.Row style={{ padding: 0 }}>\n                {currentDocument && <ToolsBar />}\n              </Grid.Row>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Container id=\"container\" className={classes.container}>\n          {currentDocument && (\n            <Paper\n              style={{ height: \"100%\", minHeight: window.innerHeight - 95 }}\n              square\n            >\n              <BodyEditor />\n            </Paper>\n          )}\n        </Container>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={errorMsg !== undefined}\n          message={errorMsg}\n        />\n        <Backdrop\n          open={isLoading && currentDocument === undefined}\n          style={{\n            zIndex: 1,\n            color: \"#fff\"\n          }}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { I18nProvider } from \"@lingui/react\";\n\nReactDOM.render(\n  <I18nProvider catalogs={{}}>\n    <App />\n  </I18nProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  HashRouter as Router,\n  Route,\n  Link,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport { HomePage } from \"./components/pages/home/HomePage\";\nimport { HomePageProvider } from \"./components/models/HomeContext\";\nimport { SystemProvider } from \"./components/models/SystemContext\";\nimport SystemInfoPage from \"./components/pages/systemInfo/SystemInfoPage\";\nimport { Sidebar, Menu, Icon, Button } from \"semantic-ui-react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { IconButton } from \"@material-ui/core\";\nimport { DocumentProvider } from \"./components/models/DocumentContext\";\nimport DocumentEditor from \"./components/pages/document/DocumentEditor\";\n\nexport default function App() {\n  const [visible, setVisible] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <SystemProvider>\n      <Router>\n        <div style={{ height: \"100%\" }}>\n          <Route exact path=\"/\" component={() => <Redirect to=\"/home\" />} />\n          <Route\n            exact\n            path=\"/home/:id?\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return (\n                <HomePageProvider {...props}>\n                  <HomePage></HomePage>\n                </HomePageProvider>\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/document/:id\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return (\n                <DocumentProvider {...props}>\n                  <DocumentEditor />\n                </DocumentProvider>\n              );\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/info\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return <SystemInfoPage />;\n            }}\n          />\n        </div>\n      </Router>\n    </SystemProvider>\n  );\n}\n"],"sourceRoot":""}