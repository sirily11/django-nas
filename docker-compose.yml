version: "3"
services:
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
#    container_name: elasticsearch
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - discovery.type=single-node
#      - cluster.routing.allocation.disk.threshold_enabled=false
#    volumes:
#      - ./elasticsearch:/usr/share/elasticsearch/data
#    ports:
#      - 9200:9200

#  kibana:
#    image: kibana:7.5.1
#    ports:
#      - 5601:5601
#    depends_on:
#      - elasticsearch

  queue:
    build: ./docker
    image: server
    container_name: queue
    volumes:
      - ./:/usr/local/django_nas
    command: >
      sh -c "python manage.py rqworker"
    depends_on:
      - redis

  django:
    build: ./docker
    image: server
    volumes:
      - ./:/usr/local/django_nas
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:80"
    ports:
      - 80:80
    depends_on:
      - queue
#      - elasticsearch
  ftpd_server:
    build: ./docker/ftp
    container_name: ftp-container
    ports:
      - "21:21"
      - "30000-30009:30000-30009"
    volumes: # remember to replace /folder_on_disk/ with the path to where you want to store the files on the host machine
      - "./data:/home/username/"
      - "./passwd:/etc/pure-ftpd/passwd"
      - "./ssl:/etc/ssl/private/"
    environment:
      PUBLICHOST: "localhost"
      FTP_USER_NAME: sirily11
      FTP_USER_PASS: somepassword
      FTP_USER_HOME: /home/username
      FTP_MAX_CLIENTS: 100
      FTP_MAX_CONNECTIONS: 100
      # ADDED_FLAGS: "--tls=2"
    restart: always

  redis:
    image: redis:latest
    deploy:
      replicas: 1
    volumes:
      - ./data:/data

#  reindex:
#    build: ./docker
#    image: server
#    volumes:
#      - ./:/usr/local/django_nas
#    command: >
#      sh -c "python manage.py search_index --rebuild -f"
#    depends_on:
#      - django
