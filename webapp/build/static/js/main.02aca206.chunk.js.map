{"version":3,"sources":["components/models/urls.ts","components/models/nas.ts","components/models/HomeContext.tsx","components/pages/home/components/files/RenameDialog.tsx","components/models/MovingContext.tsx","components/pages/document/components/MoveDialog.tsx","components/pages/home/components/folders/ListFolderPanel.tsx","components/pages/home/components/files/UploadDialog.tsx","components/pages/home/JSONSchema/model/Schema.ts","components/pages/home/components/folders/NewFolderDialog.tsx","components/pages/home/components/documents/CreateDocumentDialog.tsx","components/pages/home/components/others/NasMenu.tsx","components/models/SystemContext.tsx","components/pages/home/components/files/utils.ts","components/pages/home/components/others/ComputerStatus.tsx","components/pages/home/components/documents/Editor.tsx","components/pages/home/components/files/FilesActions.tsx","components/pages/home/components/files/pdf/PDFViewer.tsx","components/pages/home/components/files/music/Musicplayer.tsx","components/pages/home/components/files/ListFilesPanel.tsx","components/pages/home/components/files/UploadFilesSideBar.tsx","components/pages/home/components/files/SearchField.tsx","components/pages/home/HomePage.tsx","components/pages/systemInfo/PercentageChart.tsx","components/pages/systemInfo/SystemInfoPage.tsx","components/models/DocumentContext.tsx","components/pages/document/components/Titlebar.tsx","components/pages/document/components/ToolsBar.tsx","components/pages/document/components/blots/DividerBlot.ts","components/pages/document/components/BodyEditor.tsx","components/pages/document/components/MenuBar.tsx","components/pages/document/DocumentEditor.tsx","serviceWorker.js","index.js","App.tsx","../node_modules/pdfjs-dist/build sync"],"names":["url","documentURL","Nas","constructor","menus","currentFolder","searchedFiles","errorMsg","moveFileTo","fileId","dest","a","Axios","patch","getContent","id","moveDocument","documentId","moveFolderTo","folderId","u","rename","newName","search","keyword","get","response","data","parents","undefined","uploadFile","files","isDir","onUpload","onFileUploaded","index","f","size","getUploadFileAndCreateFolder","getSingleUploadFile","formData","post","headers","onUploadProgress","progress","p","Math","round","loaded","total","console","log","alert","toString","deleteFile","showAlert","window","confirm","delete","deleteFolder","createNewFolder","name","parent","res","folders","push","renameFolder","findIndex","renameDocument","documents","getDocument","Promise","resolve","content","JSON","parse","createNewDocument","stringify","ops","updateDocument","deleteDocument","reject","this","file","FormData","append","path","webkitRelativePath","split","folder","HomePageProvider","Component","props","super","setUploadedFile","setState","uploadedFiles","selectDocument","document","selectedDocument","updateUploadInfo","uploadInfo","setUploadInfo","uploadFiles","fetch","isLoading","nas","state","update","setUploadedFiles","componentDidUpdate","oldProps","match","params","componentWillMount","render","HomePageContext","Provider","value","children","context","info","React","createContext","RenameDialog","useContext","useState","type","ext","selectedFile","filename","getDefaultName","setName","Dialog","open","fullWidth","DialogTitle","DialogContent","TextField","color","onChange","e","target","DialogActions","Button","onClick","onClose","MovingProvider","MovingContext","MoveDialog","currentFile","onMove","loading","setLoading","loadingFolder","setLoadingFolder","then","catch","err","Card","style","width","CardContent","IconButton","disabled","setTimeout","Collapse","in","mountOnEnter","unmountOnExit","LinearProgress","backgroundColor","List","padding","map","i","ListItem","key","button","ListItemIcon","ListItemText","primary","Divider","CardActions","disableSpacing","Tooltip","title","marginLeft","ListPanel","showMoveToDialog","setShowMoveToDialog","showRenameDialog","setShowRenameDialog","selectedFolder","setSelectedFolder","anchorEl","setAnchorEl","handleClose","overflow","overflowX","height","Grid","centered","Row","verticalAlign","Column","to","Message","error","MessageHeader","timeout","ListItemAvatar","Icon","location","href","secondary","moment","modified_at","format","ListItemSecondaryAction","currentTarget","Menu","keepMounted","Boolean","MenuItem","link","createElement","download_url","body","appendChild","click","removeChild","Error","UploadDialog","onInputChange","l","length","Modal","Header","Content","multiple","webkitdirectory","marginTop","Segment","Progress","percent","attached","active","currentName","currentIndex","Actions","basic","setOpen","inverted","current","uploadedDataSize","totalDataSize","Widget","text","NewFolderDialog","folderName","setFolderName","setIsLoading","label","required","CreateDocumentDialog","setIsloading","NasMenus","openFilesUpload","setOpenFilesUpload","openFolderUpload","setOpenFolderUpload","openNewFolder","setOpenNewFolder","openEditor","setOpenEditor","vertical","SystemProvider","fetchSystemInfo","componentDidMount","systemInfo","SystemContext","formatBytes","bytes","decimals","dm","floor","parseFloat","pow","toFixed","ComputerStatus","disk","used","Editor","editor","setEditor","isChanged","ref","instance","defaultValue","getEditor","getContents","FilesActions","shadow","setSelectedDocument","margin","computer","mobile","variant","raised","CardActionArea","PDFViewer","pageNumber","setpageNumber","onLoadSuccess","pdf","numPages","Array","from","el","pdfjs","GlobalWorkerOptions","workerSrc","version","readMusicTag","musicSrc","mm","metadata","Musicplayer","tag","pictures","common","picture","CardMedia","image","decodeURIComponent","Typography","component","artist","album","volume","src","Player","require","imageExt","videoExt","pdfExt","audioExt","ListFilesPanel","previewAnchor","setPreviewAnchor","selectedFiles","setSelectedFiles","onHoverFile","setOnHoverFile","setselectedFile","showMultiMoveDialog","setShowMultiMoveDialog","imageSrc","setImageSrc","audioSrc","setaudioSrc","videoSrc","setVideoSrc","pdfSrc","setpdfSrc","isImage","filepath","includes","extname","isVideo","Toolbar","aria-label","TableContainer","Table","TableHead","TableRow","TableCell","Checkbox","checked","TableBody","hover","selected","indexOf","splice","cursor","onMouseOver","onMouseLeave","transcode_filepath","cover","isPdf","basename","v","Image","fluid","poster","Popper","UploadFilesSideBar","overflowY","cpu","memory","filter","marginBottom","useStyles","makeStyles","theme","createStyles","popper","marginRight","maxHeight","position","borderRadius","shape","fade","palette","white","breakpoints","up","spacing","searchIcon","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchField","classes","setValue","className","CircularProgress","InputBase","placeholder","root","input","inputProps","onKeyDown","ClickAwayListener","onClickAway","Paper","createMuiTheme","main","flexGrow","menuButton","HomePage","show","setShow","ThemeProvider","AppBar","Hidden","mdUp","noWrap","Drawer","paddingTop","paddingBottom","smDown","implementation","tablet","PercentageChart","color2","minHeight","minWidth","dataKey","fill","isAnimationActive","SystemInfoPage","Container","columns","temperature","humidity","pressure","QuillDeltaToHtmlConverter","DocumentProvider","doc","currentDocument","saveDocument","newDocument","readFile","reader","FileReader","onload","result","readAsText","openFromLocal","getElementById","accept","addEventListener","converter","MarkdownToQuill","delta","convert","d","remove","saveToLocal","savingType","oepnFromLocal","DocumentContext","notchedOutline","border","fontWeight","background","fontSize","Titlebar","numChanges","setNumChanges","maxWidth","innerWidth","zIndex","placement","divider","borderLeft","withStyles","grouped","ToggleButtonGroup","ToolsBar","BlockEmbed","Quill","import","DividerBlot","blotName","tagName","register","BodyEditor","setNumberOfChanges","save","modules","toolbar","container","textTransform","menuItem","MenuBar","fileEl","setfileEl","textDecoration","getContentAnchorEl","anchorOrigin","horizontal","transformOrigin","parentMenuOpen","appbar","row","largeIcon","DocumentEditor","elevation","innerHeight","square","Snackbar","message","Backdrop","hostname","ReactDOM","catalogs","setShowMenu","exact","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","code","keys","module","exports"],"mappings":"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","file":"static/js/main.02aca206.chunk.js","sourcesContent":["export const systemURL = \"/system/\"\nexport const url = \"/api/folder/\"\nexport const fileURL = \"/api/file/\"\nexport const documentURL = \"/api/document/\"\nexport const searchFileURL = \"/api/file?search=\"\n// download folder\nexport const downloadURL = \"/api/download/\"","import Axios from \"axios\"\nimport { Folder, Parent, File as NasFile, Document as NasDocument } from './Folder';\n\nimport { url, documentURL, fileURL, searchFileURL } from \"./urls\"\nimport { DeltaStatic } from \"quill\";\nimport * as path from 'path';\n\n\n\ntype UploadProgressCallback = (index: number, progress: number) => void\n\n\nexport class Nas {\n    menus: Parent[]\n    currentFolder?: Folder\n    searchedFiles: NasFile[];\n    errorMsg?: string\n\n\n    constructor() {\n        this.menus = []\n        this.searchedFiles = [];\n    }\n\n    moveFileTo = async (fileId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`\n                await Axios.patch(url, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    moveDocument = async (documentId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${documentURL}${documentId}/`\n                await Axios.patch(url, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    moveFolderTo = async (folderId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let u = `${url}${folderId}/`\n                await Axios.patch(u, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Rename file\n     */\n    rename = async (fileId: number, newName: string) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`\n                await Axios.patch(url, { \"filename\": newName })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Search by keyword\n     * @param keyword Keyword\n     */\n    search = async (keyword: String) => {\n        try {\n            let url = `${searchFileURL}${keyword}`\n            let response = await Axios.get<NasFile[]>(url);\n            this.searchedFiles = response.data;\n        } catch (err) {\n            this.errorMsg = err\n        }\n    }\n\n    /**\n     * Get content by id\n     */\n    getContent = async (id?: number | string) => {\n        try {\n            let u = id ? `${url}${id}/` : url\n            let response = await Axios.get<Folder>(u)\n            const { data } = response\n            this.menus = data.parents\n            this.currentFolder = data\n            this.errorMsg = undefined\n        } catch (err) {\n            this.errorMsg = err\n            this.currentFolder = undefined\n        }\n    }\n\n\n    /**\n     * Upload file to server.\n     * If upload fail, will show alert dialog\n     * @param files: List of files\n     * @param onUpload: callback function\n     * @param isDir: Whether upload directory\n     */\n    uploadFile = async (files: File[], isDir: boolean, onUpload: (index: number, progress: number, current: number, total: number) => void, onFileUploaded: (file: File) => Promise<void>) => {\n        try {\n            let index = 0;\n            for (let f of files) {\n                if (this.currentFolder) {\n                    onUpload(index, 0, 0, f.size);\n\n                    let formData =\n                        isDir ?\n                            await this.getUploadFileAndCreateFolder(f) :\n                            this.getSingleUploadFile(f)\n\n                    await Axios.post<NasFile>(fileURL, formData,\n                        {\n                            headers: { 'Content-Type': 'multipart/form-data' },\n                            // eslint-disable-next-line no-loop-func\n                            onUploadProgress: (progress) => {\n                                let p = Math.round((progress.loaded * 100) / progress.total);\n                                onUpload(index, p, f.size * progress.loaded, progress.total)\n\n                            }\n\n                        })\n\n                    await this.getContent(this.currentFolder?.id)\n                    await onFileUploaded(f)\n\n                }\n                index += 1\n            }\n            onUpload(index, 100, 0, 0);\n        } catch (err) {\n            console.log(err)\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Only get the formdata but don't create folder\n     * @param file File\n     */\n    getSingleUploadFile(file: File): FormData | undefined {\n        if (this.currentFolder) {\n            let formData = new FormData()\n            formData.append(\"file\", file)\n            this.currentFolder.id && formData.append(\"parent\", this.currentFolder.id.toString())\n            return formData\n        }\n\n    }\n\n    /**\n     * Create folder for file. And then return the file\n     * For example file with path a/a.jpg will create a folder\n     * @param file Upload file\n     */\n    async getUploadFileAndCreateFolder(file: File): Promise<FormData | undefined> {\n        if (this.currentFolder) {\n            //@ts-ignore\n            let folders = path.dirname(file.webkitRelativePath).split(path.sep)\n            let folder: Folder | undefined;\n\n            for (let f of folders) {\n                let res = await Axios.post(url, { \"parent\": folder?.id ?? this.currentFolder.id ?? null, \"name\": f })\n                folder = res.data;\n\n            }\n\n            let formData = new FormData()\n\n            formData.append(\"file\", file)\n            console.log(\"parent\", folder)\n            folder && folder.id && formData.append(\"parent\", `${folder?.id}`)\n            return formData\n        }\n\n    }\n\n    /** \n     * Delete file by id\n     */\n    deleteFile = async (id: number, showAlert = true) => {\n        try {\n\n            let confirm = showAlert ? window.confirm(\"Are you sure you want to delete this file?\") : true\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${fileURL}${id}/`)\n                await this.getContent(this.currentFolder.id)\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Delete folder by id\n     */\n    deleteFolder = async (id: number) => {\n        try {\n            let confirm = window.confirm(\"Are you sure you want to delete this folder?\")\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${url}${id}/`)\n                await this.getContent(this.currentFolder.id)\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Create folder with name\n     * @param name\n     */\n    createNewFolder = async (name: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.post<Folder>(url, { name: name, parent: this.currentFolder.id ? this.currentFolder.id : null })\n            this.currentFolder.folders.push(res.data)\n        } else {\n            alert(\"Create new folder error: empty parent folder\")\n        }\n    }\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameFolder = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<Folder>(`${url}${id}/`, { \"name\": newName })\n            let index = this.currentFolder.folders.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.folders[index] = res.data\n            }\n        } else {\n            alert(\"Rename new folder error: empty parent folder\")\n        }\n    }\n\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameDocument = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { \"name\": newName })\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data\n            }\n        } else {\n            alert(\"Rename new document error\")\n        }\n    }\n\n    /**\n     * Get document from server.\n     * We need this function because we are getting abstract document object from server\n     * at begining(Which doesn't include content field).\n     * \n     * We will Call this function when user want to edit the file\n     */\n    getDocument = async (id: string | number): Promise<NasDocument> => {\n\n        let res = await Axios.get<NasDocument>(`${documentURL}${id}/`)\n        /// Need to parse the content into js object\n        return Promise.resolve({ ...res.data, content: JSON.parse(res.data.content) })\n\n    }\n\n    /**\n     * Create new document\n     * @param name: Name of the document\n     * @param data: EditorJS object\n     */\n    createNewDocument = async (name: string, data?: DeltaStatic, parent?: any) => {\n        let res = await Axios.post<NasDocument>(documentURL,\n            {\n                name: name, parent: this.currentFolder && this.currentFolder.id ? this.currentFolder.id : parent,\n                content: data ? JSON.stringify(data.ops) : undefined\n            })\n        this.currentFolder && this.currentFolder.documents.push(res.data)\n        return res.data\n    }\n\n    /**\n     * Update Document\n     * @param id: document's id\n     * @param data: EditorJS object\n     */\n    updateDocument = async (id: number, name: string, data: DeltaStatic) => {\n\n        let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { name, content: JSON.stringify(data?.ops) })\n        if (this.currentFolder) {\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data\n            }\n\n        }\n\n    }\n\n    /**\n     * Delete document by id\n     * \n     * @param id: document's id\n     */\n    deleteDocument = async (id: number) => {\n        if (this.currentFolder) {\n            let confirm = window.confirm(\"Do you want to delete this document?\")\n            if (confirm) {\n                let res = await Axios.delete<NasDocument>(`${documentURL}${id}/`)\n                await this.getContent(this.currentFolder.id)\n                return Promise.resolve(res.data)\n            } else {\n\n            }\n\n        } else {\n            alert(\"Create new folder error: empty parent folder\")\n            return Promise.reject()\n        }\n    }\n\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface HomePageContext {\n  nas: Nas;\n  selectedDocument?: NasDocument;\n  uploadInfo?: UploadInfo;\n  updateUploadInfo(info?: UploadInfo): void;\n  uploadFiles?: File[];\n  uploadedFiles: File[];\n  setUploadInfo(files?: File[]): void;\n  update(): void;\n  selectDocument(doc?: NasDocument): void;\n  setUploadedFiles(files: File[]): void;\n  isLoading: boolean;\n}\n\ninterface HomePageProps extends RouteComponentProps<RouterProps> {}\n\nexport class HomePageProvider extends Component<\n  HomePageProps,\n  HomePageContext\n> {\n  constructor(props: HomePageProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      selectDocument: this.selectDocument,\n      updateUploadInfo: this.updateUploadInfo,\n      setUploadInfo: this.setUploadInfo,\n      update: this.update,\n      uploadedFiles: [],\n      setUploadedFiles: this.setUploadedFile,\n      isLoading: false\n    };\n  }\n\n  setUploadedFile = (files: File[]) => {\n    this.setState({ uploadedFiles: files });\n  };\n\n  selectDocument = (document?: NasDocument) => {\n    this.setState({ selectedDocument: document });\n  };\n\n  updateUploadInfo = (uploadInfo?: UploadInfo) => {\n    this.setState({ uploadInfo });\n  };\n\n  setUploadInfo = (file: File[]) => {\n    this.setState({ uploadFiles: file });\n  };\n\n  async componentDidUpdate(oldProps: HomePageProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      await this.fetch(id);\n    }\n  }\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    await this.fetch(id);\n  }\n\n  fetch = async (id: any) => {\n    this.setState({ isLoading: true });\n    const { nas } = this.state;\n    await nas.getContent(id);\n    this.setState({ nas, isLoading: false });\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <HomePageContext.Provider value={this.state}>\n        {this.props.children}\n      </HomePageContext.Provider>\n    );\n  }\n}\n\nconst context: HomePageContext = {\n  nas: new Nas(),\n  uploadedFiles: [],\n  setUploadedFiles: (files: File[]) => {},\n  update: () => {},\n  selectDocument: () => {},\n  updateUploadInfo: (info: UploadInfo) => {},\n  setUploadInfo: (files: File[]) => {},\n  isLoading: false\n};\n\nexport const HomePageContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport * as path from \"path\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Button,\n  DialogActions\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  onClose(): void;\n  type: \"file\" | \"folder\" | \"document\";\n  selectedFile: NasFile | NasDocument | Folder;\n}\n\nexport default function RenameDialog(props: Props) {\n  const getDefaultName = () => {\n    switch (props.type) {\n      case \"file\":\n        let ext = path.extname((props.selectedFile as NasFile).filename);\n        return path.basename((props.selectedFile as NasFile).filename, ext);\n\n      case \"folder\":\n        return (props.selectedFile as Folder).name;\n\n      default:\n        return (props.selectedFile as NasDocument).name;\n    }\n  };\n\n  const { nas } = useContext(HomePageContext);\n\n  const [name, setName] = useState<string>(getDefaultName());\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>Rename</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          fullWidth\n          value={name}\n          onChange={e => {\n            setName(e.target.value);\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.onClose();\n            setName(\"\");\n          }}\n        >\n          cancel\n        </Button>\n        <Button\n          onClick={async () => {\n            if (name) {\n              switch (props.type) {\n                case \"file\":\n                  let ext = path.extname(\n                    (props.selectedFile as NasFile).filename\n                  );\n                  await nas.rename(props.selectedFile.id, `${name}${ext}`);\n                  break;\n                case \"folder\":\n                  await nas.renameFolder(props.selectedFile.id, name);\n                  break;\n                case \"document\":\n                  await nas.renameDocument(props.selectedFile.id, name);\n                  break;\n              }\n            }\n            props.onClose();\n          }}\n        >\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\n//@ts-ignore\n\ninterface MovingContext {\n  nas: Nas;\n  update(): void;\n}\n\ninterface MovingProps {}\n\nexport class MovingProvider extends Component<MovingProps, MovingContext> {\n  constructor(props: MovingProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      update: this.update\n    };\n  }\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <MovingContext.Provider value={this.state}>\n        {this.props.children}\n      </MovingContext.Provider>\n    );\n  }\n}\n\nconst context: MovingContext = {\n  nas: new Nas(),\n  update: () => {}\n};\n\nexport const MovingContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  CardActions,\n  IconButton,\n  CircularProgress,\n  Fade,\n  Collapse,\n  LinearProgress,\n  Tooltip,\n  Divider\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\n\nimport { Button } from \"semantic-ui-react\";\nimport { MovingContext } from \"../../../models/MovingContext\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../models/Folder\";\n\ninterface Props {\n  currentFile: Folder | NasFile | NasDocument;\n  onClose(): void;\n  onMove(file: Folder | NasFile | NasDocument, dest: Folder): Promise<void>;\n}\n\nexport default function MoveDialog(props: Props) {\n  const { nas, update } = useContext(MovingContext);\n  const { currentFile, onMove, onClose } = props;\n  const [loading, setLoading] = useState(false);\n  const [loadingFolder, setLoadingFolder] = useState(\n    nas.currentFolder === undefined\n  );\n\n  if (!nas.currentFolder) {\n    nas\n      .getContent(currentFile.parent as any)\n      .then(() => {\n        setLoadingFolder(false);\n      })\n      .catch(err => {\n        alert(`${err}`);\n        setLoadingFolder(false);\n      });\n  }\n\n  return (\n    <Card style={{ width: \"300px\" }}>\n      <CardContent>\n        <div>\n          <IconButton\n            disabled={nas.currentFolder?.parent === undefined}\n            onClick={async () => {\n              setLoadingFolder(true);\n              await nas.getContent(nas.currentFolder?.parent);\n              update();\n              setTimeout(() => {\n                setLoadingFolder(false);\n              }, 500);\n            }}\n          >\n            <ArrowBackIosIcon />\n          </IconButton>\n          {nas.currentFolder?.name ?? \"root\"}\n        </div>\n        <Collapse in={loadingFolder} mountOnEnter unmountOnExit>\n          <LinearProgress style={{ backgroundColor: \"#47bcff\" }} />\n        </Collapse>\n\n        <Collapse in={!loadingFolder} mountOnEnter unmountOnExit>\n          <List style={{ padding: 0 }}>\n            {nas.currentFolder?.folders?.map((f, i) => (\n              <ListItem\n                key={`folder-${i}`}\n                button\n                onClick={async () => {\n                  setLoadingFolder(true);\n                  await nas.getContent(f.id);\n                  update();\n                  setTimeout(() => {\n                    setLoadingFolder(false);\n                  }, 500);\n                }}\n              >\n                <ListItemIcon>\n                  <FolderIcon />\n                </ListItemIcon>\n                <ListItemText primary={f.name} />\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n        <Divider />\n      </CardContent>\n      <CardActions disableSpacing>\n        <Tooltip title=\"New Folder\">\n          <IconButton>\n            <CreateNewFolderIcon />\n          </IconButton>\n        </Tooltip>\n        <Button\n          loading={loading}\n          color=\"blue\"\n          style={{ marginLeft: \"auto\" }}\n          size=\"tiny\"\n          onClick={async () => {\n            if (currentFile && nas.currentFolder) {\n              try {\n                setLoading(true);\n                await onMove(currentFile, nas.currentFolder);\n                setTimeout(() => {\n                  setLoading(false);\n                  update();\n                  onClose();\n                  nas.currentFolder = undefined;\n                }, 400);\n              } catch (err) {\n                alert(\"Cannot move to this location\");\n                setLoading(false);\n              }\n            }\n          }}\n        >\n          Move Here\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Segment,\n  MessageHeader,\n  Message,\n  Icon,\n  Modal,\n  Image,\n  SemanticICONS,\n  Divider,\n  Label,\n  Button,\n  Popup,\n  Grid\n} from \"semantic-ui-react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  Collapse,\n  Dialog\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport Axios from \"axios\";\nimport \"video-react/dist/video-react.css\";\nimport { Folder, Document as NasDocument } from \"../../../../models/Folder\";\n\nimport { NavLink } from \"react-router-dom\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport RenameDialog from \"../files/RenameDialog\";\nimport { downloadURL } from \"../../../../models/urls\";\nimport MoveDialog from \"../../../document/components/MoveDialog\";\n\nexport default function ListPanel() {\n  const { nas, isLoading, update } = useContext(HomePageContext);\n  const [showMoveToDialog, setShowMoveToDialog] = useState(false);\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedFolder, setSelectedFolder] = useState<Folder | undefined>(\n    undefined\n  );\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      style={{\n        overflow: \"auto\",\n        overflowX: \"hidden\",\n        height: \"100%\",\n        color: \"blue\"\n      }}\n    >\n      <List>\n        <Grid centered>\n          <Grid.Row verticalAlign=\"middle\">\n            <Grid.Column width={5}>\n              {nas.currentFolder && nas.currentFolder.parent ? (\n                <NavLink to={`/home/${nas.currentFolder.parent}`}>\n                  <IconButton>\n                    <ArrowBackIosIcon />\n                  </IconButton>\n                </NavLink>\n              ) : (\n                <IconButton>\n                  <NavLink to={`/home`}>\n                    <ArrowBackIosIcon />\n                  </NavLink>{\" \"}\n                </IconButton>\n              )}\n            </Grid.Column>\n            <Grid.Column width={11}>\n              <div style={{ color: \"black\" }}>\n                {nas.currentFolder && nas.currentFolder.name}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        {nas.errorMsg && (\n          <Message error>\n            <MessageHeader>Network Error</MessageHeader>\n            <div>{nas.errorMsg.toString()}</div>\n          </Message>\n        )}\n        <Collapse in={!isLoading} timeout={300}>\n          {/*Render Folders*/}\n          {nas.currentFolder &&\n            nas.currentFolder.folders.map((f, i) => (\n              <ListItem button key={`folder-${f.id}`}>\n                <ListItemAvatar>\n                  <Icon name=\"folder\" size=\"large\" color=\"grey\"></Icon>\n                </ListItemAvatar>\n                <ListItemText\n                  onClick={() => {\n                    window.location.href = `#/home/${f.id}`;\n                  }}\n                  style={{ color: \"black\" }}\n                  primary={f.name}\n                  secondary={moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                />\n                {/** folder menu button */}\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={e => {\n                      handleClick(e);\n                      setSelectedFolder(f);\n                    }}\n                  >\n                    <MoreHorizIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n\n                {/** end folder menu button */}\n              </ListItem>\n            ))}\n        </Collapse>\n        {/*End Render Folders*/}\n      </List>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem\n          onClick={() => {\n            setShowRenameDialog(true);\n            handleClose();\n          }}\n        >\n          Rename\n        </MenuItem>\n        <MenuItem\n          onClick={async () => {\n            if (selectedFolder) {\n              let response = await Axios.post(\n                `${downloadURL}${selectedFolder.id}`\n              );\n\n              const link = document.createElement(\"a\");\n              link.href = `${response.data.download_url}`;\n              console.log(link.href);\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n            }\n          }}\n        >\n          Download Folder\n        </MenuItem>\n        <MenuItem\n          onClick={async () => {\n            if (selectedFolder) {\n              await nas.deleteFolder(selectedFolder.id);\n              handleClose();\n              update();\n              setSelectedFolder(undefined);\n            }\n          }}\n        >\n          Delete\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleClose();\n            setShowMoveToDialog(true);\n          }}\n        >\n          Move To\n        </MenuItem>\n      </Menu>\n\n      {selectedFolder && showRenameDialog && (\n        <RenameDialog\n          type=\"folder\"\n          selectedFile={selectedFolder}\n          open={showRenameDialog}\n          onClose={() => {\n            setSelectedFolder(undefined);\n            setShowRenameDialog(false);\n          }}\n        />\n      )}\n\n      {selectedFolder && showMoveToDialog && (\n        <Dialog\n          open={showMoveToDialog}\n          onClose={() => {\n            setShowMoveToDialog(false);\n            setSelectedFolder(undefined);\n          }}\n        >\n          <MoveDialog\n            currentFile={selectedFolder}\n            onClose={() => {\n              setShowMoveToDialog(false);\n              setSelectedFolder(undefined);\n            }}\n            onMove={async (file, dest) => {\n              if (file.id === dest.id) {\n                throw Error(\"Cannot move to this place\");\n              }\n              await nas.moveFolderTo(file.id, dest.id);\n              update();\n            }}\n          />\n        </Dialog>\n      )}\n    </div>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  isDir: boolean;\n}\n\nexport interface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n  uploadedDataSize: number;\n  totalDataSize: number;\n}\n\nexport default function UploadDialog(props: Props) {\n  const {\n    nas,\n    update,\n    uploadInfo,\n    setUploadInfo,\n    uploadFiles,\n    updateUploadInfo,\n    setUploadedFiles,\n    uploadedFiles\n  } = useContext(HomePageContext);\n\n  const onInputChange = e => {\n    let uploadFiles = e.target.files;\n    if (uploadFiles) {\n      let l: File[] = [];\n      for (var i = 0; i < uploadFiles.length; i++) {\n        l.push(uploadFiles[i]);\n      }\n\n      setUploadInfo(l);\n    }\n  };\n\n  return (\n    <Modal open={props.open}>\n      <Modal.Header>Select {props.isDir ? \"Folder\" : \"Files\"} </Modal.Header>\n      <Modal.Content>\n        <Grid.Row>\n          {props.isDir ? (\n            <input\n              type=\"file\"\n              multiple\n              webkitdirectory=\"\"\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          ) : (\n            <input\n              type=\"file\"\n              multiple\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          )}\n        </Grid.Row>\n        {uploadInfo && (\n          <Grid.Row style={{ marginTop: 20 }}>\n            <Segment>\n              <Progress\n                percent={uploadInfo.progress}\n                attached=\"top\"\n                color=\"green\"\n                active\n              />\n              {uploadInfo.currentName} {uploadInfo.currentIndex}/\n              {uploadInfo.total} --- {uploadInfo.progress} %\n              <Progress\n                percent={(uploadInfo.currentIndex / uploadInfo.total) * 100}\n                attached=\"bottom\"\n                color=\"blue\"\n                active\n              />\n            </Segment>\n          </Grid.Row>\n        )}\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> {uploadInfo ? \"Minimize\" : \"Close\"}\n        </Button>\n        <Button\n          disabled={uploadFiles === undefined}\n          color=\"green\"\n          loading={uploadInfo !== undefined}\n          inverted\n          onClick={async () => {\n            if (uploadFiles) {\n              await nas.uploadFile(\n                uploadFiles,\n                props.isDir,\n                (\n                  index: number,\n                  progress: number,\n                  current: number,\n                  total: number\n                ) => {\n                  updateUploadInfo({\n                    total: uploadFiles.length,\n                    currentIndex: index,\n                    currentName: uploadFiles[index]\n                      ? uploadFiles[index].name\n                      : \"Finished\",\n                    progress: progress,\n                    uploadedDataSize: current,\n                    totalDataSize: total\n                  });\n                },\n                async file => {\n                  uploadedFiles.push(file);\n                  // setUploadedFiles(uploadedFiles);\n                }\n              );\n              update();\n              setTimeout(() => {\n                props.setOpen(false);\n                setUploadInfo(undefined);\n                updateUploadInfo(undefined);\n              }, 300);\n            }\n          }}\n        >\n          <Icon name=\"checkmark\" /> Upload\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import { FieldIcon } from \"./Icon\";\nimport { FieldAction } from \"./Action\";\nimport { string } from \"prop-types\";\n\n\ninterface Extra {\n    default?: any;\n    help?: string;\n    related_model?: string;\n    choices?: Choice[]\n\n}\n\nexport enum Widget {\n    text = \"text\",\n    number = \"number\",\n    datetime = \"datetime\",\n    foreignkey = \"foreignkey\",\n    unknown = \"unknown\",\n    select = \"select\",\n    tomanyTable = \"tomany-table\"\n}\n\ninterface Validation {\n    length: Length\n\n}\n\nexport interface Choice {\n    label: string;\n    value: any;\n}\n\ninterface Length {\n    maximum?: number;\n    minimum?: number;\n}\n\nexport interface Schema {\n    label: string;\n    readonly: boolean;\n    /// Could be null\n    extra?: Extra;\n    /// Map's key\n    name: string;\n    /// If widget type is not defined in the enum, then\n    /// return widgetType.unknown\n    widget: Widget | string;\n    required: boolean;\n    /// could be null\n    validations?: Validation;\n    /// this is value will be displayed at screen if set,\n    /// else null\n    value?: any;\n    /// Set this value only if the field includes selection\n    choice?: Choice;\n    /// icon for the field\n    /// this will be set through the params of JSONForm widget\n    icon?: FieldIcon;\n    /// action for the field\n    /// this will be set through the params of JSONForm widget\n    action?: FieldAction;\n\n}\n\n\n\nexport class SchemaList {\n\n    schemaList: Schema[];\n\n    constructor(schemas: Schema[]) {\n        schemas.forEach(s => {\n            if (s.extra && s.extra.default) {\n                s.value = s.extra.default\n            }\n        })\n        this.schemaList = schemas;\n    }\n\n    merge(values: { [key: string]: any }) {\n        this.schemaList = this.schemaList.map((s) => {\n            if (values[s.name]) {\n                let value = values[s.name];\n                if (s.widget == Widget.select) {\n                    let choice: Choice | undefined = s.extra\n                        && s.extra.choices\n                        && s.extra.choices.find((c) => c.value === value)\n                    s.choice = choice;\n                } else if (s.widget == Widget.foreignkey) {\n                    let choice: Choice = value;\n                    s.choice = choice;\n                    s.value = value.value;\n                } else {\n                    s.value = value;\n                }\n            }\n            return s;\n        });\n    }\n\n    onSubmit(): { [key: string]: any } {\n        console.log(this.schemaList)\n        let maps: { [key: string]: any } = {};\n        this.schemaList.filter(s => !s.readonly && s.widget !== Widget.tomanyTable).forEach((s) => maps[s.name] = s.value);\n        console.log(maps)\n        return maps;\n\n    }\n\n}\n","import React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport { SchemaList, Schema, Widget } from \"../../JSONSchema/model/Schema\";\nimport { DialogContent } from \"@material-ui/core\";\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogTitle\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n}\n\ninterface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n}\n\nconst schema: Schema[] = [\n  {\n    name: \"name\",\n    label: \"Folder Name\",\n    readonly: false,\n    required: true,\n    widget: Widget.text\n  }\n];\n\nexport default function NewFolderDialog(props: Props) {\n  const { nas, update } = useContext(HomePageContext);\n  const [folderName, setFolderName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>New Folder</DialogTitle>\n      <DialogContent>\n        <TextField\n          onChange={e => {\n            setFolderName(e.target.value);\n          }}\n          value={folderName}\n          color=\"secondary\"\n          fullWidth\n          label=\"Folder Name\"\n          required\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> No\n        </Button>\n        <Button\n          basic\n          color=\"green\"\n          onClick={async () => {\n            setIsLoading(true);\n            await nas.createNewFolder(folderName);\n            update();\n            setIsLoading(false);\n            props.setOpen(false);\n          }}\n          loading={isLoading}\n        >\n          <Icon name=\"add\" /> Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function CreateDocumentDialog(props: Props) {\n  const [name, setName] = useState<string | undefined>();\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  return (\n    <Dialog open={props.open} onClose={() => props.setOpen(false)} fullWidth>\n      <DialogTitle>Document</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.setOpen(false);\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (name) {\n                await nas.createNewDocument(name, undefined);\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  Grid,\n  Breadcrumb,\n  Segment,\n  Card,\n  MenuItem as MMenuItem\n} from \"semantic-ui-react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport UploadDialog from \"../files/UploadDialog\";\nimport NewFolderDialog from \"../folders/NewFolderDialog\";\nimport Editor from \"../documents/Editor\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nimport { Menu } from \"semantic-ui-react\";\nimport CreateDocumentDialog from \"../documents/CreateDocumentDialog\";\n\nexport default function NasMenus() {\n  const { nas } = useContext(HomePageContext);\n\n  const [openFilesUpload, setOpenFilesUpload] = useState(false);\n  const [openFolderUpload, setOpenFolderUpload] = useState(false);\n  const [openNewFolder, setOpenNewFolder] = useState(false);\n  const [openEditor, setOpenEditor] = useState(false);\n\n  return (\n    <div>\n      <ContextMenu id=\"folder\">\n        <Menu id=\"folder\" vertical>\n          <MenuItem\n            onClick={() => {\n              setOpenNewFolder(true);\n            }}\n          >\n            <MMenuItem>New Folder</MMenuItem>\n          </MenuItem>\n        </Menu>\n      </ContextMenu>\n      <ContextMenu id=\"files\">\n        <Menu vertical>\n          <MMenuItem onClick={() => setOpenEditor(true)}>\n            New Document\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFilesUpload(true);\n            }}\n          >\n            Upload Files\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFolderUpload(true);\n            }}\n          >\n            Upload Folder\n          </MMenuItem>\n        </Menu>\n      </ContextMenu>\n      <UploadDialog\n        isDir={false}\n        open={openFilesUpload}\n        setOpen={setOpenFilesUpload}\n      />\n      <UploadDialog\n        isDir={true}\n        open={openFolderUpload}\n        setOpen={setOpenFolderUpload}\n      />\n      <NewFolderDialog\n        open={openNewFolder}\n        setOpen={setOpenNewFolder}\n      ></NewFolderDialog>\n      <CreateDocumentDialog open={openEditor} setOpen={setOpenEditor} />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { SystemInfo } from \"./Folder\";\nimport Axios from \"axios\";\nimport { systemURL } from \"./urls\";\n\ninterface SystemContext {\n  systemInfo?: SystemInfo;\n}\n\ninterface SystemProps {}\n\nexport class SystemProvider extends Component<SystemProps, SystemContext> {\n  constructor(props: SystemProps) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    let info = await this.fetchSystemInfo();\n    if (info) {\n      this.setState({ systemInfo: info });\n    }\n    // setInterval(async () => {\n    //   let info = await this.fetchSystemInfo();\n    //   console.log(\"Update system info\");\n    //   if (info) {\n    //     this.setState({ systemInfo: info });\n    //   }\n    // }, 20000);\n  }\n\n  fetchSystemInfo = async (): Promise<SystemInfo> => {\n    let info = await Axios.get<SystemInfo>(systemURL);\n    return Promise.resolve(info.data);\n  };\n\n  render() {\n    return (\n      <SystemContext.Provider value={this.state}>\n        {this.props.children}\n      </SystemContext.Provider>\n    );\n  }\n}\n\nconst context: SystemContext = {};\n\nexport const SystemContext = React.createContext(context);\n","export function formatBytes(bytes: number, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}","import React, { useContext } from \"react\";\nimport { Progress, Message } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\nimport { formatBytes } from \"../files/utils\";\n\nexport default function ComputerStatus() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return (\n      <Message>\n        <p>No Info Avaliable currently</p>\n      </Message>\n    );\n  }\n  return (\n    <div>\n      <span>\n        Used Sapce: {formatBytes(systemInfo.disk.used)}/\n        {formatBytes(systemInfo.disk.total)}\n      </span>\n      <Progress\n        percent={((systemInfo.disk.used / systemInfo.disk.total) * 100).toFixed(\n          2\n        )}\n        size=\"tiny\"\n        color=\"green\"\n      />\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button } from \"semantic-ui-react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ReactQuill, { Quill } from \"react-quill\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function Editor(props: Props) {\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n  const [name, setName] = useState<string | undefined>();\n  const [isChanged, setIsChanged] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  if (name === undefined) {\n    setName(document ? document.name : \"\");\n  }\n\n  return (\n    <Modal open={props.open} centered={false}>\n      <Modal.Header>\n        <TextField\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </Modal.Header>\n      <Modal.Content>\n        <ReactQuill\n          ref={instance => setEditor(instance != null ? instance : undefined)}\n          defaultValue={document && document.content}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            if (isChanged) {\n              let confirm = window.confirm(\n                \"Are you sure you want to exit? You will lose unsave data.\"\n              );\n              if (confirm) {\n                props.setOpen(false);\n              }\n            } else {\n              props.setOpen(false);\n            }\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (editor && name) {\n                let data = editor.getEditor().getContents();\n                if (document) {\n                  // update current document\n                  await nas.updateDocument(document.id, name, data);\n                } else {\n                  if (name !== \"\") {\n                    await nas.createNewDocument(name, data);\n                  } else {\n                    throw \"Name should not be empty\";\n                  }\n                }\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Save\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Grid, Header, Icon } from \"semantic-ui-react\";\nimport {\n  IconButton,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  CardActionArea\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Folder, Document as NasDocument } from \"../../../../models/Folder\";\nimport RenameDialog from \"./RenameDialog\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function FilesActions() {\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [shadow, setShadow] = useState<number>();\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState<NasDocument>();\n\n  return (\n    <div style={{ width: \"100%\", margin: \"20px\" }}>\n      <Grid>\n        <Grid.Row>\n          {/*Render documents*/}\n          {nas.currentFolder &&\n            nas.currentFolder.documents.map((f, i) => (\n              <Grid.Column\n                computer={4}\n                mobile={8}\n                style={{ padding: 10 }}\n                key={`document-${i}`}\n              >\n                <Card variant=\"outlined\" raised={shadow === i ? true : false}>\n                  <NavLink to={`/document/${f.id}`}>\n                    <CardActionArea style={{ height: 80 }}>\n                      <CardContent>\n                        <h3>{f.name}</h3>\n                      </CardContent>\n                    </CardActionArea>\n                  </NavLink>\n                  <CardActions>\n                    <IconButton\n                      onClick={async () => {\n                        await nas.deleteDocument(f.id);\n                        update();\n                      }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                    <IconButton\n                      onClick={async () => {\n                        setSelectedDocument(f);\n                        setShowRenameDialog(true);\n                      }}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                  </CardActions>\n                </Card>\n              </Grid.Column>\n            ))}\n          {/*End Render documents*/}\n        </Grid.Row>\n      </Grid>\n      {selectedDocument && (\n        <RenameDialog\n          type=\"document\"\n          open={showRenameDialog}\n          selectedFile={selectedDocument}\n          onClose={() => {\n            setShowRenameDialog(false);\n            setSelectedDocument(undefined);\n            update();\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\ninterface Props {\n  file: string;\n}\n\nexport default function PDFViewer(props: Props) {\n  const [pageNumber, setpageNumber] = useState(1);\n  const [current, setcurrent] = useState(1);\n\n  return (\n    <Document\n      file={props.file}\n      onLoadSuccess={pdf => {\n        setpageNumber(pdf.numPages);\n      }}\n    >\n      {Array.from(new Array(pageNumber), (el, index) => (\n        <Page key={`page-${index}`} pageNumber={index + 1} />\n      ))}\n    </Document>\n  );\n}\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  makeStyles,\n  CardContent,\n  Typography,\n  CardMedia\n} from \"@material-ui/core\";\nimport * as path from \"path\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport jsmediatags from \"jsmediatags\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport { TagType } from \"jsmediatags/types\";\nimport * as mm from \"music-metadata-browser\";\nimport { Grid } from \"semantic-ui-react\";\n\ninterface Props {\n  musicSrc: string;\n  onClose(): void;\n}\n\ninterface State {\n  tag?: mm.IAudioMetadata;\n}\n\nconst readMusicTag = async (musicSrc: string): Promise<mm.IAudioMetadata> => {\n  const metadata = await mm.fetchFromUrl(musicSrc);\n  return metadata;\n};\n\nexport default class Musicplayer extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentWillMount() {\n    const { musicSrc } = this.props;\n    let data = await readMusicTag(musicSrc);\n    this.setState({ tag: data });\n  }\n\n  async componentDidUpdate(oldProps: Props) {\n    const { musicSrc } = this.props;\n    if (oldProps.musicSrc !== musicSrc) {\n      let data = await readMusicTag(musicSrc);\n      this.setState({ tag: data });\n    }\n  }\n\n  render() {\n    const { musicSrc, onClose } = this.props;\n    const { tag } = this.state;\n    const pictures = tag?.common.picture;\n    let picture: string | undefined = undefined;\n    if (pictures && pictures.length > 0) {\n      picture = pictures[0].data.toString(\"base64\");\n      picture = \"data:image/jpeg;base64,\" + picture;\n    }\n    return (\n      <Dialog\n        fullWidth\n        open={musicSrc !== undefined}\n        onClose={onClose}\n        style={{ overflowX: \"hidden\" }}\n      >\n        <CardMedia\n          style={{ height: 500, width: \"100%\" }}\n          image={picture}\n          title={decodeURIComponent(\n            tag?.common.title ?? path.basename(musicSrc)\n          )}\n        />\n        <DialogContent>\n          <Typography component=\"h5\" variant=\"h5\">\n            {decodeURIComponent(tag?.common.title ?? path.basename(musicSrc))}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {tag?.common.artist}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {tag?.common.album}\n          </Typography>\n        </DialogContent>\n        <div>\n          <AudioPlayer volume={0.5} src={musicSrc} />\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Icon,\n  Modal,\n  Image,\n  SemanticICONS,\n  Dropdown,\n  CardContent\n} from \"semantic-ui-react\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  TableContainer,\n  TableHead,\n  Table,\n  TableCell,\n  TableRow,\n  Menu,\n  MenuItem,\n  TableBody,\n  IconButton,\n  Popper,\n  Paper,\n  CardMedia,\n  Card,\n  CardActionArea,\n  Checkbox,\n  Toolbar,\n  Tooltip,\n  DialogTitle,\n  DialogContent\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport \"video-react/dist/video-react.css\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../../models/Folder\";\nimport Editor from \"../documents/Editor\";\nimport { downloadURL, fileURL } from \"../../../../models/urls\";\nimport { Grid } from \"semantic-ui-react\";\nimport FilesActions from \"./FilesActions\";\nimport RenameDialog from \"./RenameDialog\";\nimport { formatBytes } from \"./utils\";\nimport PDFViewer from \"./pdf/PDFViewer\";\nimport { Dialog } from \"@material-ui/core\";\nimport MoveDialog from \"../../../document/components/MoveDialog\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport Musicplayer from \"./music/Musicplayer\";\n\nconst { Player } = require(\"video-react\");\n\nconst imageExt = [\".jpg\", \".png\", \".bmp\", \".JPG\", \".gif\", \".jpeg\", \".JPEG\"];\nconst videoExt = [\".mov\", \".mp4\", \".avi\", \".m4v\", \".MOV\", \".MP4\"];\nconst pdfExt = [\".pdf\"];\nconst audioExt = [\".mp3\", \".m4a\"];\n\nexport default function ListFilesPanel() {\n  const {\n    nas,\n    isLoading,\n    update,\n    selectedDocument,\n    selectDocument\n  } = useContext(HomePageContext);\n  const [previewAnchor, setPreviewAnchor] = React.useState<null | HTMLElement>(\n    null\n  );\n  const [selectedFiles, setSelectedFiles] = useState<NasFile[]>([]);\n  const [onHoverFile, setOnHoverFile] = useState<NasFile>();\n  const [selectedFile, setselectedFile] = useState<NasFile>();\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [showMoveToDialog, setShowMoveToDialog] = useState(false);\n  const [showMultiMoveDialog, setShowMultiMoveDialog] = useState(false);\n  const [imageSrc, setImageSrc] = useState<string | undefined>(undefined);\n  const [audioSrc, setaudioSrc] = useState<string | undefined>(undefined);\n  const [videoSrc, setVideoSrc] = useState<\n    { src: string; cover: string } | undefined\n  >(undefined);\n\n  const [pdfSrc, setpdfSrc] = useState<string | undefined>(undefined);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClosePreview = () => {\n    setPreviewAnchor(null);\n  };\n\n  function isImage(filepath: string): boolean {\n    return imageExt.includes(path.extname(filepath));\n  }\n\n  function isVideo(filepath: string): boolean {\n    return videoExt.includes(path.extname(filepath));\n  }\n\n  function isPdf(filepath: string): boolean {\n    return pdfExt.includes(path.extname(filepath));\n  }\n\n  function isAudio(filepath: string): boolean {\n    return audioExt.includes(path.extname(filepath));\n  }\n\n  function getIcon(filepath: string): SemanticICONS {\n    if (isImage(filepath)) {\n      return \"images\";\n    } else if (isVideo(filepath)) {\n      return \"file video\";\n    }\n\n    return \"file\";\n  }\n\n  return (\n    <div id=\"file-list\">\n      <Grid>\n        <FilesActions />\n        <Toolbar>\n          <div>\n            {selectedFiles.length === 0 ? (\n              <h2>Files</h2>\n            ) : (\n              <h2>Selected {selectedFiles.length} files</h2>\n            )}\n          </div>\n          {selectedFiles.length === 0 ? (\n            <div> </div>\n          ) : (\n            <div>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={async () => {\n                    let confirm = window.confirm(\n                      \"Do you want to delete these files?\"\n                    );\n                    if (confirm) {\n                      for (let file of selectedFiles) {\n                        await nas.deleteFile(file.id, false);\n                        update();\n                      }\n                      setSelectedFiles([]);\n                    }\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Move To\">\n                <IconButton\n                  aria-label=\"Move To\"\n                  onClick={async () => {\n                    setShowMultiMoveDialog(true);\n                  }}\n                >\n                  <FileCopyIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n          )}\n        </Toolbar>\n        <Grid.Row style={{ overflow: \"auto\", overflowX: \"hidden\" }}>\n          {/** Render files */}\n          {nas.currentFolder && nas.currentFolder.files.length > 0 && (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox\n                        onChange={e => {\n                          if (e.target.checked) {\n                            if (nas.currentFolder)\n                              setSelectedFiles(nas.currentFolder.files);\n                          } else {\n                            setSelectedFiles([]);\n                          }\n                          update();\n                        }}\n                        checked={\n                          selectedFiles.length ===\n                          nas.currentFolder.files.length\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Last Modify</TableCell>\n                    <TableCell>Size</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {nas.currentFolder.files.map((f, i) => (\n                    <TableRow hover selected={selectedFiles.includes(f)}>\n                      <TableCell>\n                        <Checkbox\n                          checked={selectedFiles.includes(f)}\n                          onChange={e => {\n                            if (e.target.checked) {\n                              selectedFiles.push(f);\n                            } else {\n                              let index = selectedFiles.indexOf(f);\n                              selectedFiles.splice(index, 1);\n                            }\n                            update();\n                            setSelectedFiles(selectedFiles);\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        style={{ cursor: \"grab\" }}\n                        onMouseOver={e => {\n                          setPreviewAnchor(e.currentTarget);\n                          setOnHoverFile(f);\n                        }}\n                        onMouseLeave={() => {\n                          handleClosePreview();\n                          setOnHoverFile(undefined);\n                        }}\n                        onClick={() => {\n                          if (isImage(f.file)) {\n                            setImageSrc(f.file);\n                          } else if (isVideo(f.file)) {\n                            setVideoSrc({\n                              src: f.transcode_filepath ?? f.file,\n                              cover: f.cover\n                            });\n                          } else if (isAudio(f.file)) {\n                            setaudioSrc(f.file);\n                          } else if (isPdf(f.file)) {\n                            setpdfSrc(f.file);\n                          }\n                        }}\n                      >\n                        <Icon\n                          name={getIcon(f.file)}\n                          size=\"large\"\n                          color=\"teal\"\n                        />\n                        {path.basename(f.filename)}\n                      </TableCell>\n                      <TableCell>\n                        {moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                      </TableCell>\n                      <TableCell>{formatBytes(f.size)}</TableCell>\n                      <TableCell>\n                        <IconButton\n                          onClick={e => {\n                            setselectedFile(f);\n                            handleClick(e);\n                          }}\n                        >\n                          <MoreHorizIcon></MoreHorizIcon>\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n          {/** End Render files */}\n        </Grid.Row>\n        {/** File Action Menu */}\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem\n            onClick={() => {\n              /// Download from link\n              if (selectedFile) {\n                const link = document.createElement(\"a\");\n                link.href = `${selectedFile.file}`;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n              }\n              handleClose();\n            }}\n          >\n            Download\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                handleClose();\n                setShowRenameDialog(true);\n              }\n            }}\n          >\n            Rename\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                await nas.deleteFile(selectedFile.id);\n                handleClose();\n                update();\n              }\n            }}\n          >\n            Delete\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                handleClose();\n                setShowMoveToDialog(true);\n              }\n            }}\n          >\n            Move To\n          </MenuItem>\n        </Menu>\n        {audioSrc && (\n          <Musicplayer\n            musicSrc={audioSrc}\n            onClose={() => setaudioSrc(undefined)}\n          />\n        )}\n        {/** end file action menu */}\n        {selectedDocument && (\n          <Editor\n            open={selectedDocument !== undefined}\n            setOpen={v => {\n              !v && selectDocument(undefined);\n            }}\n            document={selectedDocument}\n          ></Editor>\n        )}\n        {/** Preview image */}\n        <Modal\n          open={imageSrc !== undefined}\n          onClose={() => setImageSrc(undefined)}\n        >\n          <Image src={imageSrc} fluid></Image>\n        </Modal>\n        {/** End preview image */}\n        {/** Preview image */}\n\n        {/** End preview image */}\n        {/** Preview video */}\n        <Modal\n          open={videoSrc !== undefined}\n          onClose={() => setVideoSrc(undefined)}\n        >\n          <Player poster={videoSrc && videoSrc.cover}>\n            <source src={videoSrc && videoSrc.src} />\n          </Player>\n        </Modal>\n        {/** End preview video */}\n        {/** Preview pdf */}\n        <Modal open={pdfSrc !== undefined} onClose={() => setpdfSrc(undefined)}>\n          {pdfSrc && <PDFViewer file={pdfSrc} />}\n        </Modal>\n        {/** End preview pdf */}\n        {selectedFile && (\n          <Dialog\n            open={showMoveToDialog}\n            onClose={() => {\n              setselectedFile(undefined);\n              setShowMoveToDialog(false);\n            }}\n          >\n            <MoveDialog\n              currentFile={selectedFile}\n              onClose={() => {\n                setselectedFile(undefined);\n                setShowMoveToDialog(false);\n              }}\n              onMove={async (file, dest) => {\n                await nas.moveFileTo(file.id, dest.id);\n                update();\n              }}\n            />\n          </Dialog>\n        )}\n        {selectedFiles.length > 0 && (\n          <Dialog\n            open={showMultiMoveDialog}\n            onClose={() => {\n              setShowMultiMoveDialog(false);\n            }}\n          >\n            <MoveDialog\n              currentFile={selectedFiles[0]}\n              onClose={() => {\n                setSelectedFiles([]);\n                setShowMultiMoveDialog(false);\n              }}\n              onMove={async (file, dest) => {\n                for (let f of selectedFiles) {\n                  await nas.moveFileTo(f.id, dest.id);\n                  update();\n                }\n              }}\n            />\n          </Dialog>\n        )}\n        {selectedFile && (\n          <RenameDialog\n            type=\"file\"\n            open={showRenameDialog}\n            selectedFile={selectedFile}\n            onClose={() => {\n              setShowRenameDialog(false);\n              setselectedFile(undefined);\n            }}\n          />\n        )}\n      </Grid>\n      {/** Preview */}\n      <Popper open={Boolean(previewAnchor)} anchorEl={previewAnchor}>\n        {onHoverFile && (\n          <Card style={{ padding: 10 }}>\n            {isImage(onHoverFile.filename) && (\n              <CardMedia\n                style={{ height: 140, width: 140 }}\n                image={onHoverFile.file}\n              />\n            )}\n            {isVideo(onHoverFile.filename) ? (\n              onHoverFile.cover ? (\n                <CardActionArea>\n                  <CardMedia\n                    style={{ height: 140, width: 140 }}\n                    image={onHoverFile.cover}\n                  />\n                  <CardContent> {formatBytes(onHoverFile.size)}</CardContent>\n                </CardActionArea>\n              ) : (\n                <div>\n                  {onHoverFile.filename} - {formatBytes(onHoverFile.size)}\n                </div>\n              )\n            ) : (\n              <div>\n                {onHoverFile.filename} - {formatBytes(onHoverFile.size)}\n              </div>\n            )}\n          </Card>\n        )}\n      </Popper>\n      {/** end preview */}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport List from \"@material-ui/core/List\";\nimport { Icon, Grid, Item } from \"semantic-ui-react\";\nimport {\n  ListItem,\n  ListItemText,\n  LinearProgress,\n  Box,\n  Typography\n} from \"@material-ui/core\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\n\nexport default function UploadFilesSideBar() {\n  const { uploadFiles, uploadInfo, uploadedFiles } = useContext(\n    HomePageContext\n  );\n  const { systemInfo } = useContext(SystemContext);\n\n  return (\n    <List style={{ overflowY: \"auto\", height: \"100%\", overflowX: \"hidden\" }}>\n      {systemInfo && (\n        <Grid>\n          <Grid.Row style={{ height: 40 }}>\n            <Grid.Column width={8}>\n              <div>CPU</div>\n              <LinearProgress\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={systemInfo.cpu}\n              />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <div>Memory</div>\n              <LinearProgress\n                title=\"Memory\"\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={(systemInfo.memory.used / systemInfo.memory.total) * 100}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )}\n\n      {uploadFiles ? (\n        uploadFiles\n          .filter(f => !uploadedFiles.includes(f))\n          .map((f, i) => (\n            <ListItem>\n              <ListItemIcon>\n                <Icon name=\"file\" />\n              </ListItemIcon>\n              <ListItemText\n                primary={f.name}\n                secondary={\n                  <LinearProgress\n                    color=\"secondary\"\n                    variant={\n                      uploadInfo && uploadInfo.currentIndex === i\n                        ? \"determinate\"\n                        : \"indeterminate\"\n                    }\n                    value={\n                      uploadInfo && uploadInfo.currentIndex === i\n                        ? uploadInfo.progress\n                        : undefined\n                    }\n                  />\n                }\n              />\n            </ListItem>\n          ))\n      ) : (\n        <Grid centered verticalAlign=\"middle\">\n          <div style={{ marginTop: \"10px\", marginBottom: \"auto\" }}>\n            No Pending Uploads\n          </div>\n        </Grid>\n      )}\n    </List>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  fade,\n  InputBase,\n  MenuList,\n  Popper,\n  Paper,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../../models/Folder\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popper: {\n      marginTop: 10,\n      marginRight: 15,\n      width: \"40ch\",\n      maxHeight: 400,\n      overflow: \"auto\"\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport default function SearchField() {\n  const classes = useStyles();\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [value, setValue] = useState(\"\");\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        {isLoading ? (\n          <CircularProgress size={20} color=\"inherit\" />\n        ) : (\n          <SearchIcon />\n        )}\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput\n        }}\n        inputProps={{ \"aria-label\": \"search\" }}\n        onClick={e => setAnchorEl(e.currentTarget)}\n        onChange={async e => {\n          let keyword = e.target.value;\n          setValue(keyword);\n        }}\n        onKeyDown={async e => {\n          if (e.key === \"Enter\") {\n            setIsLoading(true);\n            await nas.search(value);\n            update();\n            setIsLoading(false);\n          }\n        }}\n      />\n\n      <Popper open={Boolean(anchorEl)} anchorEl={anchorEl}>\n        <ClickAwayListener onClickAway={handleClose}>\n          <Paper className={classes.popper}>\n            {nas.searchedFiles.length === 0 && (\n              <MenuItem>No File. Press Enter to search</MenuItem>\n            )}\n            {nas.searchedFiles.map(f => (\n              <MenuItem\n                key={f.id}\n                onClick={() => {\n                  window.location.href = `#/home/${f.parent}`;\n                  handleClose();\n                }}\n              >\n                {path.basename(f.filename)}\n              </MenuItem>\n            ))}\n          </Paper>\n        </ClickAwayListener>\n      </Popper>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport Header from \"./components/others/Header\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport ListPanel from \"./components/folders/ListFolderPanel\";\nimport { Container, Segment, Progress, Grid, Menu } from \"semantic-ui-react\";\nimport NasMenus from \"./components/others/NasMenu\";\nimport ComputerStatus from \"./components/others/ComputerStatus\";\nimport ListFilesPanel from \"./components/files/ListFilesPanel\";\nimport { HomePageContext } from \"../../models/HomeContext\";\nimport { ContextMenu, ContextMenuTrigger } from \"react-contextmenu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport UploadFilesSideBar from \"./components/files/UploadFilesSideBar\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {\n  Hidden,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n  Typography,\n  InputBase,\n  createMuiTheme,\n  ThemeProvider\n} from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport SearchField from \"./components/files/SearchField\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fafafa\"\n    }\n  }\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport function HomePage() {\n  const { nas, isLoading, update } = useContext(HomePageContext);\n  const [show, setShow] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div\n        id=\"home\"\n        style={{\n          height: \"100%\",\n          overflow: \"hidden\"\n        }}\n      >\n        {/** App Bar */}\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Hidden mdUp>\n              <IconButton\n                className={classes.menuButton}\n                color=\"inherit\"\n                onClick={() => {\n                  setShow(true);\n                }}\n              >\n                <MenuIcon />\n              </IconButton>\n            </Hidden>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Django Nas\n            </Typography>\n            <SearchField />\n          </Toolbar>\n        </AppBar>\n        {/** End App Bar */}\n        {/** drawer */}\n        <Drawer open={show} onClose={() => setShow(false)}>\n          <div style={{ width: 300, height: \"100%\" }}>\n            <ListPanel />\n          </div>\n        </Drawer>\n        {/** end drawer */}\n        <Segment\n          loading={isLoading}\n          style={{\n            height: \"100%\",\n            margin: 0\n          }}\n        >\n          <Grid\n            style={{\n              height: \"100%\",\n              overflow: \"hidden\",\n              position: \"relative\"\n            }}\n          >\n            <Grid.Row\n              style={{ height: \"100%\", paddingTop: 0, paddingBottom: 0 }}\n            >\n              {/** left side */}\n              <Hidden smDown implementation=\"js\">\n                <Grid.Column\n                  computer={3}\n                  style={{ height: \"100%\", backgroundColor: \"#fcfcfc\" }}\n                >\n                  <ContextMenuTrigger id=\"folder\">\n                    <Grid.Row style={{ height: \"92%\" }}>\n                      <ListPanel />\n                    </Grid.Row>\n                    <Grid.Row>\n                      <ComputerStatus />\n                    </Grid.Row>\n                  </ContextMenuTrigger>\n                </Grid.Column>\n              </Hidden>\n              {/** end left */}\n              <Grid.Column\n                computer={10}\n                mobile={16}\n                tablet={16}\n                style={{ height: \"100%\" }}\n              >\n                <ContextMenuTrigger id=\"files\">\n                  <ListFilesPanel />\n                </ContextMenuTrigger>\n              </Grid.Column>\n              {/** right side */}\n              <Hidden smDown implementation=\"js\">\n                <Grid.Column\n                  computer={3}\n                  style={{\n                    height: \"100%\",\n                    backgroundColor: \"#fcfcfc\"\n                  }}\n                >\n                  <UploadFilesSideBar />\n                </Grid.Column>\n              </Hidden>\n              {/** end right side */}\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        <NasMenus />\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  Cell\n} from \"recharts\";\nimport { Segment } from \"semantic-ui-react\";\n\ninterface Props {\n  title: string;\n  used: number;\n  total: number;\n  color: string;\n  color2: string;\n}\nconst data02 = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\nexport default function PercentageChart(props: Props) {\n  const { title, used, total, color, color2 } = props;\n  let data = [\n    {\n      name: \"Used\",\n      value: used\n    },\n    { name: \"Available\", value: total - used }\n  ];\n\n  return (\n    <Segment>\n      <ResponsiveContainer\n        minHeight={300}\n        height=\"100%\"\n        width=\"100%\"\n        minWidth={200}\n      >\n        <PieChart>\n          <Pie\n            data={data}\n            dataKey=\"value\"\n            label\n            fill={color}\n            isAnimationActive={false}\n          >\n            <Cell fill={color}></Cell>\n            <Cell fill={color2}></Cell>\n          </Pie>\n\n          <Tooltip></Tooltip>\n        </PieChart>\n      </ResponsiveContainer>\n      <span>{title}</span>\n    </Segment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Container, Grid, Segment } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../models/SystemContext\";\nimport PercentageChart from \"./PercentageChart\";\n\nexport default function SystemInfoPage() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return <div>Infomation Not Available</div>;\n  }\n\n  return (\n    <div id=\"home\" style={{ width: \"100%\", color: \"black\" }}>\n      <Container>\n        <h1>System Info</h1>\n        <Grid columns={2}>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.disk.used / 1024 / 1024)}\n              total={Math.round(systemInfo.disk.total / 1024 / 1024)}\n              title=\"Disk(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.memory.used / 1024 / 1024)}\n              total={Math.round(systemInfo.memory.total / 1024 / 1024)}\n              title=\"Memory(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={systemInfo.cpu}\n              total={100}\n              title=\"CPU Usage(Percentage)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Temperature</h4>\n              <h1>\n                {systemInfo.temperature\n                  ? systemInfo.temperature.toFixed(1)\n                  : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Humidity</h4>\n              <h1>\n                {systemInfo.humidity ? systemInfo.humidity.toFixed(1) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Pressure</h4>\n              <h1>\n                {systemInfo.pressure ? systemInfo.pressure.toFixed(2) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\nimport * as path from \"path\";\n//@ts-ignore\nimport { MarkdownToQuill } from \"md-to-quill-delta\";\nconst QuillDeltaToHtmlConverter = require(\"quill-delta-to-html\")\n  .QuillDeltaToHtmlConverter;\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface DocumentContext {\n  nas: Nas;\n  isLoading: boolean;\n  errorMsg?: string;\n  currentDocument?: NasDocument;\n  update(): void;\n  updateDocument(doc: NasDocument): void;\n  saveDocument(): Promise<void>;\n  saveToLocal(savingType: \"html\" | \"pdf\"): Promise<void>;\n  oepnFromLocal(): Promise<void>;\n  newDocument(name: string): Promise<void>;\n}\n\ninterface DocumentProps extends RouteComponentProps<RouterProps> {}\n\nexport class DocumentProvider extends Component<\n  DocumentProps,\n  DocumentContext\n> {\n  constructor(props: DocumentProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      isLoading: false,\n      update: this.update,\n      updateDocument: this.update,\n      saveDocument: this.saveDocument,\n      saveToLocal: this.saveToLocal,\n      oepnFromLocal: this.openFromLocal,\n      newDocument: this.newDocument\n    };\n  }\n\n  async componentDidUpdate(oldProps: DocumentProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      if (id) {\n        await this.fetch(id);\n      }\n    }\n  }\n\n  updateDocument = (doc: NasDocument) => {\n    this.setState({ currentDocument: doc });\n  };\n\n  saveDocument = async () => {\n    try {\n      let doc = this.state.currentDocument;\n      if (doc) {\n        this.setState({ isLoading: true });\n        await this.state.nas.updateDocument(doc.id, doc.name, doc.content);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to save\" });\n    } finally {\n      this.setState({ isLoading: false });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  newDocument = async (name: string) => {};\n\n  readFile = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onload = content => {\n        let text = reader.result;\n\n        resolve(text as string);\n      };\n      reader.readAsText(file);\n    });\n  };\n\n  openFromLocal = async () => {\n    const { currentDocument, nas } = this.state;\n    try {\n      let input =\n        (document.getElementById(\"new file\") as HTMLInputElement) ??\n        document.createElement(\"input\");\n      input.id = \"new file\";\n      input.type = \"file\";\n      input.accept = \".md,.html\";\n      input.multiple = false;\n      input.click();\n      input.addEventListener(\"change\", async e => {\n        this.setState({\n          isLoading: true,\n          errorMsg: \"Reading Local Document...\"\n        });\n        let files = input.files;\n        if (files) {\n          let file = files[0];\n          let ext = path.extname(file.name);\n          if (ext === \".md\") {\n            const converter = new MarkdownToQuill();\n            let content = await this.readFile(file);\n            let delta = converter.convert(content);\n            this.setState({ errorMsg: \"Creating New Document\" });\n            let d = await nas.createNewDocument(\n              file.name,\n              { ops: delta } as any,\n              currentDocument?.parent\n            );\n            this.setState({\n              errorMsg: \"Document Created. Preparing for redirecting\"\n            });\n            setTimeout(() => {\n              this.setState({ isLoading: false, errorMsg: undefined });\n              window.location.href = \"#/document/\" + d.id;\n            }, 1500);\n          }\n        }\n        input.remove();\n      });\n    } catch (err) {\n      this.setState({ errorMsg: \"Unable to open file\", isLoading: false });\n    }\n  };\n\n  saveToLocal = async (savingType: \"html\" | \"pdf\") => {\n    let doc = this.state.currentDocument;\n    if (doc) {\n      switch (savingType) {\n        case \"html\":\n          let converter = new QuillDeltaToHtmlConverter(doc.content);\n          let html = converter.convert();\n          break;\n      }\n    }\n  };\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    if (id) {\n      await this.fetch(id);\n    }\n  }\n\n  fetch = async (id: string) => {\n    try {\n      this.setState({ isLoading: true });\n      let document = await this.state.nas.getDocument(id);\n      setTimeout(() => {\n        this.setState({ currentDocument: document });\n      }, 400);\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to open\" });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 500);\n      this.setState({ currentDocument: undefined });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <DocumentContext.Provider value={this.state}>\n        {this.props.children}\n      </DocumentContext.Provider>\n    );\n  }\n}\n\nconst context: DocumentContext = {\n  nas: new Nas(),\n  update: () => {},\n  updateDocument: (d: NasDocument) => {},\n  saveDocument: () => {\n    return Promise.resolve();\n  },\n  oepnFromLocal: () => {\n    return Promise.resolve();\n  },\n  newDocument: () => {\n    return Promise.resolve();\n  },\n  saveToLocal: () => {\n    return Promise.resolve();\n  },\n  isLoading: false\n};\n\nexport const DocumentContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport AutosizeInput from \"react-input-autosize\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  Popper,\n  ClickAwayListener,\n  Paper,\n  Fade,\n  Slide,\n  Collapse\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/Folder\";\nimport MoveDialog from \"./MoveDialog\";\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"18px\",\n    paddingTop: 5\n  },\n  button: {\n    padding: \"0px 5px\"\n  }\n}));\n\nexport default function Titlebar() {\n  const {\n    currentDocument,\n    updateDocument,\n    saveDocument,\n    isLoading,\n    nas,\n    update\n  } = useContext(DocumentContext);\n\n  const [anchorEl, setAnchorEl] = React.useState<undefined | HTMLElement>();\n  const [numChanges, setNumChanges] = useState(0);\n  const classes = useStyles();\n\n  if (currentDocument === undefined && !isLoading) {\n    return (\n      <div>\n        <AutosizeInput\n          id=\"test-input\"\n          className={classes.notchedOutline}\n          style={{\n            maxWidth: window.innerWidth * 0.8\n          }}\n          value={\"Cannot fetch document\"}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ marginTop: 15, marginLeft: 5 }}>\n      <Collapse in={isLoading && !currentDocument} unmountOnExit mountOnEnter>\n        <div style={{ height: 24, width: 100 }}>\n          <LinearProgress\n            variant=\"indeterminate\"\n            style={{ marginTop: 15, width: 100 }}\n          />\n        </div>\n      </Collapse>\n      <Collapse\n        in={!isLoading && currentDocument !== undefined}\n        mountOnEnter\n        unmountOnExit\n      >\n        <div>\n          <Tooltip title=\"Rename\">\n            <ClickAwayListener\n              onClickAway={async () => {\n                if (numChanges > 0) {\n                  await saveDocument();\n                  setNumChanges(0);\n                }\n              }}\n            >\n              <AutosizeInput\n                id=\"test-input\"\n                className={classes.notchedOutline}\n                style={{\n                  maxWidth: window.innerWidth * 0.8\n                }}\n                value={currentDocument?.name}\n                onChange={e => {\n                  if (currentDocument) {\n                    currentDocument.name = e.target.value;\n                    setNumChanges(numChanges + 1);\n                    updateDocument(currentDocument);\n                  }\n                }}\n              />\n            </ClickAwayListener>\n          </Tooltip>\n          <Tooltip title=\"Move\">\n            <IconButton\n              className={classes.button}\n              onClick={async e => {\n                setAnchorEl(e.currentTarget);\n                if (currentDocument) {\n                  await nas.getContent(currentDocument.parent as number);\n                }\n\n                update();\n              }}\n            >\n              <FolderIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </Collapse>\n\n      {anchorEl && (\n        <ClickAwayListener onClickAway={() => setAnchorEl(undefined)}>\n          <Popper\n            open={Boolean(anchorEl)}\n            anchorEl={anchorEl}\n            style={{ zIndex: 2000 }}\n            placement=\"right-end\"\n          >\n            {currentDocument && (\n              <MoveDialog\n                currentFile={currentDocument}\n                onClose={() => setAnchorEl(undefined)}\n                onMove={async (file: NasDocument, dest) => {\n                  await nas.moveDocument(file.id, dest.id);\n                  currentDocument.parent = dest.id;\n                  updateDocument(currentDocument);\n                }}\n              />\n            )}\n          </Popper>\n        </ClickAwayListener>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport FormatBoldIcon from \"@material-ui/icons/FormatBold\";\nimport FormatItalicIcon from \"@material-ui/icons/FormatItalic\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\nimport {\n  IconButton,\n  makeStyles,\n  Theme,\n  createStyles,\n  withStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    divider: {\n      height: \"10px\",\n      borderLeft: \"6px solid black\"\n    }\n  })\n);\n\nconst StyledToggleButtonGroup = withStyles(theme => ({\n  grouped: {\n    margin: theme.spacing(0.5),\n    border: \"none\",\n    padding: theme.spacing(0, 1),\n    \"&:not(:first-child)\": {\n      borderRadius: theme.shape.borderRadius\n    },\n    \"&:first-child\": {\n      borderRadius: theme.shape.borderRadius\n    }\n  }\n}))(ToggleButtonGroup);\nexport default function ToolsBar() {\n  const classes = useStyles();\n  return (\n    <div id=\"toolbar\">\n      <span className=\"ql-formats\">\n        <select className=\"ql-size\">\n          <option value=\"small\"></option>\n          <option selected></option>\n          <option value=\"large\"></option>\n          <option value=\"huge\"></option>\n        </select>\n        <button type=\"button\" className=\"ql-italic\"></button>\n        <button type=\"button\" className=\"ql-underline\"></button>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-indent\" value=\"-1\"></button>\n          <button type=\"button\" className=\"ql-indent\" value=\"+1\"></button>\n          <select className=\"ql-align\">\n            <option value=\"center\"></option>\n            <option value=\"right\"></option>\n            <option value=\"justify\"></option>\n          </select>\n          <button type=\"button\" className=\"ql-direction\" value=\"rtl\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"ordered\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"bullet\"></button>\n        </span>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-image\"></button>\n          <button type=\"button\" className=\"ql-code-block\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"sub\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"super\"></button>\n          <button type=\"button\" className=\"ql-clean\"></button>\n        </span>\n      </span>\n    </div>\n  );\n}\n","import Parchment from \"parchment\";\nimport { Quill } from \"react-quill\";\n\nconst BlockEmbed = Quill.import('blots/block/embed') as { new(node: any, value: any): Object };\nexport class DividerBlot extends BlockEmbed {\n  static blotName = 'divider';\n  static tagName = 'hr';\n}\n","import React, { useContext, useState } from \"react\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  InputBase,\n  TextField,\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/Folder\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport { DividerBlot } from \"./blots/DividerBlot\";\n\nQuill.register(DividerBlot);\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"20px\"\n  }\n}));\n\nexport default function BodyEditor() {\n  const { currentDocument, updateDocument, saveDocument } = useContext(\n    DocumentContext\n  );\n  const [numChanges, setNumberOfChanges] = useState(0);\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n  const save = async () => {\n    if (currentDocument && editor) {\n      let data = editor.getEditor().getContents();\n      currentDocument.content = data;\n      updateDocument(currentDocument);\n      await saveDocument();\n      setNumberOfChanges(0);\n    }\n  };\n\n  const modules = {\n    toolbar: {\n      container: \"#toolbar\"\n    }\n  };\n  if (currentDocument === undefined) {\n    return (\n      <ReactQuill\n        style={{\n          height: \"100%\",\n          border: 0,\n          paddingBottom: \"85px\"\n        }}\n        modules={modules}\n      />\n    );\n  }\n\n  return (\n    <ClickAwayListener\n      onClickAway={async () => {\n        if (numChanges > 0) {\n          await save();\n        }\n      }}\n    >\n      <ReactQuill\n        ref={instance => setEditor(instance != null ? instance : undefined)}\n        onKeyDown={async () => {\n          setNumberOfChanges(numChanges + 1);\n          if (numChanges > 3) {\n            await save();\n          }\n        }}\n        onChange={async e => {}}\n        style={{ height: \"100%\", border: 0, paddingBottom: \"85px\" }}\n        defaultValue={currentDocument.content}\n        modules={modules}\n      />\n    </ClickAwayListener>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { Button, makeStyles, MenuItem, Menu } from \"@material-ui/core\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    padding: \"4px 6px\",\n    minWidth: \"40px\",\n    fontSize: \"14px\",\n    fontWeight: \"normal\",\n    textTransform: \"capitalize\"\n  },\n  menuItem: {\n    minWidth: 150\n  }\n}));\n\nexport default function MenuBar() {\n  const classes = useStyles();\n  const { isLoading, saveToLocal, oepnFromLocal } = React.useContext(\n    DocumentContext\n  );\n  const [fileEl, setfileEl] = React.useState<null | HTMLElement>(null);\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        size=\"small\"\n        onClick={e => setfileEl(e.currentTarget)}\n      >\n        File\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Edit\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Settings\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Tools\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Help\n      </Button>\n      <span\n        style={{ textDecoration: \"underline\", color: \"grey\", marginLeft: 20 }}\n      >\n        {isLoading ? \"Commnucating with server\" : \"All changes saved in Drive\"}\n      </span>\n      <Menu\n        anchorEl={fileEl}\n        keepMounted\n        open={Boolean(fileEl)}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        onClose={() => {\n          setfileEl(null);\n        }}\n      >\n        <MenuItem\n          onClick={async () => {\n            await oepnFromLocal();\n            setfileEl(null);\n          }}\n        >\n          Open\n        </MenuItem>\n        <NestedMenuItem\n          label=\"Download\"\n          parentMenuOpen={Boolean(fileEl)}\n          className={classes.menuItem}\n        >\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"pdf\");\n              setfileEl(null);\n            }}\n          >\n            PDF Document (.pdf){\" \"}\n          </MenuItem>\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"html\");\n              setfileEl(null);\n            }}\n          >\n            Web Page (.html){\" \"}\n          </MenuItem>\n        </NestedMenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button, Grid, Divider } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Backdrop,\n  CircularProgress,\n  Card,\n  AppBar,\n  Toolbar,\n  createMuiTheme,\n  ThemeProvider,\n  IconButton,\n  makeStyles,\n  Container,\n  Paper,\n  Snackbar,\n  Tooltip\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../models/DocumentContext\";\nimport Titlebar from \"./components/Titlebar\";\nimport ToolsBar from \"./components/ToolsBar\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport BodyEditor from \"./components/BodyEditor\";\nimport \"../../../document.css\";\nimport { NavLink } from \"react-router-dom\";\nimport MenuBar from \"./components/MenuBar\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: \"#ffffff\"\n    },\n    primary: {\n      main: \"#00b2ff\"\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  appbar: {\n    height: \"90px\"\n  },\n  container: {\n    paddingTop: \"95px\",\n    height: \"100%\"\n  },\n  row: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  largeIcon: {\n    width: 40,\n    height: 40\n  }\n}));\n\nexport default function DocumentEditor() {\n  const { currentDocument, isLoading, errorMsg } = useContext(DocumentContext);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <AppBar elevation={0} className={classes.appbar} color=\"secondary\">\n          <Toolbar>\n            <Tooltip title=\"Back\">\n              <NavLink to={`/home/${currentDocument?.parent ?? \"\"}`}>\n                <DescriptionIcon\n                  className={classes.largeIcon}\n                  fontSize=\"large\"\n                  color=\"primary\"\n                />\n              </NavLink>\n            </Tooltip>\n            <Grid style={{ marginLeft: 10 }}>\n              <Grid.Row style={{ padding: 0 }}>\n                <Titlebar />\n              </Grid.Row>\n              <Grid.Row style={{ paddingTop: 0, paddingBottom: 0 }}>\n                <MenuBar />\n              </Grid.Row>\n              <Grid.Row style={{ padding: 0 }}>\n                {currentDocument && <ToolsBar />}\n              </Grid.Row>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Container id=\"container\" className={classes.container}>\n          {currentDocument && (\n            <Paper\n              style={{ height: \"100%\", minHeight: window.innerHeight - 95 }}\n              square\n            >\n              <BodyEditor />\n            </Paper>\n          )}\n        </Container>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={errorMsg !== undefined}\n          message={errorMsg}\n        />\n        <Backdrop\n          open={isLoading && currentDocument === undefined}\n          style={{\n            zIndex: 1,\n            color: \"#fff\"\n          }}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { I18nProvider } from \"@lingui/react\";\n\nReactDOM.render(\n  <I18nProvider catalogs={{}}>\n    <App />\n  </I18nProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  HashRouter as Router,\n  Route,\n  Link,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport { HomePage } from \"./components/pages/home/HomePage\";\nimport { HomePageProvider } from \"./components/models/HomeContext\";\nimport { SystemProvider } from \"./components/models/SystemContext\";\nimport SystemInfoPage from \"./components/pages/systemInfo/SystemInfoPage\";\nimport { Sidebar, Menu, Icon, Button } from \"semantic-ui-react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { IconButton } from \"@material-ui/core\";\nimport { DocumentProvider } from \"./components/models/DocumentContext\";\nimport DocumentEditor from \"./components/pages/document/DocumentEditor\";\nimport { MovingProvider } from \"./components/models/MovingContext\";\n\nexport default function App() {\n  const [visible, setVisible] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <SystemProvider>\n      <Router>\n        <div style={{ height: \"100%\" }}>\n          <Route exact path=\"/\" component={() => <Redirect to=\"/home\" />} />\n          <Route\n            exact\n            path=\"/home/:id?\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return (\n                <MovingProvider>\n                  <HomePageProvider {...props}>\n                    <HomePage></HomePage>\n                  </HomePageProvider>\n                </MovingProvider>\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/document/:id\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return (\n                <MovingProvider>\n                  <DocumentProvider {...props}>\n                    <DocumentEditor />\n                  </DocumentProvider>\n                </MovingProvider>\n              );\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/info\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return <SystemInfoPage />;\n            }}\n          />\n        </div>\n      </Router>\n    </SystemProvider>\n  );\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 217;"],"sourceRoot":""}