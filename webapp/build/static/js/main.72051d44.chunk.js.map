{"version":3,"sources":["components/models/urls.ts","components/models/nas.ts","components/models/HomeContext.tsx","components/pages/home/components/files/RenameDialog.tsx","components/models/MovingContext.tsx","components/pages/document/components/MoveDialog.tsx","components/pages/home/components/folders/ListFolderPanel.tsx","components/pages/home/components/files/UploadDialog.tsx","components/pages/home/JSONSchema/model/Schema.ts","components/pages/home/components/folders/NewFolderDialog.tsx","components/pages/home/components/documents/CreateDocumentDialog.tsx","components/pages/home/components/others/NasMenu.tsx","components/models/SystemContext.tsx","components/pages/home/components/files/utils.ts","components/pages/home/components/others/ComputerStatus.tsx","components/pages/home/components/documents/Editor.tsx","components/pages/home/components/files/FilesActions.tsx","components/pages/home/components/files/pdf/PDFViewer.tsx","components/pages/home/components/files/music/Musicplayer.tsx","components/pages/home/components/files/ListFilesPanel.tsx","components/pages/home/components/files/UploadFilesSideBar.tsx","components/pages/home/components/files/SearchField.tsx","components/pages/home/HomePage.tsx","components/pages/systemInfo/PercentageChart.tsx","components/pages/systemInfo/SystemInfoPage.tsx","components/models/DocumentContext.tsx","components/pages/document/components/Titlebar.tsx","components/pages/document/components/ToolsBar.tsx","components/pages/document/components/blots/DividerBlot.ts","components/pages/document/components/BodyEditor.tsx","components/pages/document/components/MenuBar.tsx","components/models/BookContext.tsx","components/pages/book/components/dialog/MoveBookDialog.tsx","components/pages/book/components/dialog/UpdateCollectionDialog.tsx","components/pages/document/components/book/BookDrawer.tsx","components/pages/document/DocumentEditor.tsx","components/models/MusicContext.tsx","components/pages/music/components/SearchField.tsx","components/pages/music/components/left/CurrentPlayingPage.tsx","components/pages/music/components/mobile/CurrentPlayingMobile.tsx","components/pages/music/components/right/MusicList.tsx","components/pages/music/components/mobile/MusicListMobile.tsx","components/pages/music/components/player/PlayerPage.tsx","components/pages/music/components/album/AlbumPage.tsx","components/pages/music/components/artist/ArtistPage.tsx","components/pages/music/MusicPage.tsx","components/pages/book/components/dialog/BookDetailDialog.tsx","components/pages/book/components/list/BookList.tsx","components/pages/book/BookPage.tsx","serviceWorker.js","index.js","App.tsx","../node_modules/pdfjs-dist/build sync"],"names":["url","documentURL","musicURL","Nas","constructor","menus","currentFolder","searchedFiles","errorMsg","moveFileTo","fileId","dest","a","Axios","patch","getContent","id","fetchMusicList","get","data","console","log","moveDocument","documentId","moveFolderTo","folderId","u","rename","newName","search","keyword","response","parents","undefined","uploadFile","files","isDir","onUpload","onFileUploaded","index","f","size","getUploadFileAndCreateFolder","getSingleUploadFile","formData","post","headers","onUploadProgress","progress","p","Math","round","loaded","total","alert","toString","deleteFile","showAlert","window","confirm","delete","deleteFolder","createNewFolder","name","parent","res","folders","push","renameFolder","findIndex","renameDocument","documents","getDocument","Promise","resolve","content","JSON","parse","createNewDocument","stringify","ops","updateDocument","deleteDocument","reject","this","file","FormData","append","paths","webkitRelativePath","HomePageProvider","Component","props","super","setUploadedFile","setState","uploadedFiles","selectDocument","document","selectedDocument","updateUploadInfo","uploadInfo","setUploadInfo","uploadFiles","fetch","isLoading","nas","state","update","setUploadedFiles","componentDidUpdate","oldProps","match","params","componentWillMount","render","HomePageContext","Provider","value","children","context","info","React","createContext","RenameDialog","useContext","useState","type","ext","path","selectedFile","filename","getDefaultName","setName","Dialog","open","fullWidth","DialogTitle","DialogContent","TextField","color","onChange","e","target","DialogActions","Button","onClick","onClose","MovingProvider","MovingContext","MoveDialog","currentFile","onMove","loading","setLoading","loadingFolder","setLoadingFolder","then","catch","err","Card","style","width","CardContent","IconButton","disabled","setTimeout","Collapse","in","mountOnEnter","unmountOnExit","LinearProgress","backgroundColor","List","padding","maxHeight","overflowY","map","i","ListItem","key","button","ListItemIcon","ListItemText","primary","Divider","CardActions","disableSpacing","Tooltip","title","marginLeft","ListPanel","showMoveToDialog","setShowMoveToDialog","showRenameDialog","setShowRenameDialog","selectedFolder","setSelectedFolder","anchorEl","setAnchorEl","handleClose","overflow","overflowX","height","Grid","centered","Row","verticalAlign","Column","to","Message","error","MessageHeader","timeout","ListItemAvatar","Icon","location","href","secondary","moment","modified_at","format","ListItemSecondaryAction","currentTarget","Menu","keepMounted","Boolean","MenuItem","link","createElement","download_url","body","appendChild","click","removeChild","Error","UploadDialog","onInputChange","l","length","Modal","Header","Content","multiple","webkitdirectory","marginTop","Segment","Progress","percent","attached","active","currentName","currentIndex","Actions","basic","setOpen","inverted","current","uploadedDataSize","totalDataSize","Widget","text","NewFolderDialog","folderName","setFolderName","setIsLoading","label","required","CreateDocumentDialog","setIsloading","NasMenus","openFilesUpload","setOpenFilesUpload","openFolderUpload","setOpenFolderUpload","openNewFolder","setOpenNewFolder","openEditor","setOpenEditor","vertical","SystemProvider","fetchSystemInfo","componentDidMount","systemInfo","SystemContext","formatBytes","bytes","decimals","dm","floor","parseFloat","pow","toFixed","ComputerStatus","disk","used","Editor","editor","setEditor","isChanged","ref","instance","defaultValue","getEditor","getContents","FilesActions","shadow","setSelectedDocument","margin","computer","mobile","variant","raised","CardActionArea","PDFViewer","pageNumber","setpageNumber","onLoadSuccess","pdf","numPages","Array","from","el","pdfjs","GlobalWorkerOptions","workerSrc","version","readMusicTag","musicSrc","mm","metadata","Musicplayer","tag","pictures","common","picture","CardMedia","image","decodeURIComponent","Typography","component","artist","album","volume","src","Player","require","imageExt","videoExt","pdfExt","audioExt","ListFilesPanel","previewAnchor","setPreviewAnchor","selectedFiles","setSelectedFiles","onHoverFile","setOnHoverFile","setselectedFile","showMultiMoveDialog","setShowMultiMoveDialog","imageSrc","setImageSrc","audioSrc","setaudioSrc","videoSrc","setVideoSrc","pdfSrc","setpdfSrc","isImage","filepath","includes","extname","isVideo","Toolbar","aria-label","TableContainer","Table","TableHead","TableRow","TableCell","Checkbox","checked","TableBody","hover","selected","indexOf","splice","cursor","onMouseOver","onMouseLeave","transcode_filepath","cover","isPdf","basename","v","Image","fluid","poster","scroll","Popper","UploadFilesSideBar","filtedFiles","filter","cpu","memory","itemCount","min","itemSize","marginBottom","useStyles","makeStyles","theme","createStyles","popper","marginRight","position","borderRadius","shape","fade","palette","white","breakpoints","up","spacing","searchIcon","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchField","classes","setValue","className","CircularProgress","InputBase","placeholder","root","input","inputProps","onKeyDown","ClickAwayListener","onClickAway","Paper","createMuiTheme","main","flexGrow","menuButton","HomePage","show","setShow","ThemeProvider","AppBar","Hidden","mdUp","noWrap","Drawer","paddingTop","paddingBottom","smDown","implementation","tablet","PercentageChart","color2","minHeight","minWidth","dataKey","fill","isAnimationActive","SystemInfoPage","Container","columns","temperature","humidity","pressure","QuillDeltaToHtmlConverter","DocumentProvider","doc","currentDocument","saveDocument","newDocument","readFile","reader","FileReader","onload","result","readAsText","openFromLocal","getElementById","accept","addEventListener","converter","MarkdownToQuill","delta","convert","d","remove","saveToLocal","savingType","oepnFromLocal","DocumentContext","notchedOutline","border","fontWeight","background","fontSize","Titlebar","numChanges","setNumChanges","maxWidth","innerWidth","zIndex","placement","divider","borderLeft","withStyles","grouped","ToggleButtonGroup","ToolsBar","BlockEmbed","Quill","import","DividerBlot","blotName","tagName","register","BodyEditor","setNumberOfChanges","save","modules","toolbar","container","textTransform","menuItem","MenuBar","fileEl","setfileEl","textDecoration","getContentAnchorEl","anchorOrigin","horizontal","transformOrigin","parentMenuOpen","BookProvider","books","onCloseDetailDialog","currentBook","fetchBookDetail","showLoading","moveDocumentTo","collection","createDocument","show_in_folder","addNewBook","desc","description","updateBook","deleteBook","book","BookContext","MoveBookDialog","currentDoc","selectedId","setSelectedId","FormControl","InputLabel","Select","b","UpdateCollectionDialog","setname","setdescription","multiline","rows","BookDrawer","setCurrentDoc","showEditDialog","setShowEditDialog","startIcon","appbar","row","largeIcon","menuIcon","top","left","DocumentEditor","openDrawer","setOpenDrawer","elevation","innerHeight","square","Fab","Snackbar","message","Backdrop","MusicProvider","getAlbumsByArtist","artistDetail","init","values","queryString","filterBy","musicList","filterField","musicResponse","setTabIndex","prevIndex","currentTabIndex","albumResponse","albums","artistResonse","artists","field","updateMetadata","isSearching","replace","paginationURL","searchURL","presslike","music_metadata","like","play","music","currentMusic","stop","currentTag","MusicContext","MusicSearchField","getMusicPicture","CurrentPlayingPage","createRef","controls","loop","crossOrigin","autoPlay","meterWidth","audioId","Transition","forwardRef","Slide","direction","CurrentPlayingMobile","openDialog","setOpenDialog","currentTime","setCurrentTime","totalTime","setTotalTime","setVolume","repeat","setRepeat","playingState","setPlayingState","player","useRef","item","xs","Skeleton","onVolumeChange","onCanPlay","duration","onTimeUpdate","fullScreen","TransitionComponent","Slider","max","aria-labelledby","justify","textAlign","pause","MusicList","isSelected","file2","stickyHeader","results","m","utc","TableFooter","Pagination","page","current_page","count","total_pages","MusicListMobile","PlayerPage","xsDown","sm","bottom","AlbumPage","md","lg","offset","ArtistPage","showDialog","setShowDialog","orange","root1","backdrop","drawer","MusicPage","Tabs","Tab","BookDetailDialog","edge","BookList","showCreateDialog","setShowCreateDialog","alignContent","justifyItems","align","BookPage","hostname","ReactDOM","catalogs","setShowMenu","exact","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","code","keys","module","exports"],"mappings":"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","file":"static/js/main.72051d44.chunk.js","sourcesContent":["export const systemURL = \"/system/\"\nexport const url = \"/api/folder/\"\nexport const fileURL = \"/api/file/\"\nexport const documentURL = \"/api/document/\"\nexport const searchFileURL = \"/api/file?search=\"\n// download folder\nexport const downloadURL = \"/api/download/\"\n//music \nexport const musicURL = \"/api/music/\"\nexport const musicMetadataURL = \"/api/music-metadata/\"\n// book collect\nexport const bookCollectionURL = '/api/book-collection/'","import Axios from \"axios\"\nimport { Folder, Parent, File as NasFile, Document as NasDocument, PaginationResponse } from './Folder';\n\nimport { url, documentURL, fileURL, searchFileURL, musicURL } from \"./urls\"\nimport { DeltaStatic } from \"quill\";\nimport * as path from 'path';\n\n\n\ntype UploadProgressCallback = (index: number, progress: number) => void\n\n\nexport class Nas {\n    menus: Parent[]\n    currentFolder?: Folder\n    searchedFiles: NasFile[];\n    errorMsg?: string\n\n\n    constructor() {\n        this.menus = []\n        this.searchedFiles = [];\n    }\n\n    moveFileTo = async (fileId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`\n                await Axios.patch(url, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Fetch list of music\n     */\n    fetchMusicList = async (): Promise<PaginationResponse<NasFile> | undefined> => {\n        try {\n\n            let url = `${musicURL}`\n            let data = await Axios.get<PaginationResponse<NasFile>>(url)\n            return data.data\n        } catch (err) {\n            console.log(\"err\")\n            this.errorMsg = err;\n        }\n    }\n\n    moveDocument = async (documentId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${documentURL}${documentId}/`\n                await Axios.patch(url, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    moveFolderTo = async (folderId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let u = `${url}${folderId}/`\n                await Axios.patch(u, { \"parent\": dest })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Rename file\n     */\n    rename = async (fileId: number, newName: string) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`\n                await Axios.patch(url, { \"filename\": newName })\n                await this.getContent(this.currentFolder.id)\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    }\n\n    /**\n     * Search by keyword\n     * @param keyword Keyword\n     */\n    search = async (keyword: String) => {\n        try {\n            let url = `${searchFileURL}${keyword}`\n            let response = await Axios.get<NasFile[]>(url);\n            this.searchedFiles = response.data;\n        } catch (err) {\n            this.errorMsg = err\n        }\n    }\n\n    /**\n     * Get content by id\n     */\n    getContent = async (id?: number | string) => {\n        try {\n            let u = id ? `${url}${id}/` : url\n            let response = await Axios.get<Folder>(u)\n            const { data } = response\n            this.menus = data.parents\n            this.currentFolder = data\n            this.errorMsg = undefined\n        } catch (err) {\n            this.errorMsg = err\n            this.currentFolder = undefined\n        }\n    }\n\n\n    /**\n     * Upload file to server.\n     * If upload fail, will show alert dialog\n     * @param files: List of files\n     * @param onUpload: callback function\n     * @param isDir: Whether upload directory\n     */\n    uploadFile = async (files: File[], isDir: boolean, onUpload: (index: number, progress: number, current: number, total: number) => void, onFileUploaded: (file: File) => Promise<void>) => {\n        try {\n            let index = 0;\n            for (let f of files) {\n                if (this.currentFolder) {\n                    onUpload(index, 0, 0, f.size);\n\n                    let formData =\n                        isDir ?\n                            await this.getUploadFileAndCreateFolder(f) :\n                            this.getSingleUploadFile(f)\n\n                    await Axios.post<NasFile>(fileURL, formData,\n                        {\n                            headers: { 'Content-Type': 'multipart/form-data' },\n                            // eslint-disable-next-line no-loop-func\n                            onUploadProgress: (progress) => {\n                                let p = Math.round((progress.loaded * 100) / progress.total);\n                                onUpload(index, p, f.size * progress.loaded, progress.total)\n\n                            }\n\n                        })\n\n                    await this.getContent(this.currentFolder?.id)\n                    await onFileUploaded(f)\n\n                }\n                index += 1\n            }\n            onUpload(index, 100, 0, 0);\n        } catch (err) {\n            console.log(err)\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Only get the formdata but don't create folder\n     * @param file File\n     */\n    getSingleUploadFile(file: File): FormData | undefined {\n        if (this.currentFolder) {\n            let formData = new FormData()\n            formData.append(\"file\", file)\n            this.currentFolder.id && formData.append(\"parent\", this.currentFolder.id.toString())\n            return formData\n        }\n\n    }\n\n    /**\n     * Create folder for file. And then return the file\n     * For example file with path a/a.jpg will create a folder\n     * @param file Upload file\n     */\n    async getUploadFileAndCreateFolder(file: File): Promise<FormData | undefined> {\n        if (this.currentFolder) {\n            //@ts-ignore\n            let paths = file.webkitRelativePath\n            let formData = new FormData()\n            console.log(this.currentFolder)\n            formData.append(\"file\", file)\n            this.currentFolder.id && formData.append(\"parent\", `${this.currentFolder?.id}`)\n            formData.append(\"paths\", paths)\n            return formData\n        }\n\n    }\n\n    /** \n     * Delete file by id\n     */\n    deleteFile = async (id: number, showAlert = true) => {\n        try {\n\n            let confirm = showAlert ? window.confirm(\"Are you sure you want to delete this file?\") : true\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${fileURL}${id}/`)\n                await this.getContent(this.currentFolder.id)\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Delete folder by id\n     */\n    deleteFolder = async (id: number) => {\n        try {\n            let confirm = window.confirm(\"Are you sure you want to delete this folder?\")\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${url}${id}/`)\n                await this.getContent(this.currentFolder.id)\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString())\n        }\n    }\n\n    /**\n     * Create folder with name\n     * @param name\n     */\n    createNewFolder = async (name: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.post<Folder>(url, { name: name, parent: this.currentFolder.id ? this.currentFolder.id : null })\n            this.currentFolder.folders.push(res.data)\n        } else {\n            alert(\"Create new folder error: empty parent folder\")\n        }\n    }\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameFolder = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<Folder>(`${url}${id}/`, { \"name\": newName })\n            let index = this.currentFolder.folders.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.folders[index] = res.data\n            }\n        } else {\n            alert(\"Rename new folder error: empty parent folder\")\n        }\n    }\n\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameDocument = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { \"name\": newName })\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data\n            }\n        } else {\n            alert(\"Rename new document error\")\n        }\n    }\n\n    /**\n     * Get document from server.\n     * We need this function because we are getting abstract document object from server\n     * at begining(Which doesn't include content field).\n     * \n     * We will Call this function when user want to edit the file\n     */\n    getDocument = async (id: string | number): Promise<NasDocument> => {\n\n        let res = await Axios.get<NasDocument>(`${documentURL}${id}/`)\n        /// Need to parse the content into js object\n        return Promise.resolve({ ...res.data, content: JSON.parse(res.data.content) })\n\n    }\n\n    /**\n     * Create new document\n     * @param name: Name of the document\n     * @param data: EditorJS object\n     */\n    createNewDocument = async (name: string, data?: DeltaStatic, parent?: any) => {\n        let res = await Axios.post<NasDocument>(documentURL,\n            {\n                name: name, parent: this.currentFolder && this.currentFolder.id ? this.currentFolder.id : parent,\n                content: data ? JSON.stringify(data.ops) : undefined\n            })\n        this.currentFolder && this.currentFolder.documents.push(res.data)\n        return res.data\n    }\n\n    /**\n     * Update Document\n     * @param id: document's id\n     * @param data: EditorJS object\n     */\n    updateDocument = async (id: number, name: string, data: DeltaStatic) => {\n\n        let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { name, content: JSON.stringify(data?.ops) })\n        if (this.currentFolder) {\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id)\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data\n            }\n\n        }\n\n    }\n\n    /**\n     * Delete document by id\n     * \n     * @param id: document's id\n     */\n    deleteDocument = async (id: number) => {\n        if (this.currentFolder) {\n            let confirm = window.confirm(\"Do you want to delete this document?\")\n            if (confirm) {\n                let res = await Axios.delete<NasDocument>(`${documentURL}${id}/`)\n                await this.getContent(this.currentFolder.id)\n                return Promise.resolve(res.data)\n            } else {\n\n            }\n\n        } else {\n            alert(\"Create new folder error: empty parent folder\")\n            return Promise.reject()\n        }\n    }\n\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface HomePageContext {\n  nas: Nas;\n  selectedDocument?: NasDocument;\n  uploadInfo?: UploadInfo;\n  updateUploadInfo(info?: UploadInfo): void;\n  uploadFiles?: File[];\n  uploadedFiles: File[];\n  setUploadInfo(files?: File[]): void;\n  update(): void;\n  selectDocument(doc?: NasDocument): void;\n  setUploadedFiles(files: File[]): void;\n  isLoading: boolean;\n}\n\ninterface HomePageProps extends RouteComponentProps<RouterProps> {}\n\nexport class HomePageProvider extends Component<\n  HomePageProps,\n  HomePageContext\n> {\n  constructor(props: HomePageProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      selectDocument: this.selectDocument,\n      updateUploadInfo: this.updateUploadInfo,\n      setUploadInfo: this.setUploadInfo,\n      update: this.update,\n      uploadedFiles: [],\n      setUploadedFiles: this.setUploadedFile,\n      isLoading: false\n    };\n  }\n\n  setUploadedFile = (files: File[]) => {\n    this.setState({ uploadedFiles: files });\n  };\n\n  selectDocument = (document?: NasDocument) => {\n    this.setState({ selectedDocument: document });\n  };\n\n  updateUploadInfo = (uploadInfo?: UploadInfo) => {\n    this.setState({ uploadInfo });\n  };\n\n  setUploadInfo = (file: File[]) => {\n    this.setState({ uploadFiles: file });\n  };\n\n  async componentDidUpdate(oldProps: HomePageProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      await this.fetch(id);\n    }\n  }\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    await this.fetch(id);\n  }\n\n  fetch = async (id: any) => {\n    this.setState({ isLoading: true });\n    const { nas } = this.state;\n    await nas.getContent(id);\n    this.setState({ nas, isLoading: false });\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <HomePageContext.Provider value={this.state}>\n        {this.props.children}\n      </HomePageContext.Provider>\n    );\n  }\n}\n\nconst context: HomePageContext = {\n  nas: new Nas(),\n  uploadedFiles: [],\n  setUploadedFiles: (files: File[]) => {},\n  update: () => {},\n  selectDocument: () => {},\n  updateUploadInfo: (info: UploadInfo) => {},\n  setUploadInfo: (files: File[]) => {},\n  isLoading: false\n};\n\nexport const HomePageContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport * as path from \"path\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Button,\n  DialogActions\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  onClose(): void;\n  type: \"file\" | \"folder\" | \"document\";\n  selectedFile: NasFile | NasDocument | Folder;\n}\n\nexport default function RenameDialog(props: Props) {\n  const getDefaultName = () => {\n    switch (props.type) {\n      case \"file\":\n        let ext = path.extname((props.selectedFile as NasFile).filename);\n        return path.basename((props.selectedFile as NasFile).filename, ext);\n\n      case \"folder\":\n        return (props.selectedFile as Folder).name;\n\n      default:\n        return (props.selectedFile as NasDocument).name;\n    }\n  };\n\n  const { nas } = useContext(HomePageContext);\n\n  const [name, setName] = useState<string>(getDefaultName());\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>Rename</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          fullWidth\n          value={name}\n          onChange={e => {\n            setName(e.target.value);\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.onClose();\n            setName(\"\");\n          }}\n        >\n          cancel\n        </Button>\n        <Button\n          onClick={async () => {\n            if (name) {\n              switch (props.type) {\n                case \"file\":\n                  let ext = path.extname(\n                    (props.selectedFile as NasFile).filename\n                  );\n                  await nas.rename(props.selectedFile.id, `${name}${ext}`);\n                  break;\n                case \"folder\":\n                  await nas.renameFolder(props.selectedFile.id, name);\n                  break;\n                case \"document\":\n                  await nas.renameDocument(props.selectedFile.id, name);\n                  break;\n              }\n            }\n            props.onClose();\n          }}\n        >\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\n//@ts-ignore\n\ninterface MovingContext {\n  nas: Nas;\n  update(): void;\n}\n\ninterface MovingProps {}\n\nexport class MovingProvider extends Component<MovingProps, MovingContext> {\n  constructor(props: MovingProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      update: this.update\n    };\n  }\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <MovingContext.Provider value={this.state}>\n        {this.props.children}\n      </MovingContext.Provider>\n    );\n  }\n}\n\nconst context: MovingContext = {\n  nas: new Nas(),\n  update: () => {}\n};\n\nexport const MovingContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  CardActions,\n  IconButton,\n  CircularProgress,\n  Fade,\n  Collapse,\n  LinearProgress,\n  Tooltip,\n  Divider\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport { FixedSizeList } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nimport { Button } from \"semantic-ui-react\";\nimport { MovingContext } from \"../../../models/MovingContext\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../models/Folder\";\n\ninterface Props {\n  currentFile: Folder | NasFile | NasDocument;\n  onClose(): void;\n  onMove(file: Folder | NasFile | NasDocument, dest: Folder): Promise<void>;\n}\n\nexport default function MoveDialog(props: Props) {\n  const { nas, update } = useContext(MovingContext);\n  const { currentFile, onMove, onClose } = props;\n  const [loading, setLoading] = useState(false);\n  const [loadingFolder, setLoadingFolder] = useState(\n    nas.currentFolder === undefined\n  );\n\n  if (!nas.currentFolder) {\n    nas\n      .getContent(currentFile.parent as any)\n      .then(() => {\n        setLoadingFolder(false);\n      })\n      .catch(err => {\n        alert(`${err}`);\n        setLoadingFolder(false);\n      });\n  }\n\n  return (\n    <Card style={{ width: \"400px\" }}>\n      <CardContent>\n        <div>\n          <IconButton\n            disabled={nas.currentFolder?.parent === undefined}\n            onClick={async () => {\n              setLoadingFolder(true);\n              await nas.getContent(nas.currentFolder?.parent);\n              update();\n              setTimeout(() => {\n                setLoadingFolder(false);\n              }, 500);\n            }}\n          >\n            <ArrowBackIosIcon />\n          </IconButton>\n          {nas.currentFolder?.name ?? \"root\"}\n        </div>\n        <Collapse in={loadingFolder} mountOnEnter unmountOnExit>\n          <LinearProgress style={{ backgroundColor: \"#47bcff\" }} />\n        </Collapse>\n\n        <Collapse in={!loadingFolder} mountOnEnter unmountOnExit>\n          <List style={{ padding: 0, maxHeight: 400, overflowY: \"auto\" }}>\n            {nas.currentFolder?.folders?.map((f, i) => (\n              <ListItem\n                key={`folder-${i}`}\n                button\n                onClick={async () => {\n                  setLoadingFolder(true);\n                  await nas.getContent(f.id);\n                  update();\n                  setTimeout(() => {\n                    setLoadingFolder(false);\n                  }, 500);\n                }}\n              >\n                <ListItemIcon>\n                  <FolderIcon />\n                </ListItemIcon>\n                <ListItemText primary={f.name} />\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n        <Divider />\n      </CardContent>\n      <CardActions disableSpacing>\n        <Tooltip title=\"New Folder\">\n          <IconButton>\n            <CreateNewFolderIcon />\n          </IconButton>\n        </Tooltip>\n        <Button\n          loading={loading}\n          color=\"blue\"\n          style={{ marginLeft: \"auto\" }}\n          size=\"tiny\"\n          onClick={async () => {\n            if (currentFile && nas.currentFolder) {\n              try {\n                setLoading(true);\n                await onMove(currentFile, nas.currentFolder);\n                setTimeout(() => {\n                  setLoading(false);\n                  update();\n                  onClose();\n                  nas.currentFolder = undefined;\n                }, 400);\n              } catch (err) {\n                alert(\"Cannot move to this location\");\n                setLoading(false);\n              }\n            }\n          }}\n        >\n          Move Here\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Segment,\n  MessageHeader,\n  Message,\n  Icon,\n  Modal,\n  Image,\n  SemanticICONS,\n  Divider,\n  Label,\n  Button,\n  Popup,\n  Grid\n} from \"semantic-ui-react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  Collapse,\n  Dialog\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport Axios from \"axios\";\nimport \"video-react/dist/video-react.css\";\nimport { Folder, Document as NasDocument } from \"../../../../models/Folder\";\n\nimport { NavLink } from \"react-router-dom\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport RenameDialog from \"../files/RenameDialog\";\nimport { downloadURL } from \"../../../../models/urls\";\nimport MoveDialog from \"../../../document/components/MoveDialog\";\n\nexport default function ListPanel() {\n  const { nas, isLoading, update } = useContext(HomePageContext);\n  const [showMoveToDialog, setShowMoveToDialog] = useState(false);\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedFolder, setSelectedFolder] = useState<Folder | undefined>(\n    undefined\n  );\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      style={{\n        overflow: \"auto\",\n        overflowX: \"hidden\",\n        height: \"100%\",\n        color: \"blue\"\n      }}\n    >\n      <List>\n        <Grid centered>\n          <Grid.Row verticalAlign=\"middle\">\n            <Grid.Column width={5}>\n              {nas.currentFolder && nas.currentFolder.parent ? (\n                <NavLink to={`/home/${nas.currentFolder.parent}`}>\n                  <IconButton>\n                    <ArrowBackIosIcon />\n                  </IconButton>\n                </NavLink>\n              ) : (\n                <IconButton>\n                  <NavLink to={`/home`}>\n                    <ArrowBackIosIcon />\n                  </NavLink>{\" \"}\n                </IconButton>\n              )}\n            </Grid.Column>\n            <Grid.Column width={11}>\n              <div style={{ color: \"black\" }}>\n                {nas.currentFolder && nas.currentFolder.name}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        {nas.errorMsg && (\n          <Message error>\n            <MessageHeader>Network Error</MessageHeader>\n            <div>{nas.errorMsg.toString()}</div>\n          </Message>\n        )}\n        <Collapse in={!isLoading} timeout={300}>\n          {/*Render Folders*/}\n          {nas.currentFolder &&\n            nas.currentFolder.folders.map((f, i) => (\n              <ListItem button key={`folder-${f.id}`}>\n                <ListItemAvatar>\n                  <Icon name=\"folder\" size=\"large\" color=\"grey\"></Icon>\n                </ListItemAvatar>\n                <ListItemText\n                  onClick={() => {\n                    window.location.href = `#/home/${f.id}`;\n                  }}\n                  style={{ color: \"black\" }}\n                  primary={f.name}\n                  secondary={moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                />\n                {/** folder menu button */}\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={e => {\n                      handleClick(e);\n                      setSelectedFolder(f);\n                    }}\n                  >\n                    <MoreHorizIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n\n                {/** end folder menu button */}\n              </ListItem>\n            ))}\n        </Collapse>\n        {/*End Render Folders*/}\n      </List>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem\n          onClick={() => {\n            setShowRenameDialog(true);\n            handleClose();\n          }}\n        >\n          Rename\n        </MenuItem>\n        <MenuItem\n          onClick={async () => {\n            if (selectedFolder) {\n              let response = await Axios.post(\n                `${downloadURL}${selectedFolder.id}`\n              );\n\n              const link = document.createElement(\"a\");\n              link.href = `${response.data.download_url}`;\n              console.log(link.href);\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n            }\n          }}\n        >\n          Download Folder\n        </MenuItem>\n        <MenuItem\n          onClick={async () => {\n            if (selectedFolder) {\n              await nas.deleteFolder(selectedFolder.id);\n              handleClose();\n              update();\n              setSelectedFolder(undefined);\n            }\n          }}\n        >\n          Delete\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleClose();\n            setShowMoveToDialog(true);\n          }}\n        >\n          Move To\n        </MenuItem>\n      </Menu>\n\n      {selectedFolder && showRenameDialog && (\n        <RenameDialog\n          type=\"folder\"\n          selectedFile={selectedFolder}\n          open={showRenameDialog}\n          onClose={() => {\n            setSelectedFolder(undefined);\n            setShowRenameDialog(false);\n          }}\n        />\n      )}\n\n      {selectedFolder && showMoveToDialog && (\n        <Dialog\n          open={showMoveToDialog}\n          onClose={() => {\n            setShowMoveToDialog(false);\n            setSelectedFolder(undefined);\n          }}\n        >\n          <MoveDialog\n            currentFile={selectedFolder}\n            onClose={() => {\n              setShowMoveToDialog(false);\n              setSelectedFolder(undefined);\n            }}\n            onMove={async (file, dest) => {\n              if (file.id === dest.id) {\n                throw Error(\"Cannot move to this place\");\n              }\n              await nas.moveFolderTo(file.id, dest.id);\n              update();\n            }}\n          />\n        </Dialog>\n      )}\n    </div>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  isDir: boolean;\n}\n\nexport interface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n  uploadedDataSize: number;\n  totalDataSize: number;\n}\n\nexport default function UploadDialog(props: Props) {\n  const {\n    nas,\n    update,\n    uploadInfo,\n    setUploadInfo,\n    uploadFiles,\n    updateUploadInfo,\n    setUploadedFiles,\n    uploadedFiles\n  } = useContext(HomePageContext);\n\n  const onInputChange = e => {\n    let uploadFiles = e.target.files;\n    if (uploadFiles) {\n      let l: File[] = [];\n      for (var i = 0; i < uploadFiles.length; i++) {\n        l.push(uploadFiles[i]);\n      }\n\n      setUploadInfo(l);\n    }\n  };\n\n  return (\n    <Modal open={props.open}>\n      <Modal.Header>Select {props.isDir ? \"Folder\" : \"Files\"} </Modal.Header>\n      <Modal.Content>\n        <Grid.Row>\n          {props.isDir ? (\n            <input\n              type=\"file\"\n              multiple\n              webkitdirectory=\"\"\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          ) : (\n            <input\n              type=\"file\"\n              multiple\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          )}\n        </Grid.Row>\n        {uploadInfo && (\n          <Grid.Row style={{ marginTop: 20 }}>\n            <Segment>\n              <Progress\n                percent={uploadInfo.progress}\n                attached=\"top\"\n                color=\"green\"\n                active\n              />\n              {uploadInfo.currentName} {uploadInfo.currentIndex}/\n              {uploadInfo.total} --- {uploadInfo.progress} %\n              <Progress\n                percent={(uploadInfo.currentIndex / uploadInfo.total) * 100}\n                attached=\"bottom\"\n                color=\"blue\"\n                active\n              />\n            </Segment>\n          </Grid.Row>\n        )}\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> {uploadInfo ? \"Minimize\" : \"Close\"}\n        </Button>\n        <Button\n          disabled={uploadFiles === undefined}\n          color=\"green\"\n          loading={uploadInfo !== undefined}\n          inverted\n          onClick={async () => {\n            if (uploadFiles) {\n              await nas.uploadFile(\n                uploadFiles,\n                props.isDir,\n                (\n                  index: number,\n                  progress: number,\n                  current: number,\n                  total: number\n                ) => {\n                  updateUploadInfo({\n                    total: uploadFiles.length,\n                    currentIndex: index,\n                    currentName: uploadFiles[index]\n                      ? uploadFiles[index].name\n                      : \"Finished\",\n                    progress: progress,\n                    uploadedDataSize: current,\n                    totalDataSize: total\n                  });\n                },\n                async file => {\n                  uploadedFiles.push(file);\n                  // setUploadedFiles(uploadedFiles);\n                }\n              );\n              update();\n              setTimeout(() => {\n                props.setOpen(false);\n                setUploadInfo(undefined);\n                updateUploadInfo(undefined);\n              }, 300);\n            }\n          }}\n        >\n          <Icon name=\"checkmark\" /> Upload\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import { FieldIcon } from \"./Icon\";\nimport { FieldAction } from \"./Action\";\nimport { string } from \"prop-types\";\n\n\ninterface Extra {\n    default?: any;\n    help?: string;\n    related_model?: string;\n    choices?: Choice[]\n\n}\n\nexport enum Widget {\n    text = \"text\",\n    number = \"number\",\n    datetime = \"datetime\",\n    foreignkey = \"foreignkey\",\n    unknown = \"unknown\",\n    select = \"select\",\n    tomanyTable = \"tomany-table\"\n}\n\ninterface Validation {\n    length: Length\n\n}\n\nexport interface Choice {\n    label: string;\n    value: any;\n}\n\ninterface Length {\n    maximum?: number;\n    minimum?: number;\n}\n\nexport interface Schema {\n    label: string;\n    readonly: boolean;\n    /// Could be null\n    extra?: Extra;\n    /// Map's key\n    name: string;\n    /// If widget type is not defined in the enum, then\n    /// return widgetType.unknown\n    widget: Widget | string;\n    required: boolean;\n    /// could be null\n    validations?: Validation;\n    /// this is value will be displayed at screen if set,\n    /// else null\n    value?: any;\n    /// Set this value only if the field includes selection\n    choice?: Choice;\n    /// icon for the field\n    /// this will be set through the params of JSONForm widget\n    icon?: FieldIcon;\n    /// action for the field\n    /// this will be set through the params of JSONForm widget\n    action?: FieldAction;\n\n}\n\n\n\nexport class SchemaList {\n\n    schemaList: Schema[];\n\n    constructor(schemas: Schema[]) {\n        schemas.forEach(s => {\n            if (s.extra && s.extra.default) {\n                s.value = s.extra.default\n            }\n        })\n        this.schemaList = schemas;\n    }\n\n    merge(values: { [key: string]: any }) {\n        this.schemaList = this.schemaList.map((s) => {\n            if (values[s.name]) {\n                let value = values[s.name];\n                if (s.widget == Widget.select) {\n                    let choice: Choice | undefined = s.extra\n                        && s.extra.choices\n                        && s.extra.choices.find((c) => c.value === value)\n                    s.choice = choice;\n                } else if (s.widget == Widget.foreignkey) {\n                    let choice: Choice = value;\n                    s.choice = choice;\n                    s.value = value.value;\n                } else {\n                    s.value = value;\n                }\n            }\n            return s;\n        });\n    }\n\n    onSubmit(): { [key: string]: any } {\n        console.log(this.schemaList)\n        let maps: { [key: string]: any } = {};\n        this.schemaList.filter(s => !s.readonly && s.widget !== Widget.tomanyTable).forEach((s) => maps[s.name] = s.value);\n        console.log(maps)\n        return maps;\n\n    }\n\n}\n","import React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport { SchemaList, Schema, Widget } from \"../../JSONSchema/model/Schema\";\nimport { DialogContent } from \"@material-ui/core\";\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogTitle\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n}\n\ninterface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n}\n\nconst schema: Schema[] = [\n  {\n    name: \"name\",\n    label: \"Folder Name\",\n    readonly: false,\n    required: true,\n    widget: Widget.text\n  }\n];\n\nexport default function NewFolderDialog(props: Props) {\n  const { nas, update } = useContext(HomePageContext);\n  const [folderName, setFolderName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>New Folder</DialogTitle>\n      <DialogContent>\n        <TextField\n          onChange={e => {\n            setFolderName(e.target.value);\n          }}\n          value={folderName}\n          color=\"secondary\"\n          fullWidth\n          label=\"Folder Name\"\n          required\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> No\n        </Button>\n        <Button\n          basic\n          color=\"green\"\n          onClick={async () => {\n            setIsLoading(true);\n            await nas.createNewFolder(folderName);\n            update();\n            setIsLoading(false);\n            props.setOpen(false);\n          }}\n          loading={isLoading}\n        >\n          <Icon name=\"add\" /> Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function CreateDocumentDialog(props: Props) {\n  const [name, setName] = useState<string | undefined>();\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  return (\n    <Dialog open={props.open} onClose={() => props.setOpen(false)} fullWidth>\n      <DialogTitle>Document</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.setOpen(false);\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (name) {\n                await nas.createNewDocument(name, undefined);\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  Grid,\n  Breadcrumb,\n  Segment,\n  Card,\n  MenuItem as MMenuItem\n} from \"semantic-ui-react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport UploadDialog from \"../files/UploadDialog\";\nimport NewFolderDialog from \"../folders/NewFolderDialog\";\nimport Editor from \"../documents/Editor\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nimport { Menu } from \"semantic-ui-react\";\nimport CreateDocumentDialog from \"../documents/CreateDocumentDialog\";\n\nexport default function NasMenus() {\n  const { nas } = useContext(HomePageContext);\n\n  const [openFilesUpload, setOpenFilesUpload] = useState(false);\n  const [openFolderUpload, setOpenFolderUpload] = useState(false);\n  const [openNewFolder, setOpenNewFolder] = useState(false);\n  const [openEditor, setOpenEditor] = useState(false);\n\n  return (\n    <div>\n      <ContextMenu id=\"folder\">\n        <Menu id=\"folder\" vertical>\n          <MenuItem\n            onClick={() => {\n              setOpenNewFolder(true);\n            }}\n          >\n            <MMenuItem>New Folder</MMenuItem>\n          </MenuItem>\n        </Menu>\n      </ContextMenu>\n      <ContextMenu id=\"files\">\n        <Menu vertical>\n          <MMenuItem onClick={() => setOpenEditor(true)}>\n            New Document\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFilesUpload(true);\n            }}\n          >\n            Upload Files\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFolderUpload(true);\n            }}\n          >\n            Upload Folder\n          </MMenuItem>\n        </Menu>\n      </ContextMenu>\n      <UploadDialog\n        isDir={false}\n        open={openFilesUpload}\n        setOpen={setOpenFilesUpload}\n      />\n      <UploadDialog\n        isDir={true}\n        open={openFolderUpload}\n        setOpen={setOpenFolderUpload}\n      />\n      <NewFolderDialog\n        open={openNewFolder}\n        setOpen={setOpenNewFolder}\n      ></NewFolderDialog>\n      <CreateDocumentDialog open={openEditor} setOpen={setOpenEditor} />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { SystemInfo } from \"./Folder\";\nimport Axios from \"axios\";\nimport { systemURL } from \"./urls\";\n\ninterface SystemContext {\n  systemInfo?: SystemInfo;\n}\n\ninterface SystemProps {}\n\nexport class SystemProvider extends Component<SystemProps, SystemContext> {\n  constructor(props: SystemProps) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    let info = await this.fetchSystemInfo();\n    if (info) {\n      this.setState({ systemInfo: info });\n    }\n    // setInterval(async () => {\n    //   let info = await this.fetchSystemInfo();\n    //   console.log(\"Update system info\");\n    //   if (info) {\n    //     this.setState({ systemInfo: info });\n    //   }\n    // }, 20000);\n  }\n\n  fetchSystemInfo = async (): Promise<SystemInfo> => {\n    let info = await Axios.get<SystemInfo>(systemURL);\n    return Promise.resolve(info.data);\n  };\n\n  render() {\n    return (\n      <SystemContext.Provider value={this.state}>\n        {this.props.children}\n      </SystemContext.Provider>\n    );\n  }\n}\n\nconst context: SystemContext = {};\n\nexport const SystemContext = React.createContext(context);\n","export function formatBytes(bytes: number, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}","import React, { useContext } from \"react\";\nimport { Progress, Message } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\nimport { formatBytes } from \"../files/utils\";\n\nexport default function ComputerStatus() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return (\n      <Message>\n        <p>No Info Avaliable currently</p>\n      </Message>\n    );\n  }\n  return (\n    <div>\n      <span>\n        Used Sapce: {formatBytes(systemInfo.disk.used)}/\n        {formatBytes(systemInfo.disk.total)}\n      </span>\n      <Progress\n        percent={((systemInfo.disk.used / systemInfo.disk.total) * 100).toFixed(\n          2\n        )}\n        size=\"tiny\"\n        color=\"green\"\n      />\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button } from \"semantic-ui-react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ReactQuill, { Quill } from \"react-quill\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function Editor(props: Props) {\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n  const [name, setName] = useState<string | undefined>();\n  const [isChanged, setIsChanged] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  if (name === undefined) {\n    setName(document ? document.name : \"\");\n  }\n\n  return (\n    <Modal open={props.open} centered={false}>\n      <Modal.Header>\n        <TextField\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </Modal.Header>\n      <Modal.Content>\n        <ReactQuill\n          ref={instance => setEditor(instance != null ? instance : undefined)}\n          defaultValue={document && document.content}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            if (isChanged) {\n              let confirm = window.confirm(\n                \"Are you sure you want to exit? You will lose unsave data.\"\n              );\n              if (confirm) {\n                props.setOpen(false);\n              }\n            } else {\n              props.setOpen(false);\n            }\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (editor && name) {\n                let data = editor.getEditor().getContents();\n                if (document) {\n                  // update current document\n                  await nas.updateDocument(document.id, name, data);\n                } else {\n                  if (name !== \"\") {\n                    await nas.createNewDocument(name, data);\n                  } else {\n                    throw \"Name should not be empty\";\n                  }\n                }\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Save\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Grid, Header, Icon } from \"semantic-ui-react\";\nimport {\n  IconButton,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  CardActionArea\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Folder, Document as NasDocument } from \"../../../../models/Folder\";\nimport RenameDialog from \"./RenameDialog\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function FilesActions() {\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [shadow, setShadow] = useState<number>();\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState<NasDocument>();\n\n  return (\n    <div style={{ width: \"100%\", margin: \"20px\" }}>\n      <Grid>\n        <Grid.Row>\n          {/*Render documents*/}\n          {nas.currentFolder &&\n            nas.currentFolder.documents.map((f, i) => (\n              <Grid.Column\n                computer={4}\n                mobile={8}\n                style={{ padding: 10 }}\n                key={`document-${i}`}\n              >\n                <Card variant=\"outlined\" raised={shadow === i ? true : false}>\n                  <NavLink to={`/document/${f.id}`}>\n                    <CardActionArea style={{ height: 80 }}>\n                      <CardContent>\n                        <h3>{f.name}</h3>\n                      </CardContent>\n                    </CardActionArea>\n                  </NavLink>\n                  <CardActions>\n                    <IconButton\n                      onClick={async () => {\n                        await nas.deleteDocument(f.id);\n                        update();\n                      }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                    <IconButton\n                      onClick={async () => {\n                        setSelectedDocument(f);\n                        setShowRenameDialog(true);\n                      }}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                  </CardActions>\n                </Card>\n              </Grid.Column>\n            ))}\n          {/*End Render documents*/}\n        </Grid.Row>\n      </Grid>\n      {selectedDocument && (\n        <RenameDialog\n          type=\"document\"\n          open={showRenameDialog}\n          selectedFile={selectedDocument}\n          onClose={() => {\n            setShowRenameDialog(false);\n            setSelectedDocument(undefined);\n            update();\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\ninterface Props {\n  file: string;\n}\n\nexport default function PDFViewer(props: Props) {\n  const [pageNumber, setpageNumber] = useState(1);\n  const [current, setcurrent] = useState(1);\n\n  return (\n    <Document\n      file={props.file}\n      onLoadSuccess={pdf => {\n        setpageNumber(pdf.numPages);\n      }}\n    >\n      {Array.from(new Array(pageNumber), (el, index) => (\n        <Page key={`page-${index}`} pageNumber={index + 1} />\n      ))}\n    </Document>\n  );\n}\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  makeStyles,\n  CardContent,\n  Typography,\n  CardMedia\n} from \"@material-ui/core\";\nimport * as path from \"path\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport jsmediatags from \"jsmediatags\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport { TagType } from \"jsmediatags/types\";\nimport * as mm from \"music-metadata-browser\";\nimport { Grid } from \"semantic-ui-react\";\n\ninterface Props {\n  musicSrc: string;\n  onClose(): void;\n}\n\ninterface State {\n  tag?: mm.IAudioMetadata;\n}\n\nconst readMusicTag = async (musicSrc: string): Promise<mm.IAudioMetadata> => {\n  const metadata = await mm.fetchFromUrl(musicSrc);\n  return metadata;\n};\n\nexport default class Musicplayer extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentWillMount() {\n    const { musicSrc } = this.props;\n    let data = await readMusicTag(musicSrc);\n    this.setState({ tag: data });\n  }\n\n  async componentDidUpdate(oldProps: Props) {\n    const { musicSrc } = this.props;\n    if (oldProps.musicSrc !== musicSrc) {\n      let data = await readMusicTag(musicSrc);\n      this.setState({ tag: data });\n    }\n  }\n\n  render() {\n    const { musicSrc, onClose } = this.props;\n    const { tag } = this.state;\n    const pictures = tag?.common.picture;\n    let picture: string | undefined = undefined;\n    if (pictures && pictures.length > 0) {\n      picture = pictures[0].data.toString(\"base64\");\n      picture = \"data:image/jpeg;base64,\" + picture;\n    }\n    return (\n      <Dialog\n        fullWidth\n        open={musicSrc !== undefined}\n        onClose={onClose}\n        style={{ overflowX: \"hidden\" }}\n      >\n        <CardMedia\n          style={{ height: 500, width: \"100%\" }}\n          image={picture}\n          title={decodeURIComponent(\n            tag?.common.title ?? path.basename(musicSrc)\n          )}\n        />\n        <DialogContent>\n          <Typography component=\"h5\" variant=\"h5\">\n            {decodeURIComponent(tag?.common.title ?? path.basename(musicSrc))}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {tag?.common.artist}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {tag?.common.album}\n          </Typography>\n        </DialogContent>\n        <div>\n          <AudioPlayer volume={0.5} src={musicSrc} />\n        </div>\n      </Dialog>\n    );\n  }\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Icon,\n  Modal,\n  Image,\n  SemanticICONS,\n  Dropdown,\n  CardContent\n} from \"semantic-ui-react\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  TableContainer,\n  TableHead,\n  Table,\n  TableCell,\n  TableRow,\n  Menu,\n  MenuItem,\n  TableBody,\n  IconButton,\n  Popper,\n  Paper,\n  CardMedia,\n  Card,\n  CardActionArea,\n  Checkbox,\n  Toolbar,\n  Tooltip,\n  DialogTitle,\n  DialogContent\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport \"video-react/dist/video-react.css\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../../models/Folder\";\nimport Editor from \"../documents/Editor\";\nimport { downloadURL, fileURL } from \"../../../../models/urls\";\nimport { Grid } from \"semantic-ui-react\";\nimport FilesActions from \"./FilesActions\";\nimport RenameDialog from \"./RenameDialog\";\nimport { formatBytes } from \"./utils\";\nimport PDFViewer from \"./pdf/PDFViewer\";\nimport { Dialog } from \"@material-ui/core\";\nimport MoveDialog from \"../../../document/components/MoveDialog\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport Musicplayer from \"./music/Musicplayer\";\n\nconst { Player } = require(\"video-react\");\n\nconst imageExt = [\".jpg\", \".png\", \".bmp\", \".JPG\", \".gif\", \".jpeg\", \".JPEG\"];\nconst videoExt = [\".mov\", \".mp4\", \".avi\", \".m4v\", \".MOV\", \".MP4\"];\nconst pdfExt = [\".pdf\"];\nconst audioExt = [\".mp3\", \".m4a\"];\n\nexport default function ListFilesPanel() {\n  const {\n    nas,\n    isLoading,\n    update,\n    selectedDocument,\n    selectDocument\n  } = useContext(HomePageContext);\n  const [previewAnchor, setPreviewAnchor] = React.useState<null | HTMLElement>(\n    null\n  );\n  const [selectedFiles, setSelectedFiles] = useState<NasFile[]>([]);\n  const [onHoverFile, setOnHoverFile] = useState<NasFile>();\n  const [selectedFile, setselectedFile] = useState<NasFile>();\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [showMoveToDialog, setShowMoveToDialog] = useState(false);\n  const [showMultiMoveDialog, setShowMultiMoveDialog] = useState(false);\n  const [imageSrc, setImageSrc] = useState<string | undefined>(undefined);\n  const [audioSrc, setaudioSrc] = useState<string | undefined>(undefined);\n  const [videoSrc, setVideoSrc] = useState<\n    { src: string; cover: string } | undefined\n  >(undefined);\n\n  const [pdfSrc, setpdfSrc] = useState<string | undefined>(undefined);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleClosePreview = () => {\n    setPreviewAnchor(null);\n  };\n\n  function isImage(filepath: string): boolean {\n    return imageExt.includes(path.extname(filepath));\n  }\n\n  function isVideo(filepath: string): boolean {\n    return videoExt.includes(path.extname(filepath));\n  }\n\n  function isPdf(filepath: string): boolean {\n    return pdfExt.includes(path.extname(filepath));\n  }\n\n  function isAudio(filepath: string): boolean {\n    return audioExt.includes(path.extname(filepath));\n  }\n\n  function getIcon(filepath: string): SemanticICONS {\n    if (isImage(filepath)) {\n      return \"images\";\n    } else if (isVideo(filepath)) {\n      return \"file video\";\n    }\n\n    return \"file\";\n  }\n\n  return (\n    <div id=\"file-list\">\n      <Grid>\n        <FilesActions />\n        <Toolbar>\n          <div>\n            {selectedFiles.length === 0 ? (\n              <h2>Files</h2>\n            ) : (\n              <h2>Selected {selectedFiles.length} files</h2>\n            )}\n          </div>\n          {selectedFiles.length === 0 ? (\n            <div> </div>\n          ) : (\n            <div>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={async () => {\n                    let confirm = window.confirm(\n                      \"Do you want to delete these files?\"\n                    );\n                    if (confirm) {\n                      for (let file of selectedFiles) {\n                        await nas.deleteFile(file.id, false);\n                        update();\n                      }\n                      setSelectedFiles([]);\n                    }\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Move To\">\n                <IconButton\n                  aria-label=\"Move To\"\n                  onClick={async () => {\n                    setShowMultiMoveDialog(true);\n                  }}\n                >\n                  <FileCopyIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n          )}\n        </Toolbar>\n        <Grid.Row style={{ overflow: \"auto\", overflowX: \"hidden\" }}>\n          {/** Render files */}\n          {nas.currentFolder && nas.currentFolder.files.length > 0 && (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox\n                        onChange={e => {\n                          if (e.target.checked) {\n                            if (nas.currentFolder)\n                              setSelectedFiles(nas.currentFolder.files);\n                          } else {\n                            setSelectedFiles([]);\n                          }\n                          update();\n                        }}\n                        checked={\n                          selectedFiles.length ===\n                          nas.currentFolder.files.length\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Last Modify</TableCell>\n                    <TableCell>Size</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {nas.currentFolder.files.map((f, i) => (\n                    <TableRow hover selected={selectedFiles.includes(f)}>\n                      <TableCell>\n                        <Checkbox\n                          checked={selectedFiles.includes(f)}\n                          onChange={e => {\n                            if (e.target.checked) {\n                              selectedFiles.push(f);\n                            } else {\n                              let index = selectedFiles.indexOf(f);\n                              selectedFiles.splice(index, 1);\n                            }\n                            update();\n                            setSelectedFiles(selectedFiles);\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        style={{ cursor: \"grab\" }}\n                        onMouseOver={e => {\n                          setPreviewAnchor(e.currentTarget);\n                          setOnHoverFile(f);\n                        }}\n                        onMouseLeave={() => {\n                          handleClosePreview();\n                          setOnHoverFile(undefined);\n                        }}\n                        onClick={() => {\n                          if (isImage(f.file)) {\n                            setImageSrc(f.file);\n                          } else if (isVideo(f.file)) {\n                            setVideoSrc({\n                              src: f.transcode_filepath ?? f.file,\n                              cover: f.cover\n                            });\n                          } else if (isAudio(f.file)) {\n                            setaudioSrc(f.file);\n                          } else if (isPdf(f.file)) {\n                            setpdfSrc(f.file);\n                          }\n                        }}\n                      >\n                        <Icon\n                          name={getIcon(f.file)}\n                          size=\"large\"\n                          color=\"teal\"\n                        />\n                        {path.basename(f.filename)}\n                      </TableCell>\n                      <TableCell>\n                        {moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                      </TableCell>\n                      <TableCell>{formatBytes(f.size)}</TableCell>\n                      <TableCell>\n                        <IconButton\n                          onClick={e => {\n                            setselectedFile(f);\n                            handleClick(e);\n                          }}\n                        >\n                          <MoreHorizIcon></MoreHorizIcon>\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n          {/** End Render files */}\n        </Grid.Row>\n        {/** File Action Menu */}\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem\n            onClick={() => {\n              /// Download from link\n              if (selectedFile) {\n                const link = document.createElement(\"a\");\n                link.href = `${selectedFile.file}`;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n              }\n              handleClose();\n            }}\n          >\n            Download\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                handleClose();\n                setShowRenameDialog(true);\n              }\n            }}\n          >\n            Rename\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                await nas.deleteFile(selectedFile.id);\n                handleClose();\n                update();\n              }\n            }}\n          >\n            Delete\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (selectedFile) {\n                handleClose();\n                setShowMoveToDialog(true);\n              }\n            }}\n          >\n            Move To\n          </MenuItem>\n        </Menu>\n        {audioSrc && (\n          <Musicplayer\n            musicSrc={audioSrc}\n            onClose={() => setaudioSrc(undefined)}\n          />\n        )}\n        {/** end file action menu */}\n        {selectedDocument && (\n          <Editor\n            open={selectedDocument !== undefined}\n            setOpen={v => {\n              !v && selectDocument(undefined);\n            }}\n            document={selectedDocument}\n          ></Editor>\n        )}\n        {/** Preview image */}\n        <Modal\n          open={imageSrc !== undefined}\n          onClose={() => setImageSrc(undefined)}\n        >\n          <Image src={imageSrc} fluid></Image>\n        </Modal>\n        {/** End preview image */}\n        {/** Preview image */}\n\n        {/** End preview image */}\n        {/** Preview video */}\n        <Modal\n          open={videoSrc !== undefined}\n          onClose={() => setVideoSrc(undefined)}\n        >\n          <Player poster={videoSrc && videoSrc.cover}>\n            <source src={videoSrc && videoSrc.src} />\n          </Player>\n        </Modal>\n        {/** End preview video */}\n        {/** Preview pdf */}\n        <Modal open={pdfSrc !== undefined} onClose={() => setpdfSrc(undefined)}>\n          {pdfSrc && <PDFViewer file={pdfSrc} />}\n        </Modal>\n        {/** End preview pdf */}\n        {selectedFile && (\n          <Dialog\n            open={showMoveToDialog}\n            scroll=\"paper\"\n            onClose={() => {\n              setselectedFile(undefined);\n              setShowMoveToDialog(false);\n            }}\n          >\n            <MoveDialog\n              currentFile={selectedFile}\n              onClose={() => {\n                setselectedFile(undefined);\n                setShowMoveToDialog(false);\n              }}\n              onMove={async (file, dest) => {\n                await nas.moveFileTo(file.id, dest.id);\n                update();\n              }}\n            />\n          </Dialog>\n        )}\n        {selectedFiles.length > 0 && (\n          <Dialog\n            open={showMultiMoveDialog}\n            onClose={() => {\n              setShowMultiMoveDialog(false);\n            }}\n          >\n            <MoveDialog\n              currentFile={selectedFiles[0]}\n              onClose={() => {\n                setSelectedFiles([]);\n                setShowMultiMoveDialog(false);\n              }}\n              onMove={async (file, dest) => {\n                for (let f of selectedFiles) {\n                  await nas.moveFileTo(f.id, dest.id);\n                  update();\n                }\n              }}\n            />\n          </Dialog>\n        )}\n        {selectedFile && (\n          <RenameDialog\n            type=\"file\"\n            open={showRenameDialog}\n            selectedFile={selectedFile}\n            onClose={() => {\n              setShowRenameDialog(false);\n              setselectedFile(undefined);\n            }}\n          />\n        )}\n      </Grid>\n      {/** Preview */}\n      <Popper open={Boolean(previewAnchor)} anchorEl={previewAnchor}>\n        {onHoverFile && (\n          <Card style={{ padding: 10 }}>\n            {isImage(onHoverFile.filename) && (\n              <CardMedia\n                style={{ height: 140, width: 140 }}\n                image={onHoverFile.file}\n              />\n            )}\n            {isVideo(onHoverFile.filename) ? (\n              onHoverFile.cover ? (\n                <CardActionArea>\n                  <CardMedia\n                    style={{ height: 140, width: 140 }}\n                    image={onHoverFile.cover}\n                  />\n                  <CardContent> {formatBytes(onHoverFile.size)}</CardContent>\n                </CardActionArea>\n              ) : (\n                <div>\n                  {onHoverFile.filename} - {formatBytes(onHoverFile.size)}\n                </div>\n              )\n            ) : (\n              <div>\n                {onHoverFile.filename} - {formatBytes(onHoverFile.size)}\n              </div>\n            )}\n          </Card>\n        )}\n      </Popper>\n      {/** end preview */}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport List from \"@material-ui/core/List\";\nimport { FixedSizeList } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { Icon, Grid, Item } from \"semantic-ui-react\";\nimport {\n  ListItem,\n  ListItemText,\n  LinearProgress,\n  Box,\n  Typography\n} from \"@material-ui/core\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\n\nexport default function UploadFilesSideBar() {\n  const { uploadFiles, uploadInfo, uploadedFiles } = useContext(\n    HomePageContext\n  );\n  const { systemInfo } = useContext(SystemContext);\n  let filtedFiles = uploadFiles\n    ? uploadFiles.filter(f => !uploadedFiles.includes(f))\n    : [];\n\n  return (\n    <List style={{ overflowY: \"hidden\", height: \"100%\", overflowX: \"hidden\" }}>\n      {systemInfo && (\n        <Grid>\n          <Grid.Row style={{ height: 40 }}>\n            <Grid.Column width={8}>\n              <div>CPU</div>\n              <LinearProgress\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={systemInfo.cpu}\n              />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <div>Memory</div>\n              <LinearProgress\n                title=\"Memory\"\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={(systemInfo.memory.used / systemInfo.memory.total) * 100}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )}\n      <AutoSizer>\n        {({ height, width }) => (\n          <FixedSizeList\n            height={height - 100}\n            itemCount={Math.min(3000, filtedFiles.length)}\n            itemSize={80}\n            width={width}\n          >\n            {({ index, style }) => (\n              <ListItem key={`upload-${index}`} style={style}>\n                <ListItemIcon>\n                  <Icon name=\"file\" />\n                </ListItemIcon>\n                <ListItemText\n                  primary={filtedFiles[index].name}\n                  secondary={\n                    <LinearProgress\n                      color=\"secondary\"\n                      variant={\n                        uploadInfo && uploadInfo.currentIndex === index\n                          ? \"determinate\"\n                          : \"indeterminate\"\n                      }\n                      value={\n                        uploadInfo && uploadInfo.currentIndex === index\n                          ? uploadInfo.progress\n                          : undefined\n                      }\n                    />\n                  }\n                />\n              </ListItem>\n            )}\n          </FixedSizeList>\n        )}\n      </AutoSizer>\n      {uploadFiles === undefined && (\n        <Grid centered verticalAlign=\"middle\">\n          <div style={{ marginTop: \"50px\", marginBottom: \"auto\" }}>\n            No Pending Uploads\n          </div>\n        </Grid>\n      )}\n    </List>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  fade,\n  InputBase,\n  MenuList,\n  Popper,\n  Paper,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../../models/Folder\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popper: {\n      marginTop: 10,\n      marginRight: 15,\n      width: \"40ch\",\n      maxHeight: 400,\n      overflow: \"auto\"\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport default function SearchField() {\n  const classes = useStyles();\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [value, setValue] = useState(\"\");\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        {isLoading ? (\n          <CircularProgress size={20} color=\"inherit\" />\n        ) : (\n          <SearchIcon />\n        )}\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput\n        }}\n        inputProps={{ \"aria-label\": \"search\" }}\n        onClick={e => setAnchorEl(e.currentTarget)}\n        onChange={async e => {\n          let keyword = e.target.value;\n          setValue(keyword);\n        }}\n        onKeyDown={async e => {\n          if (e.key === \"Enter\") {\n            setIsLoading(true);\n            await nas.search(value);\n            update();\n            setIsLoading(false);\n          }\n        }}\n      />\n\n      <Popper open={Boolean(anchorEl)} anchorEl={anchorEl}>\n        <ClickAwayListener onClickAway={handleClose}>\n          <Paper className={classes.popper}>\n            {nas.searchedFiles.length === 0 && (\n              <MenuItem>No File. Press Enter to search</MenuItem>\n            )}\n            {nas.searchedFiles.map(f => (\n              <MenuItem\n                key={f.id}\n                onClick={() => {\n                  window.location.href = `#/home/${f.parent}`;\n                  handleClose();\n                }}\n              >\n                {path.basename(f.filename)}\n              </MenuItem>\n            ))}\n          </Paper>\n        </ClickAwayListener>\n      </Popper>\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport Header from \"./components/others/Header\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport ListPanel from \"./components/folders/ListFolderPanel\";\nimport { Segment, Grid } from \"semantic-ui-react\";\nimport NasMenus from \"./components/others/NasMenu\";\nimport ComputerStatus from \"./components/others/ComputerStatus\";\nimport ListFilesPanel from \"./components/files/ListFilesPanel\";\nimport { HomePageContext } from \"../../models/HomeContext\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport UploadFilesSideBar from \"./components/files/UploadFilesSideBar\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport {\n  Menu,\n  Hidden,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n  Typography,\n  InputBase,\n  createMuiTheme,\n  ThemeProvider,\n  Tooltip,\n  MenuItem\n} from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport SearchField from \"./components/files/SearchField\";\nimport { NavLink } from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fafafa\"\n    }\n  }\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\"\n      }\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport function HomePage() {\n  const { nas, isLoading, update } = useContext(HomePageContext);\n  const [show, setShow] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div\n        id=\"home\"\n        style={{\n          height: \"100%\",\n          overflow: \"hidden\"\n        }}\n      >\n        {/** App Bar */}\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Hidden mdUp>\n              <IconButton\n                className={classes.menuButton}\n                color=\"inherit\"\n                onClick={() => {\n                  setShow(true);\n                }}\n              >\n                <MenuIcon />\n              </IconButton>\n            </Hidden>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Django Nas\n            </Typography>\n            <Tooltip title=\"Open Music App\">\n              <IconButton onClick={e => setAnchorEl(e.currentTarget)}>\n                <OpenInNewIcon />\n              </IconButton>\n            </Tooltip>\n            <SearchField />\n          </Toolbar>\n        </AppBar>\n        {/** End App Bar */}\n        {/** drawer */}\n        <Drawer open={show} onClose={() => setShow(false)}>\n          <div style={{ width: 300, height: \"100%\" }}>\n            <ListPanel />\n          </div>\n        </Drawer>\n        {/** end drawer */}\n        <Segment\n          loading={isLoading}\n          style={{\n            height: \"100%\",\n            margin: 0\n          }}\n        >\n          <Grid\n            style={{\n              height: \"100%\",\n              overflow: \"hidden\",\n              position: \"relative\"\n            }}\n          >\n            <Grid.Row\n              style={{ height: \"100%\", paddingTop: 0, paddingBottom: 0 }}\n            >\n              {/** left side */}\n              <Hidden smDown implementation=\"js\">\n                <Grid.Column\n                  computer={3}\n                  style={{ height: \"100%\", backgroundColor: \"#fcfcfc\" }}\n                >\n                  <ContextMenuTrigger id=\"folder\">\n                    <Grid.Row style={{ height: \"92%\" }}>\n                      <ListPanel />\n                    </Grid.Row>\n                    <Grid.Row>\n                      <ComputerStatus />\n                    </Grid.Row>\n                  </ContextMenuTrigger>\n                </Grid.Column>\n              </Hidden>\n              {/** end left */}\n              <Grid.Column\n                computer={10}\n                mobile={16}\n                tablet={16}\n                style={{ height: \"100%\" }}\n              >\n                <ContextMenuTrigger id=\"files\">\n                  <ListFilesPanel />\n                </ContextMenuTrigger>\n              </Grid.Column>\n              {/** right side */}\n              <Hidden smDown implementation=\"js\">\n                <Grid.Column\n                  computer={3}\n                  style={{\n                    height: \"100%\",\n                    backgroundColor: \"#fcfcfc\"\n                  }}\n                >\n                  <UploadFilesSideBar />\n                </Grid.Column>\n              </Hidden>\n              {/** end right side */}\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        <NasMenus />\n        <Menu\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={() => setAnchorEl(null)}\n        >\n          <NavLink to=\"/music\">\n            <MenuItem>Open Music</MenuItem>\n          </NavLink>\n          <NavLink to=\"/book\">\n            <MenuItem>Open Book</MenuItem>\n          </NavLink>\n        </Menu>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  Cell\n} from \"recharts\";\nimport { Segment } from \"semantic-ui-react\";\n\ninterface Props {\n  title: string;\n  used: number;\n  total: number;\n  color: string;\n  color2: string;\n}\nconst data02 = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\nexport default function PercentageChart(props: Props) {\n  const { title, used, total, color, color2 } = props;\n  let data = [\n    {\n      name: \"Used\",\n      value: used\n    },\n    { name: \"Available\", value: total - used }\n  ];\n\n  return (\n    <Segment>\n      <ResponsiveContainer\n        minHeight={300}\n        height=\"100%\"\n        width=\"100%\"\n        minWidth={200}\n      >\n        <PieChart>\n          <Pie\n            data={data}\n            dataKey=\"value\"\n            label\n            fill={color}\n            isAnimationActive={false}\n          >\n            <Cell fill={color}></Cell>\n            <Cell fill={color2}></Cell>\n          </Pie>\n\n          <Tooltip></Tooltip>\n        </PieChart>\n      </ResponsiveContainer>\n      <span>{title}</span>\n    </Segment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Container, Grid, Segment } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../models/SystemContext\";\nimport PercentageChart from \"./PercentageChart\";\n\nexport default function SystemInfoPage() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return <div>Infomation Not Available</div>;\n  }\n\n  return (\n    <div id=\"home\" style={{ width: \"100%\", color: \"black\" }}>\n      <Container>\n        <h1>System Info</h1>\n        <Grid columns={2}>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.disk.used / 1024 / 1024)}\n              total={Math.round(systemInfo.disk.total / 1024 / 1024)}\n              title=\"Disk(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.memory.used / 1024 / 1024)}\n              total={Math.round(systemInfo.memory.total / 1024 / 1024)}\n              title=\"Memory(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={systemInfo.cpu}\n              total={100}\n              title=\"CPU Usage(Percentage)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Temperature</h4>\n              <h1>\n                {systemInfo.temperature\n                  ? systemInfo.temperature.toFixed(1)\n                  : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Humidity</h4>\n              <h1>\n                {systemInfo.humidity ? systemInfo.humidity.toFixed(1) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Pressure</h4>\n              <h1>\n                {systemInfo.pressure ? systemInfo.pressure.toFixed(2) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\nimport * as path from \"path\";\n//@ts-ignore\nimport { MarkdownToQuill } from \"md-to-quill-delta\";\nconst QuillDeltaToHtmlConverter = require(\"quill-delta-to-html\")\n  .QuillDeltaToHtmlConverter;\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface DocumentContext {\n  nas: Nas;\n  isLoading: boolean;\n  errorMsg?: string;\n  currentDocument?: NasDocument;\n  update(): void;\n  updateDocument(doc: NasDocument): void;\n  saveDocument(): Promise<void>;\n  saveToLocal(savingType: \"html\" | \"pdf\"): Promise<void>;\n  oepnFromLocal(): Promise<void>;\n  newDocument(name: string): Promise<void>;\n}\n\ninterface DocumentProps extends RouteComponentProps<RouterProps> {}\n\nexport class DocumentProvider extends Component<\n  DocumentProps,\n  DocumentContext\n> {\n  constructor(props: DocumentProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      isLoading: false,\n      update: this.update,\n      updateDocument: this.update,\n      saveDocument: this.saveDocument,\n      saveToLocal: this.saveToLocal,\n      oepnFromLocal: this.openFromLocal,\n      newDocument: this.newDocument\n    };\n  }\n\n  async componentDidUpdate(oldProps: DocumentProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      if (id) {\n        await this.fetch(id);\n      }\n    }\n  }\n\n  updateDocument = (doc: NasDocument) => {\n    this.setState({ currentDocument: doc });\n  };\n\n  saveDocument = async () => {\n    try {\n      let doc = this.state.currentDocument;\n      if (doc) {\n        this.setState({ isLoading: true });\n        await this.state.nas.updateDocument(doc.id, doc.name, doc.content);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to save\" });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 1000);\n\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  newDocument = async (name: string) => {};\n\n  readFile = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onload = content => {\n        let text = reader.result;\n\n        resolve(text as string);\n      };\n      reader.readAsText(file);\n    });\n  };\n\n  openFromLocal = async () => {\n    const { currentDocument, nas } = this.state;\n    try {\n      let input =\n        (document.getElementById(\"new file\") as HTMLInputElement) ??\n        document.createElement(\"input\");\n      input.id = \"new file\";\n      input.type = \"file\";\n      input.accept = \".md,.html\";\n      input.multiple = false;\n      input.click();\n      input.addEventListener(\"change\", async e => {\n        this.setState({\n          isLoading: true,\n          errorMsg: \"Reading Local Document...\"\n        });\n        let files = input.files;\n        if (files) {\n          let file = files[0];\n          let ext = path.extname(file.name);\n          if (ext === \".md\") {\n            const converter = new MarkdownToQuill();\n            let content = await this.readFile(file);\n            let delta = converter.convert(content);\n            this.setState({ errorMsg: \"Creating New Document\" });\n            let d = await nas.createNewDocument(\n              file.name,\n              { ops: delta } as any,\n              currentDocument?.parent\n            );\n            this.setState({\n              errorMsg: \"Document Created. Preparing for redirecting\"\n            });\n            setTimeout(() => {\n              this.setState({ isLoading: false, errorMsg: undefined });\n              window.location.href = \"#/document/\" + d.id;\n            }, 1500);\n          }\n        }\n        input.remove();\n      });\n    } catch (err) {\n      this.setState({ errorMsg: \"Unable to open file\", isLoading: false });\n    }\n  };\n\n  saveToLocal = async (savingType: \"html\" | \"pdf\") => {\n    let doc = this.state.currentDocument;\n    if (doc) {\n      switch (savingType) {\n        case \"html\":\n          let converter = new QuillDeltaToHtmlConverter(doc.content);\n          let html = converter.convert();\n          break;\n      }\n    }\n  };\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    if (id) {\n      await this.fetch(id);\n    }\n  }\n\n  fetch = async (id: string) => {\n    try {\n      this.setState({ isLoading: true });\n      let document = await this.state.nas.getDocument(id);\n      setTimeout(() => {\n        this.setState({ currentDocument: document });\n      }, 400);\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to open\" });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 500);\n      this.setState({ currentDocument: undefined });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <DocumentContext.Provider value={this.state}>\n        {this.props.children}\n      </DocumentContext.Provider>\n    );\n  }\n}\n\n//@ts-ignore\nconst context: DocumentContext = {\n  nas: new Nas(),\n  update: () => {},\n  updateDocument: (d: NasDocument) => {},\n  saveDocument: () => {\n    return Promise.resolve();\n  },\n  oepnFromLocal: () => {\n    return Promise.resolve();\n  },\n  newDocument: () => {\n    return Promise.resolve();\n  },\n  saveToLocal: () => {\n    return Promise.resolve();\n  },\n  isLoading: false\n};\n\nexport const DocumentContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport AutosizeInput from \"react-input-autosize\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  Popper,\n  ClickAwayListener,\n  Paper,\n  Fade,\n  Slide,\n  Collapse\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/Folder\";\nimport MoveDialog from \"./MoveDialog\";\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"18px\",\n    paddingTop: 5\n  },\n  button: {\n    padding: \"0px 5px\"\n  }\n}));\n\nexport default function Titlebar() {\n  const {\n    currentDocument,\n    updateDocument,\n    saveDocument,\n    isLoading,\n    nas,\n    update\n  } = useContext(DocumentContext);\n\n  const [anchorEl, setAnchorEl] = React.useState<undefined | HTMLElement>();\n  const [numChanges, setNumChanges] = useState(0);\n  const classes = useStyles();\n\n  if (currentDocument === undefined && !isLoading) {\n    return (\n      <div>\n        <AutosizeInput\n          id=\"test-input\"\n          className={classes.notchedOutline}\n          style={{\n            maxWidth: window.innerWidth * 0.8\n          }}\n          value={\"Cannot fetch document\"}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ marginTop: 15, marginLeft: 5 }}>\n      <Collapse in={isLoading && !currentDocument} unmountOnExit mountOnEnter>\n        <div style={{ height: 24, width: 100 }}>\n          <LinearProgress\n            variant=\"indeterminate\"\n            style={{ marginTop: 15, width: 100 }}\n          />\n        </div>\n      </Collapse>\n      <Collapse\n        in={!isLoading || currentDocument !== undefined}\n        mountOnEnter\n        unmountOnExit\n      >\n        <div>\n          <Tooltip title=\"Rename\">\n            <ClickAwayListener\n              onClickAway={async () => {\n                if (numChanges > 0) {\n                  await saveDocument();\n                  setNumChanges(0);\n                }\n              }}\n            >\n              <AutosizeInput\n                id=\"test-input\"\n                className={classes.notchedOutline}\n                style={{\n                  maxWidth: window.innerWidth * 0.8\n                }}\n                value={currentDocument?.name}\n                onChange={e => {\n                  if (currentDocument) {\n                    currentDocument.name = e.target.value;\n                    setNumChanges(numChanges + 1);\n                    updateDocument(currentDocument);\n                  }\n                }}\n              />\n            </ClickAwayListener>\n          </Tooltip>\n          <Tooltip title=\"Move\">\n            <IconButton\n              className={classes.button}\n              onClick={async e => {\n                setAnchorEl(e.currentTarget);\n                if (currentDocument) {\n                  await nas.getContent(currentDocument.parent as number);\n                }\n\n                update();\n              }}\n            >\n              <FolderIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </Collapse>\n\n      {anchorEl && (\n        <ClickAwayListener onClickAway={() => setAnchorEl(undefined)}>\n          <Popper\n            open={Boolean(anchorEl)}\n            anchorEl={anchorEl}\n            style={{ zIndex: 2000 }}\n            placement=\"right-end\"\n          >\n            {currentDocument && (\n              <MoveDialog\n                currentFile={currentDocument}\n                onClose={() => setAnchorEl(undefined)}\n                onMove={async (file: NasDocument, dest) => {\n                  await nas.moveDocument(file.id, dest.id);\n                  currentDocument.parent = dest.id;\n                  updateDocument(currentDocument);\n                }}\n              />\n            )}\n          </Popper>\n        </ClickAwayListener>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport FormatBoldIcon from \"@material-ui/icons/FormatBold\";\nimport FormatItalicIcon from \"@material-ui/icons/FormatItalic\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\nimport {\n  IconButton,\n  makeStyles,\n  Theme,\n  createStyles,\n  withStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    divider: {\n      height: \"10px\",\n      borderLeft: \"6px solid black\"\n    }\n  })\n);\n\nconst StyledToggleButtonGroup = withStyles(theme => ({\n  grouped: {\n    margin: theme.spacing(0.5),\n    border: \"none\",\n    padding: theme.spacing(0, 1),\n    \"&:not(:first-child)\": {\n      borderRadius: theme.shape.borderRadius\n    },\n    \"&:first-child\": {\n      borderRadius: theme.shape.borderRadius\n    }\n  }\n}))(ToggleButtonGroup);\nexport default function ToolsBar() {\n  const classes = useStyles();\n  return (\n    <div id=\"toolbar\">\n      <span className=\"ql-formats\">\n        <select className=\"ql-size\">\n          <option value=\"small\"></option>\n          <option selected></option>\n          <option value=\"large\"></option>\n          <option value=\"huge\"></option>\n        </select>\n        <button type=\"button\" className=\"ql-italic\"></button>\n        <button type=\"button\" className=\"ql-underline\"></button>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-indent\" value=\"-1\"></button>\n          <button type=\"button\" className=\"ql-indent\" value=\"+1\"></button>\n          <select className=\"ql-align\">\n            <option value=\"center\"></option>\n            <option value=\"right\"></option>\n            <option value=\"justify\"></option>\n          </select>\n          <button type=\"button\" className=\"ql-direction\" value=\"rtl\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"ordered\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"bullet\"></button>\n        </span>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-image\"></button>\n          <button type=\"button\" className=\"ql-code-block\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"sub\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"super\"></button>\n          <button type=\"button\" className=\"ql-clean\"></button>\n        </span>\n      </span>\n    </div>\n  );\n}\n","import Parchment from \"parchment\";\nimport { Quill } from \"react-quill\";\n\nconst BlockEmbed = Quill.import('blots/block/embed') as { new(node: any, value: any): Object };\nexport class DividerBlot extends BlockEmbed {\n  static blotName = 'divider';\n  static tagName = 'hr';\n}\n","import React, { useContext, useState } from \"react\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  InputBase,\n  TextField,\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/Folder\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport { DividerBlot } from \"./blots/DividerBlot\";\n\nQuill.register(DividerBlot);\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"20px\"\n  }\n}));\n\nexport default function BodyEditor() {\n  const { currentDocument, updateDocument, saveDocument } = useContext(\n    DocumentContext\n  );\n  const [numChanges, setNumberOfChanges] = useState(0);\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n\n  const save = async () => {\n    if (currentDocument && editor) {\n      let data = editor.getEditor().getContents();\n      currentDocument.content = data;\n      updateDocument(currentDocument);\n      await saveDocument();\n      setNumberOfChanges(0);\n    }\n  };\n\n  const modules = {\n    toolbar: {\n      container: \"#toolbar\"\n    }\n  };\n\n  if (currentDocument === undefined) {\n    return (\n      <ReactQuill\n        style={{\n          height: \"100%\",\n          border: 0,\n          paddingBottom: \"85px\"\n        }}\n        modules={modules}\n      />\n    );\n  }\n\n  return (\n    <ClickAwayListener\n      onClickAway={async () => {\n        if (numChanges > 0) {\n          await save();\n        }\n      }}\n    >\n      <ReactQuill\n        ref={instance => setEditor(instance != null ? instance : undefined)}\n        onKeyDown={async () => {\n          setNumberOfChanges(numChanges + 1);\n          if (numChanges > 3) {\n            await save();\n          }\n        }}\n        onChange={async e => {}}\n        style={{ height: \"100%\", border: 0, paddingBottom: \"85px\" }}\n        defaultValue={currentDocument.content}\n        modules={modules}\n      />\n    </ClickAwayListener>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { Button, makeStyles, MenuItem, Menu } from \"@material-ui/core\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    padding: \"4px 6px\",\n    minWidth: \"40px\",\n    fontSize: \"14px\",\n    fontWeight: \"normal\",\n    textTransform: \"capitalize\"\n  },\n  menuItem: {\n    minWidth: 150\n  }\n}));\n\nexport default function MenuBar() {\n  const classes = useStyles();\n  const { isLoading, saveToLocal, oepnFromLocal } = React.useContext(\n    DocumentContext\n  );\n  const [fileEl, setfileEl] = React.useState<null | HTMLElement>(null);\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        size=\"small\"\n        onClick={e => setfileEl(e.currentTarget)}\n      >\n        File\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Edit\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Settings\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Tools\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Help\n      </Button>\n      <span\n        style={{ textDecoration: \"underline\", color: \"grey\", marginLeft: 20 }}\n      >\n        {isLoading ? \"Commnucating with server\" : \"All changes saved in Drive\"}\n      </span>\n      <Menu\n        anchorEl={fileEl}\n        keepMounted\n        open={Boolean(fileEl)}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        onClose={() => {\n          setfileEl(null);\n        }}\n      >\n        <MenuItem\n          onClick={async () => {\n            await oepnFromLocal();\n            setfileEl(null);\n          }}\n        >\n          Open\n        </MenuItem>\n        <NestedMenuItem\n          label=\"Download\"\n          parentMenuOpen={Boolean(fileEl)}\n          className={classes.menuItem}\n        >\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"pdf\");\n              setfileEl(null);\n            }}\n          >\n            PDF Document (.pdf){\" \"}\n          </MenuItem>\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"html\");\n              setfileEl(null);\n            }}\n          >\n            Web Page (.html){\" \"}\n          </MenuItem>\n        </NestedMenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile,\n  BookCollection\n} from \"./Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\nimport * as path from \"path\";\nimport Axios from \"axios\";\nimport { bookCollectionURL, documentURL } from \"./urls\";\n\ninterface BookContext {\n  nas: Nas;\n  isLoading: boolean;\n  errorMsg?: string;\n  books: BookCollection[];\n  currentBook?: BookCollection;\n  fetchBookDetail(id: number): Promise<BookCollection | undefined>;\n  deleteDocument(id: number): Promise<void>;\n  moveDocumentTo(doc: NasDocument, dest: BookCollection): Promise<void>;\n  createDocument(title: string, dest: BookCollection): Promise<void>;\n  addNewBook(title: string, desc: string): Promise<void>;\n  updateBook(title: string, desc: string): Promise<void>;\n  deleteBook(book: BookCollection): Promise<void>;\n  onCloseDetailDialog(): void;\n}\n\ninterface BookProps {}\n\nexport class BookProvider extends Component<BookProps, BookContext> {\n  constructor(props: BookProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      isLoading: false,\n      books: [],\n      deleteBook: this.deleteBook,\n      addNewBook: this.addNewBook,\n      updateBook: this.updateBook,\n      createDocument: this.createDocument,\n      moveDocumentTo: this.moveDocumentTo,\n      deleteDocument: this.deleteDocument,\n      fetchBookDetail: this.fetchBookDetail,\n      onCloseDetailDialog: this.onCloseDetailDialog\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetch();\n  }\n\n  fetch = async () => {\n    this.setState({ isLoading: true });\n    try {\n      let response = await Axios.get<BookCollection[]>(bookCollectionURL);\n      this.setState({ books: response.data });\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 300);\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  onCloseDetailDialog = () => {\n    this.setState({ currentBook: undefined });\n  };\n\n  fetchBookDetail = async (\n    id: number,\n    showLoading = true\n  ): Promise<BookCollection | undefined> => {\n    try {\n      if (showLoading) {\n        this.setState({ isLoading: true });\n      }\n\n      let response = await Axios.get<BookCollection>(\n        `${bookCollectionURL}${id}/`\n      );\n      this.setState({ currentBook: response.data });\n      return response.data;\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 300);\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n    return;\n  };\n\n  deleteDocument = async (id: number): Promise<void> => {\n    try {\n      let response = await Axios.delete(`${documentURL}${id}/`);\n      if (this.state.currentBook) {\n        await this.fetchBookDetail(this.state.currentBook.id, false);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n  moveDocumentTo = async (\n    doc: NasDocument,\n    dest: BookCollection\n  ): Promise<void> => {\n    try {\n      let resp = await Axios.patch(`${documentURL}${doc.id}/`, {\n        collection: dest.id\n      });\n      if (this.state.currentBook) {\n        await this.fetchBookDetail(this.state.currentBook?.id, false);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  createDocument = async (\n    title: string,\n    dest: BookCollection\n  ): Promise<void> => {\n    try {\n      let response = await Axios.post(`${documentURL}/`, {\n        collection: dest.id,\n        name: title,\n        show_in_folder: false\n      });\n      if (this.state.currentBook) {\n        await this.fetchBookDetail(this.state.currentBook.id, false);\n      }\n    } catch (err) {\n      console.log(err);\n      this.setState({ errorMsg: err });\n    }\n  };\n  addNewBook = async (title: string, desc: string): Promise<void> => {\n    try {\n      let response = await Axios.post(`${bookCollectionURL}`, {\n        name: title,\n        description: desc\n      });\n      await this.fetch();\n    } catch (err) {\n      console.log(err);\n      this.setState({ errorMsg: err });\n    }\n  };\n  updateBook = async (title: string, desc: string): Promise<void> => {\n    try {\n      if (this.state.currentBook) {\n        let response = await Axios.patch(\n          `${bookCollectionURL}${this.state.currentBook.id}/`,\n          {\n            name: title,\n            description: desc\n          }\n        );\n        await this.fetchBookDetail(this.state.currentBook.id, false);\n      }\n    } catch (err) {\n      console.log(err);\n      this.setState({ errorMsg: err });\n    }\n  };\n  deleteBook = async (book: BookCollection): Promise<void> => {\n    try {\n      let response = await Axios.delete(`${bookCollectionURL}/${book.id}/`);\n      await this.fetch();\n    } catch (err) {\n      console.log(err);\n      this.setState({ errorMsg: err });\n    }\n  };\n\n  render() {\n    return (\n      <BookContext.Provider value={this.state}>\n        {this.props.children}\n      </BookContext.Provider>\n    );\n  }\n}\n\n//@ts-ignore\nconst context: BookContext = {};\n\nexport const BookContext = React.createContext(context);\n","import React from \"react\";\nimport {\n  Document as NasDocument,\n  BookCollection\n} from \"../../../../models/Folder\";\nimport { BookContext } from \"../../../../models/BookContext\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  DialogActions,\n  LinearProgress,\n  Collapse\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  onClose(id?: BookCollection): Promise<void>;\n  currentDoc?: NasDocument;\n}\n\nexport default function MoveBookDialog(props: Props) {\n  const { open, onClose, currentDoc } = props;\n  const { books } = React.useContext(BookContext);\n  const [selectedId, setSelectedId] = React.useState<number | undefined>(\n    currentDoc?.collection\n  );\n  console.log(currentDoc);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle>Move Document to Collection </DialogTitle>\n      <DialogContent>\n        <Collapse in={isLoading} mountOnEnter unmountOnExit>\n          <LinearProgress />\n        </Collapse>\n\n        <FormControl fullWidth>\n          <InputLabel>Book Collections</InputLabel>\n          <Select\n            value={selectedId}\n            onChange={e => {\n              setSelectedId(e.target.value as number);\n            }}\n          >\n            {books.map((b, i) => (\n              <MenuItem key={`book-selection-${i}`} value={b.id}>\n                {b.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={async () => {\n            setIsLoading(true);\n            await onClose();\n            setIsLoading(false);\n          }}\n        >\n          Close\n        </Button>\n        <Button\n          onClick={async () => {\n            setIsLoading(true);\n            if (selectedId) {\n              const book = books.filter(b => b.id === selectedId);\n              if (book.length > 0) {\n                await onClose(book[0]);\n              }\n            }\n\n            setIsLoading(false);\n          }}\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport {\n  Document as NasDocument,\n  BookCollection\n} from \"../../../../models/Folder\";\nimport { BookContext } from \"../../../../models/BookContext\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  DialogActions,\n  LinearProgress,\n  Collapse,\n  TextField\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  onClose(name?: string, description?: string): Promise<void>;\n}\n\nexport default function UpdateCollectionDialog(props: Props) {\n  const { open, onClose } = props;\n  const { books, currentBook } = React.useContext(BookContext);\n  const [name, setname] = React.useState<string | undefined>(currentBook?.name);\n  const [description, setdescription] = React.useState<string | undefined>(\n    currentBook?.description\n  );\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle>Update collection info </DialogTitle>\n      <DialogContent>\n        <Collapse in={isLoading} mountOnEnter unmountOnExit>\n          <LinearProgress />\n        </Collapse>\n        <TextField\n          onChange={e => setname(e.target.value)}\n          value={name}\n          label=\"Name\"\n          title=\"Name\"\n          fullWidth\n        />\n        <TextField\n          value={description}\n          label=\"Description\"\n          title=\"Description\"\n          fullWidth\n          multiline\n          onChange={e => setdescription(e.target.value)}\n          rows={4}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={async () => {\n            setIsLoading(true);\n            await onClose();\n            setIsLoading(false);\n          }}\n        >\n          Close\n        </Button>\n        <Button\n          onClick={async () => {\n            setIsLoading(true);\n            await onClose(name, description);\n            setIsLoading(false);\n          }}\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport {\n  BookCollection,\n  Document as NasDocument,\n  Folder\n} from \"../../../../models/Folder\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n  List,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  CircularProgress,\n  LinearProgress,\n  Collapse,\n  Typography,\n  Tooltip,\n  AppBar,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n  Divider\n} from \"@material-ui/core\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { DialogTitle, Toolbar } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport FlipToFrontIcon from \"@material-ui/icons/FlipToFront\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { BookContext } from \"../../../../models/BookContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Container } from \"semantic-ui-react\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoveBookDialog from \"../../../book/components/dialog/MoveBookDialog\";\nimport UpdateCollectionDialog from \"../../../book/components/dialog/UpdateCollectionDialog\";\n\ninterface Props {\n  book: BookCollection;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\"\n      }\n    }\n  })\n);\n\nexport default function BookDrawer() {\n  const classes = useStyles();\n\n  const {\n    deleteDocument,\n    moveDocumentTo,\n    createDocument,\n    updateBook,\n    currentBook,\n    deleteBook\n  } = React.useContext(BookContext);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [currentDoc, setCurrentDoc] = React.useState<NasDocument>();\n  const [showEditDialog, setShowEditDialog] = React.useState(false);\n\n  return (\n    <div style={{ width: 350 }}>\n      <div style={{ marginLeft: 20, marginTop: 30, marginBottom: 30 }}>\n        <Typography variant=\"h5\">\n          {currentBook?.name}\n          <IconButton\n            onClick={() => {\n              setShowEditDialog(true);\n            }}\n          >\n            <EditIcon />\n          </IconButton>\n        </Typography>\n        <Divider />\n        <Typography variant=\"subtitle2\" style={{ color: \"#b5b5b5\" }}>\n          {currentBook?.description}\n        </Typography>\n      </div>\n\n      <Collapse mountOnEnter unmountOnExit in={isLoading}>\n        <LinearProgress />\n      </Collapse>\n      <List>\n        {currentBook?.documents?.map((d, i) => (\n          <ListItem\n            button\n            key={`document-${i}`}\n            onClick={() => {\n              window.location.href = \"#/document/\" + d.id;\n            }}\n          >\n            <ListItemIcon>\n              <BookIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <Tooltip title={d.name}>\n                  <Typography style={{ maxWidth: 150 }} noWrap>\n                    {d.name}\n                  </Typography>\n                </Tooltip>\n              }\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                onClick={async () => {\n                  let confirm = window.confirm(\n                    \"Do you want to delete this document?\"\n                  );\n                  if (confirm) {\n                    setIsLoading(true);\n                    await deleteDocument(d.id);\n                    setTimeout(() => {\n                      setIsLoading(false);\n                    }, 300);\n                  }\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n              <IconButton\n                onClick={() => {\n                  setCurrentDoc(d);\n                }}\n              >\n                <FlipToFrontIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n        <Button\n          style={{ width: \"100%\", padding: 20 }}\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={async () => {\n            if (currentBook) {\n              await createDocument(\"unnamed document\", currentBook);\n            }\n          }}\n        >\n          Add New Document\n        </Button>\n      </List>\n\n      {currentDoc && (\n        <MoveBookDialog\n          open={Boolean(currentDoc)}\n          onClose={async target => {\n            setCurrentDoc(undefined);\n            if (target) {\n              await moveDocumentTo(currentDoc, target);\n            }\n          }}\n          currentDoc={currentDoc}\n        />\n      )}\n\n      {currentBook && (\n        <UpdateCollectionDialog\n          open={showEditDialog}\n          onClose={async (name, desc) => {\n            if (name && desc) {\n              await updateBook(name, desc);\n            }\n            setShowEditDialog(false);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button, Grid, Divider } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Backdrop,\n  CircularProgress,\n  Card,\n  AppBar,\n  Toolbar,\n  createMuiTheme,\n  ThemeProvider,\n  IconButton,\n  makeStyles,\n  Container,\n  Paper,\n  Snackbar,\n  Tooltip,\n  Fab,\n  Drawer,\n  Collapse\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../models/DocumentContext\";\nimport Titlebar from \"./components/Titlebar\";\nimport ToolsBar from \"./components/ToolsBar\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport BodyEditor from \"./components/BodyEditor\";\nimport \"../../../document.css\";\nimport { NavLink } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuBar from \"./components/MenuBar\";\nimport BookDrawer from \"./components/book/BookDrawer\";\nimport { BookContext } from \"../../models/BookContext\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: \"#ffffff\"\n    },\n    primary: {\n      main: \"#00b2ff\"\n    }\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  appbar: {\n    height: \"90px\"\n  },\n  container: {\n    paddingTop: \"95px\",\n    height: \"100%\"\n  },\n  row: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  largeIcon: {\n    width: 40,\n    height: 40\n  },\n  menuIcon: {\n    position: \"fixed\",\n    top: 100,\n    left: 30\n  }\n}));\n\nexport default function DocumentEditor() {\n  const { currentDocument, isLoading, errorMsg } = useContext(DocumentContext);\n  const { fetchBookDetail } = useContext(BookContext);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <AppBar elevation={0} className={classes.appbar} color=\"secondary\">\n          <Toolbar>\n            <Tooltip title=\"Back\">\n              <NavLink to={`/home/${currentDocument?.parent ?? \"\"}`}>\n                <DescriptionIcon\n                  className={classes.largeIcon}\n                  fontSize=\"large\"\n                  color=\"primary\"\n                />\n              </NavLink>\n            </Tooltip>\n            <Grid style={{ marginLeft: 10 }}>\n              <Grid.Row style={{ padding: 0 }}>\n                <Titlebar />\n              </Grid.Row>\n              <Grid.Row style={{ paddingTop: 0, paddingBottom: 0 }}>\n                <MenuBar />\n              </Grid.Row>\n              <Grid.Row style={{ padding: 0 }}>\n                {currentDocument && <ToolsBar />}\n              </Grid.Row>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Container id=\"container\" className={classes.container}>\n          {currentDocument && (\n            <Paper\n              style={{ height: \"100%\", minHeight: window.innerHeight - 95 }}\n              square\n            >\n              <BodyEditor />\n            </Paper>\n          )}\n        </Container>\n        <Drawer\n          open={openDrawer}\n          onClose={() => {\n            setOpenDrawer(false);\n          }}\n        >\n          <BookDrawer />\n        </Drawer>\n        <Collapse in={currentDocument?.show_in_folder === false}>\n          <Tooltip title=\"Show Index\">\n            <Fab\n              className={classes.menuIcon}\n              onClick={async () => {\n                if (currentDocument) {\n                  console.log(currentDocument);\n                  await fetchBookDetail(currentDocument?.collection);\n                  setOpenDrawer(true);\n                }\n              }}\n            >\n              <MenuIcon />\n            </Fab>\n          </Tooltip>\n        </Collapse>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={errorMsg !== undefined}\n          message={errorMsg}\n        />\n        <Backdrop\n          open={isLoading && currentDocument === undefined}\n          style={{\n            zIndex: 1,\n            color: \"#fff\"\n          }}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile,\n  PaginationResponse\n} from \"./Folder\";\nimport Axios from \"axios\";\nimport * as mm from \"music-metadata-browser\";\nimport { musicURL, musicMetadataURL } from \"./urls\";\nimport queryString from \"query-string\";\nimport { MusicMetadata } from \"./Folder\";\n//@ts-ignore\nconst readMusicTag = async (musicSrc: string): Promise<mm.IAudioMetadata> => {\n  const metadata = await mm.fetchFromUrl(musicSrc);\n  return metadata;\n};\ninterface MusicContext {\n  nas: Nas;\n  filterField?: string;\n  isLoading: boolean;\n  errorMsg?: string;\n  currentTabIndex: number;\n  update(): void;\n  currentTag?: mm.IAudioMetadata;\n  currentMusic?: NasFile;\n  musicResponse?: PaginationResponse<NasFile>;\n  paginationURL: string;\n  albums: MusicMetadata[];\n  artists: MusicMetadata[];\n  artistDetail: MusicMetadata[];\n  isSearching: boolean;\n  updateMetadata(): Promise<void>;\n  play(music: NasFile): Promise<void>;\n  stop(): void;\n  fetch(url: string): Promise<void>;\n  search(k: string): Promise<void>;\n  setTabIndex(index: number): Promise<void>;\n  getAlbumsByArtist(artist: string): Promise<void>;\n  presslike(file: NasFile): Promise<void>;\n}\n\ninterface RouterProps {\n  artist?: string;\n  album?: string;\n}\n\ninterface MusicProps extends RouteComponentProps<RouterProps> {}\n\nexport class MusicProvider extends Component<MusicProps, MusicContext> {\n  constructor(props: MusicProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      paginationURL: musicURL,\n      isLoading: false,\n      currentTabIndex: 0,\n      artistDetail: [],\n      albums: [],\n      artists: [],\n      isSearching: false,\n      update: this.update,\n      play: this.play,\n      stop: this.stop,\n      fetch: this.fetch,\n      search: this.search,\n      updateMetadata: this.updateMetadata,\n      setTabIndex: this.setTabIndex,\n      getAlbumsByArtist: this.getAlbumsByArtist,\n      presslike: this.presslike\n    };\n  }\n\n  async componentDidUpdate(oldProps: MusicProps) {\n    if (\n      this.props.location.search !== oldProps.location.search &&\n      !this.state.isSearching\n    ) {\n      console.log(\"update\");\n      await this.init();\n    }\n  }\n\n  async componentDidMount() {\n    console.log(\"init\");\n    await this.init();\n  }\n\n  getAlbumsByArtist = async (artist: string) => {\n    try {\n      let response = await Axios.get<MusicMetadata[]>(\n        `${musicURL}album/?artist=${artist}`\n      );\n      this.setState({ artistDetail: response.data });\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined, isLoading: false });\n      });\n    }\n  };\n\n  init = async () => {\n    this.setState({ isLoading: true, errorMsg: \"Loading Music Library\" });\n    const values: RouterProps = queryString.parse(this.props.location.search);\n    let musicList: any;\n    if (values.artist) {\n      musicList = await this.filterBy(\"artist\", values.artist);\n    } else if (values.album) {\n      musicList = await this.filterBy(\"album\", values.album);\n    } else {\n      musicList = await this.state.nas.fetchMusicList();\n      this.setState({ filterField: undefined });\n    }\n\n    this.setState({ musicResponse: musicList });\n    setTimeout(() => {\n      this.setState({ isLoading: false });\n    }, 400);\n    setTimeout(() => {\n      this.setState({ errorMsg: undefined });\n    }, 3000);\n  };\n\n  setTabIndex = async (index: number) => {\n    const prevIndex = this.state.currentTabIndex;\n    this.setState({ currentTabIndex: index, isLoading: true });\n    switch (index) {\n      case 1:\n        let albumResponse = await Axios.get(`${musicURL}album/`);\n        this.setState({ albums: albumResponse.data, isLoading: false });\n        break;\n      case 2:\n        let artistResonse = await Axios.get(`${musicURL}artist/`);\n        this.setState({ artists: artistResonse.data, isLoading: false });\n        break;\n\n      case 3:\n        await this.fetch(`${musicURL}?like=true/`);\n        break;\n\n      default:\n        if (prevIndex === 3) {\n          await this.init();\n        }\n        this.setState({ isLoading: false });\n    }\n  };\n\n  /**\n   * Get data filter by field with keyword\n   */\n  filterBy = async (field: string, keyword: string) => {\n    try {\n      this.setState({ filterField: keyword });\n      let response = await Axios.get(`${musicURL}?${field}=${keyword}`);\n      return response.data;\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    }\n  };\n\n  updateMetadata = async () => {\n    this.setState({\n      isLoading: true,\n      errorMsg: \"Updating music metadata... This may take while\"\n    });\n    try {\n      await Axios.patch(`${musicURL}`);\n      let response = await Axios.get<PaginationResponse<NasFile>>(musicURL);\n      this.setState({ musicResponse: response.data });\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      this.setState({ isLoading: false });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  search = async (keyword: string) => {\n    this.setState({ isSearching: true });\n    window.location.replace(\"#/music\");\n    this.setState({ isLoading: true });\n    try {\n      if (keyword === \"\") {\n        let musicList = await this.state.nas.fetchMusicList();\n        this.setState({\n          musicResponse: musicList,\n          isLoading: false,\n          paginationURL: musicURL\n        });\n      } else {\n        this.setState({ errorMsg: \"Searching \" + keyword });\n        let searchURL = `${musicURL}?search=${keyword}`;\n        let response = await Axios.get<PaginationResponse<NasFile>>(searchURL);\n        this.setState({\n          musicResponse: response.data,\n          paginationURL: searchURL,\n          isLoading: false,\n          filterField: undefined\n        });\n        setTimeout(() => {\n          this.setState({ errorMsg: undefined });\n        }, 3000);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      this.setState({ isSearching: false });\n    }\n  };\n\n  fetch = async (url: string) => {\n    try {\n      this.setState({ isLoading: true });\n      let response = await Axios.get<PaginationResponse<NasFile>>(url);\n      this.setState({ musicResponse: response.data });\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      this.setState({ isLoading: false });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 1000);\n    }\n  };\n\n  presslike = async (file: NasFile) => {\n    try {\n      if (file.music_metadata) {\n        let response = await Axios.patch(\n          `${musicMetadataURL}${file.music_metadata?.id}/`,\n          { like: !file.music_metadata?.like }\n        );\n        file.music_metadata.like = !file.music_metadata.like;\n        this.setState({ musicResponse: this.state.musicResponse });\n      }\n    } catch (err) {\n      this.setState({ errorMsg: err });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      });\n    }\n  };\n\n  play = async (music: NasFile) => {\n    this.setState({ currentMusic: music });\n  };\n\n  stop = async () => {\n    this.setState({ currentTag: undefined, currentMusic: undefined });\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <MusicContext.Provider value={this.state}>\n        {this.props.children}\n      </MusicContext.Provider>\n    );\n  }\n}\n\n//@ts-ignore\nconst context: MusicContext = {\n  nas: new Nas(),\n  update: () => {},\n  stop: () => {},\n  play: (music: NasFile) => {\n    return Promise.resolve();\n  },\n  isLoading: false\n};\n\nexport const MusicContext = React.createContext(context);\n","import React, { useState, useContext } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  IconButton,\n  CircularProgress,\n  fade,\n  InputBase\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { MusicContext } from \"../../../models/MusicContext\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../models/Folder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popper: {\n      marginTop: 10,\n      marginRight: 15,\n      width: \"40ch\",\n      maxHeight: 400,\n      overflow: \"auto\"\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport default function MusicSearchField() {\n  const classes = useStyles();\n  const { search } = useContext(MusicContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        {isLoading ? (\n          <CircularProgress size={20} color=\"inherit\" />\n        ) : (\n          <SearchIcon />\n        )}\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput\n        }}\n        value={value}\n        inputProps={{ \"aria-label\": \"search\" }}\n        onChange={async e => {\n          let keyword = e.target.value;\n          setValue(keyword);\n        }}\n        onKeyDown={async e => {\n          if (e.key === \"Enter\") {\n            setIsLoading(true);\n            search(value);\n            setIsLoading(false);\n          }\n        }}\n      />\n      <IconButton\n        disabled={value === \"\"}\n        onClick={async () => {\n          setIsLoading(true);\n          setValue(\"\");\n          await search(\"\");\n          setIsLoading(false);\n        }}\n      >\n        <ClearIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import React from \"react\";\nimport * as mm from \"music-metadata-browser\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport {\n  CardMedia,\n  CardContent,\n  Typography,\n  Collapse\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport * as path from \"path\";\n//@ts-ignore\nimport AudioSpectrum from \"react-audio-spectrum\";\n\nconst getMusicPicture = (tag?: mm.IAudioMetadata) => {\n  const pictures = tag?.common.picture;\n  let picture: string | undefined = undefined;\n  if (pictures && pictures.length > 0) {\n    picture = pictures[0].data.toString(\"base64\");\n    picture = \"data:image/jpeg;base64,\" + picture;\n  }\n  return picture;\n};\n\nexport default function CurrentPlayingPage() {\n  const { currentMusic, currentTag } = React.useContext(MusicContext);\n  let player = React.createRef<HTMLAudioElement | undefined>();\n  return (\n    <div style={{ marginTop: 40 }}>\n      <Collapse in={currentMusic === undefined} mountOnEnter unmountOnExit>\n        <Typography variant=\"subtitle1\">No Music Selected</Typography>\n      </Collapse>\n      <Collapse\n        in={currentMusic?.music_metadata?.picture !== undefined}\n        mountOnEnter\n        unmountOnExit\n      >\n        <CardMedia\n          style={{\n            height: 300,\n            width: \"100%\",\n\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          }}\n          image={\n            currentMusic?.music_metadata?.picture ?? getMusicPicture(currentTag)\n          }\n        />\n      </Collapse>\n      <Collapse in={currentMusic !== undefined} mountOnEnter unmountOnExit>\n        <CardContent\n          style={{\n            width: \"100%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          }}\n        >\n          <Typography component=\"h5\" variant=\"h5\">\n            {decodeURIComponent(\n              currentMusic?.music_metadata?.title ??\n                path.basename(currentMusic?.filename ?? \"\")\n            )}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {decodeURIComponent(currentMusic?.music_metadata?.artist ?? \"\")}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {decodeURIComponent(currentMusic?.music_metadata?.album ?? \"\")}\n          </Typography>\n          {currentMusic && (\n            <audio\n              controls\n              loop\n              crossOrigin=\"anonymous\"\n              autoPlay\n              src={currentMusic?.file}\n              id=\"music\"\n            />\n          )}\n          {currentMusic && (\n            <AudioSpectrum\n              id=\"audio-canvas\"\n              height={200}\n              width={300}\n              meterWidth={6}\n              audioId=\"music\"\n            />\n          )}\n        </CardContent>\n      </Collapse>\n    </div>\n  );\n}\n","import React from \"react\";\nimport * as mm from \"music-metadata-browser\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport {\n  CardMedia,\n  CardContent,\n  Typography,\n  Collapse,\n  Paper,\n  Grid,\n  Card,\n  IconButton,\n  Dialog,\n  Toolbar,\n  DialogContent,\n  Slide,\n  CardActions,\n  Slider\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport * as moment from \"moment\";\nimport * as path from \"path\";\n//@ts-ignore\nimport AudioSpectrum from \"react-audio-spectrum\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport { TransitionProps } from \"@material-ui/core/transitions/transition\";\nimport VolumeDown from \"@material-ui/icons/VolumeDown\";\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport RepeatOneIcon from \"@material-ui/icons/RepeatOne\";\n\nconst getMusicPicture = (tag?: mm.IAudioMetadata) => {\n  const pictures = tag?.common.picture;\n  let picture: string | undefined = undefined;\n  if (pictures && pictures.length > 0) {\n    picture = pictures[0].data.toString(\"base64\");\n    picture = \"data:image/jpeg;base64,\" + picture;\n  }\n  return picture;\n};\nconst IMAGE_SIZE = 70;\nconst LARGE_IMAGE_SIZE = 300;\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function CurrentPlayingMobile() {\n  const { currentMusic, currentTag, stop } = React.useContext(MusicContext);\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [currentTime, setCurrentTime] = React.useState<number>();\n  const [totalTime, setTotalTime] = React.useState<number>();\n  const [volume, setVolume] = React.useState<number | undefined>(0.5);\n  const [repeat, setRepeat] = React.useState(false);\n  const [playingState, setPlayingState] = React.useState<\"playing\" | \"pause\">(\n    \"playing\"\n  );\n  let player = React.useRef<HTMLAudioElement>(null);\n\n  return (\n    <div style={{ margin: 10 }}>\n      <Card>\n        <Grid\n          style={{ marginLeft: 10, marginRight: 10 }}\n          container\n          alignItems=\"center\"\n        >\n          <Grid item xs={3}>\n            {currentMusic ? (\n              <CardMedia\n                style={{ height: IMAGE_SIZE, width: IMAGE_SIZE }}\n                image={\n                  currentMusic?.music_metadata?.picture ??\n                  getMusicPicture(currentTag)\n                }\n              />\n            ) : (\n              <Skeleton width={IMAGE_SIZE} height={IMAGE_SIZE} />\n            )}\n          </Grid>\n          <Grid item xs={7}>\n            {currentMusic && (\n              <audio\n                onVolumeChange={() => {\n                  setVolume(player.current?.volume);\n                }}\n                onCanPlay={() => {\n                  setCurrentTime(player.current?.currentTime);\n                  setTotalTime(player.current?.duration);\n                  if (player.current) {\n                    player.current.volume = volume ?? 0.5;\n                    setVolume(volume);\n                    player.current.loop = repeat;\n                  }\n                }}\n                crossOrigin=\"anonymous\"\n                onTimeUpdate={e => {\n                  setCurrentTime(player.current?.currentTime);\n                  setTotalTime(player.current?.duration);\n                }}\n                autoPlay\n                src={currentMusic?.file}\n                ref={player}\n              />\n            )}\n            <CardActions\n              onClick={() => {\n                setOpenDialog(true);\n              }}\n            >\n              {currentMusic === undefined && (\n                <Typography component=\"div\">No Music Playing</Typography>\n              )}\n              <Typography noWrap>\n                {decodeURIComponent(\n                  currentMusic?.music_metadata?.title ??\n                    path.basename(currentMusic?.filename ?? \"\")\n                )}\n              </Typography>\n            </CardActions>\n          </Grid>\n          <Grid item xs={2}>\n            {currentMusic && (\n              <IconButton onClick={e => stop()} size=\"medium\">\n                <StopIcon />\n              </IconButton>\n            )}\n          </Grid>\n        </Grid>\n      </Card>\n      {/** popup dialog */}\n      <Dialog open={openDialog} fullScreen TransitionComponent={Transition}>\n        <Toolbar>\n          <IconButton onClick={() => setOpenDialog(false)}>\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n        <DialogContent>\n          <div>\n            {currentMusic ? (\n              <CardMedia\n                style={{ height: LARGE_IMAGE_SIZE, width: \"100%\" }}\n                image={\n                  currentMusic?.music_metadata?.picture ??\n                  getMusicPicture(currentTag)\n                }\n              />\n            ) : (\n              <Skeleton width=\"100%\" height={LARGE_IMAGE_SIZE} />\n            )}\n          </div>\n          <div>\n            <Typography component=\"h5\" variant=\"h5\" noWrap>\n              {decodeURIComponent(\n                currentMusic?.music_metadata?.title ??\n                  path.basename(currentMusic?.filename ?? \"\")\n              )}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {decodeURIComponent(currentMusic?.music_metadata?.artist ?? \"\")}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {decodeURIComponent(currentMusic?.music_metadata?.album ?? \"\")}\n            </Typography>\n          </div>\n          <div>\n            <Grid container spacing={2}>\n              <Grid item xs>\n                <Slider\n                  value={currentTime}\n                  max={totalTime}\n                  onChange={(e, v) => {\n                    if (player.current) {\n                      player.current.currentTime = v as number;\n                    }\n                  }}\n                  aria-labelledby=\"continuous-slider\"\n                />\n              </Grid>\n            </Grid>\n            <Grid justify=\"space-between\" container>\n              <Grid item>\n                {currentTime && moment.utc(currentTime * 1000).format(\"mm:ss\")}\n              </Grid>\n              <Grid item>\n                {totalTime && moment.utc(totalTime * 1000).format(\"mm:ss\")}\n              </Grid>\n            </Grid>\n            <Grid item style={{ textAlign: \"center\" }}>\n              <IconButton\n                disabled={currentMusic === undefined}\n                size=\"medium\"\n                onClick={() => {\n                  if (currentMusic && player && player.current) {\n                    if (playingState === \"playing\") {\n                      setPlayingState(\"pause\");\n                      player.current?.pause();\n                    } else {\n                      setPlayingState(\"playing\");\n                      player.current?.play();\n                    }\n                  }\n                }}\n              >\n                {playingState === \"playing\" ? (\n                  <PauseIcon style={{ fontSize: 40 }} />\n                ) : (\n                  <PlayArrowIcon style={{ fontSize: 40 }} />\n                )}\n              </IconButton>\n            </Grid>\n          </div>\n          <Grid container justify=\"center\">\n            <IconButton\n              onClick={() => {\n                if (player.current) {\n                  if (repeat) {\n                    setRepeat(false);\n                    player.current.loop = false;\n                  } else {\n                    setRepeat(true);\n                    player.current.loop = true;\n                  }\n                }\n              }}\n            >\n              {repeat ? <RepeatOneIcon /> : <RepeatIcon />}\n            </IconButton>\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item>\n              <VolumeDown />\n            </Grid>\n            <Grid item xs>\n              <Slider\n                value={volume && volume * 100}\n                min={0}\n                max={100}\n                onChange={(e, v) => {\n                  if (player.current) {\n                    player.current.volume = (v as number) / 100;\n                  }\n                }}\n                aria-labelledby=\"continuous-slider\"\n              />\n            </Grid>\n            <Grid item>\n              <VolumeUp />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Paper,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Typography\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport { TableBody, TableFooter } from \"semantic-ui-react\";\nimport * as path from \"path\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { IconButton, Grid } from \"@material-ui/core\";\nimport { musicURL } from \"../../../../models/urls\";\nimport { File as NasFile } from \"../../../../models/Folder\";\nimport moment from \"moment\";\nimport { NavLink } from \"react-router-dom\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nexport default function MusicList() {\n  const {\n    musicResponse,\n    play,\n    currentMusic,\n    stop,\n    fetch,\n    paginationURL,\n    presslike\n  } = React.useContext(MusicContext);\n  const [width, setWidth] = React.useState(window.innerWidth);\n  const [height, setheight] = React.useState(window.innerHeight);\n  const isSelected = (\n    file: NasFile | undefined,\n    file2: NasFile | undefined\n  ): boolean => {\n    return file?.id === file2?.id;\n  };\n\n  return (\n    <TableContainer\n      component={Paper}\n      style={{\n        marginTop: \"40px\",\n        marginLeft: 30,\n        maxHeight: height - 180,\n        width: \"100%\"\n      }}\n    >\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Artist</TableCell>\n            <TableCell>Duration</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {musicResponse &&\n            musicResponse.results.map((m, i) => (\n              <TableRow selected={isSelected(currentMusic, m)}>\n                <TableCell style={{ maxWidth: 200 }}>\n                  <Grid container>\n                    <Grid item xs={3}>\n                      <IconButton\n                        onClick={async () => {\n                          await presslike(m);\n                        }}\n                      >\n                        <FavoriteIcon\n                          style={{\n                            color: m.music_metadata?.like ? \"pink\" : undefined\n                          }}\n                        />\n                      </IconButton>\n                    </Grid>\n                    <Grid item xs={9}>\n                      <Typography noWrap>\n                        {m.music_metadata?.title ?? path.basename(m.filename)}\n                      </Typography>\n                      <NavLink\n                        to={\n                          m.music_metadata?.album !== undefined\n                            ? `/music?album=${m.music_metadata?.album}`\n                            : \"/music\"\n                        }\n                      >\n                        <Typography variant=\"subtitle1\" noWrap>\n                          {m.music_metadata?.album}\n                        </Typography>\n                      </NavLink>\n                    </Grid>\n                  </Grid>\n                </TableCell>\n                <TableCell style={{ maxWidth: 100 }}>\n                  <NavLink\n                    to={\n                      m.music_metadata?.artist !== undefined\n                        ? `/music?artist=${m.music_metadata?.artist}`\n                        : \"/music\"\n                    }\n                  >\n                    <Typography variant=\"subtitle1\" noWrap>\n                      {m.music_metadata?.artist}\n                    </Typography>\n                  </NavLink>\n                </TableCell>\n                <TableCell>\n                  {m?.music_metadata?.duration &&\n                    moment\n                      .utc(m?.music_metadata?.duration * 1000)\n                      .format(\"mm:ss\")}\n                </TableCell>\n                <TableCell>\n                  <IconButton\n                    onClick={async () => {\n                      if (isSelected(currentMusic, m)) {\n                        stop();\n                      } else {\n                        await play(m);\n                      }\n                    }}\n                  >\n                    {isSelected(currentMusic, m) ? (\n                      <StopIcon />\n                    ) : (\n                      <PlayArrowIcon />\n                    )}\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <Pagination\n              size=\"medium\"\n              style={{ marginBottom: 10, marginTop: 10 }}\n              page={musicResponse?.current_page ?? 0}\n              count={musicResponse?.total_pages ?? 0}\n              onChange={async (e, value) => {\n                if (paginationURL === musicURL) {\n                  await fetch(`${musicURL}?page=${value}`);\n                } else {\n                  await fetch(`${paginationURL}&page=${value}`);\n                }\n              }}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\nimport {\n  List,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListItemIcon,\n  Typography,\n  Divider,\n  CardMedia\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport { TableBody, TableFooter } from \"semantic-ui-react\";\nimport * as path from \"path\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { IconButton } from \"@material-ui/core\";\nimport { musicURL } from \"../../../../models/urls\";\nimport { File as NasFile } from \"../../../../models/Folder\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LazyLoad from \"react-lazyload\";\n\nexport default function MusicListMobile() {\n  const {\n    musicResponse,\n    play,\n    currentMusic,\n    stop,\n    fetch,\n    paginationURL,\n    presslike\n  } = React.useContext(MusicContext);\n  const [width, setWidth] = React.useState(window.innerWidth);\n  const [height, setheight] = React.useState(window.innerHeight);\n\n  const isSelected = (\n    file: NasFile | undefined,\n    file2: NasFile | undefined\n  ): boolean => {\n    return file?.id === file2?.id;\n  };\n\n  return (\n    <div style={{ marginTop: 10 }}>\n      <List>\n        {musicResponse &&\n          musicResponse.results.map((m, i) => (\n            <div>\n              <ListItem\n                button\n                selected={isSelected(currentMusic, m)}\n                onClick={async () => {\n                  if (isSelected(currentMusic, m)) {\n                  } else {\n                    await play(m);\n                  }\n                }}\n                style={{ height: 80 }}\n              >\n                <ListItemIcon>\n                  <LazyLoad height={40}>\n                    <CardMedia\n                      style={{ height: 40, width: 40 }}\n                      image={m.music_metadata?.picture}\n                    />\n                  </LazyLoad>\n                </ListItemIcon>\n                <ListItemText\n                  primary={\n                    <Typography noWrap>\n                      {m.music_metadata?.title ?? path.basename(m.filename)}\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography noWrap>{m.music_metadata?.album}</Typography>\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={async () => {\n                      await presslike(m);\n                    }}\n                  >\n                    <FavoriteIcon\n                      style={{\n                        color: m.music_metadata?.like ? \"pink\" : undefined\n                      }}\n                    />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n              <Divider style={{ color: \"black\", marginLeft: 50 }} />\n            </div>\n          ))}\n      </List>\n      <Pagination\n        size=\"medium\"\n        style={{ marginBottom: 10, marginTop: 10, height: 140 }}\n        page={musicResponse?.current_page ?? 0}\n        count={musicResponse?.total_pages ?? 0}\n        onChange={async (e, value) => {\n          if (paginationURL === musicURL) {\n            await fetch(`${musicURL}?page=${value}`);\n          } else {\n            await fetch(`${paginationURL}&page=${value}`);\n          }\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Hidden, Grid } from \"@material-ui/core\";\nimport CurrentPlayingPage from \"../left/CurrentPlayingPage\";\nimport { Container } from \"semantic-ui-react\";\nimport CurrentPlayingMobile from \"../mobile/CurrentPlayingMobile\";\nimport MusicList from \"../right/MusicList\";\nimport MusicListMobile from \"../mobile/MusicListMobile\";\n\nexport default function PlayerPage() {\n  return (\n    <div>\n      <Hidden xsDown implementation=\"js\">\n        <Container>\n          {/** End App Bar */}\n          <Grid container style={{ margin: 10 }}>\n            <Grid item sm={4}>\n              <CurrentPlayingPage />\n            </Grid>\n            <Grid item sm={8}>\n              <MusicList />\n            </Grid>\n          </Grid>\n        </Container>\n      </Hidden>\n      <Hidden mdUp implementation=\"js\">\n        <Container fluid>\n          <MusicListMobile />\n        </Container>\n        <div\n          style={{\n            position: \"fixed\",\n            bottom: 0,\n            width: \"100%\"\n          }}\n        >\n          <CurrentPlayingMobile />\n        </div>\n      </Hidden>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Container,\n  Grid,\n  CardMedia,\n  Typography,\n  Card,\n  CardActions,\n  CardActionArea,\n  CardContent\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\n//@ts-ignore\nimport LazyLoad from \"react-lazyload\";\n\nexport default function AlbumPage() {\n  const { albums, setTabIndex } = React.useContext(MusicContext);\n\n  return (\n    <Container>\n      <Grid container spacing={2}>\n        {albums.map((a, i) => (\n          <Grid item xs={6} md={4} lg={3} key={`album-${i}`}>\n            <Card>\n              <CardActionArea\n                style={{ height: 300 }}\n                onClick={async () => {\n                  window.location.replace(\"#music/?album=\" + a.album);\n                  setTabIndex(0);\n                }}\n              >\n                {i < 5 ? (\n                  <CardMedia\n                    style={{ height: 200, width: \"100%\" }}\n                    image={a.picture}\n                  />\n                ) : (\n                  <LazyLoad height={200} offset={120}>\n                    <CardMedia\n                      style={{ height: 200, width: \"100%\" }}\n                      image={a.picture}\n                    />\n                  </LazyLoad>\n                )}\n\n                <CardContent>\n                  <Typography>{a.album}</Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport {\n  Paper,\n  Divider,\n  ListItemAvatar,\n  Dialog,\n  DialogTitle,\n  Grid,\n  DialogContent,\n  CardMedia,\n  Card,\n  Typography,\n  CardActionArea\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport { Container, CardContent } from \"semantic-ui-react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PeopleIcon from \"@material-ui/icons/People\";\n\nexport default function ArtistPage() {\n  const {\n    artists,\n    setTabIndex,\n    getAlbumsByArtist,\n    artistDetail\n  } = React.useContext(MusicContext);\n  const [showDialog, setShowDialog] = React.useState(false);\n\n  return (\n    <Container>\n      <Paper>\n        <List>\n          {artists.map((a, i) => (\n            <div>\n              <ListItem\n                onClick={async () => {\n                  await getAlbumsByArtist(a.artist);\n                  setShowDialog(true);\n                }}\n                button\n                key={`artist-${i}`}\n                style={{ height: 50 }}\n              >\n                <ListItemAvatar>\n                  <PeopleIcon />\n                </ListItemAvatar>\n                <ListItemText primary={a.artist}></ListItemText>\n              </ListItem>\n              <Divider />\n            </div>\n          ))}\n        </List>\n      </Paper>\n      <Dialog\n        open={showDialog}\n        fullWidth\n        scroll=\"paper\"\n        onClose={() => setShowDialog(false)}\n      >\n        <DialogTitle>\n          {artistDetail.length > 0 && artistDetail[0].artist}\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2}>\n            {artistDetail.map((a, i) => (\n              <Grid item key={`artist-detail-${i}`} xs={6}>\n                <Card elevation={0}>\n                  <CardActionArea\n                    onClick={() => {\n                      setShowDialog(false);\n                      window.location.replace(\"#music/?album=\" + a.album);\n                      setTabIndex(0);\n                    }}\n                  >\n                    <CardMedia style={{ height: 250 }} image={a.picture} />\n                    <CardContent>\n                      <Typography>{a.album}</Typography>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </Container>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport { Container, Segment, Progress, Menu, TabPane } from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../models/HomeContext\";\nimport { ContextMenu, ContextMenuTrigger } from \"react-contextmenu\";\nimport {\n  Grid,\n  Hidden,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n  Typography,\n  InputBase,\n  createMuiTheme,\n  ThemeProvider,\n  Backdrop,\n  CircularProgress,\n  Snackbar,\n  Paper,\n  Tooltip,\n  Tabs,\n  Tab,\n  Slide,\n  Fade,\n  Collapse\n} from \"@material-ui/core\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport CurrentPlayingPage from \"./components/left/CurrentPlayingPage\";\nimport MusicList from \"./components/right/MusicList\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { NavLink } from \"react-router-dom\";\nimport { MusicContext } from \"../../models/MusicContext\";\nimport MusicSearchField from \"./components/SearchField\";\nimport MusicListMobile from \"./components/mobile/MusicListMobile\";\nimport CurrentPlayingMobile from \"./components/mobile/CurrentPlayingMobile\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport PlayerPage from \"./components/player/PlayerPage\";\nimport AlbumPage from \"./components/album/AlbumPage\";\nimport ArtistPage from \"./components/artist/ArtistPage\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: orange\n  }\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root1: {\n      paddingTop: 80\n    },\n    root: {\n      paddingTop: 120,\n      height: \"100%\"\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\"\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\"\n      }\n    }\n  })\n);\n\nexport default function MusicPage() {\n  const {\n    isLoading,\n    errorMsg,\n    updateMetadata,\n    filterField,\n    currentTabIndex,\n    setTabIndex\n  } = React.useContext(MusicContext);\n  const [show, setShow] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        {/** App Bar */}\n        <AppBar>\n          <Toolbar>\n            <NavLink to=\"/\">\n              <IconButton>\n                <ArrowBackIosIcon />\n              </IconButton>\n            </NavLink>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              {filterField ?? \"Music\"}\n              {filterField && (\n                <Tooltip title=\"Clear field\">\n                  <NavLink to=\"/music\">\n                    <IconButton>\n                      <ClearIcon />\n                    </IconButton>\n                  </NavLink>\n                </Tooltip>\n              )}\n            </Typography>\n\n            <Tooltip title=\"Update metadata\">\n              <IconButton\n                onClick={async () => {\n                  await updateMetadata();\n                }}\n              >\n                <UpdateIcon />\n              </IconButton>\n            </Tooltip>\n            <MusicSearchField />\n          </Toolbar>\n          <Tabs\n            value={currentTabIndex}\n            variant=\"scrollable\"\n            onChange={async (e, v) => {\n              await setTabIndex(v);\n            }}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab label=\"Music\" value={0} />\n            <Tab label=\"Album\" value={1} />\n            <Tab label=\"Artist\" value={2} />\n            <Tab label=\"Playlist\" value={3} />\n          </Tabs>\n        </AppBar>\n        <Backdrop className={classes.backdrop} open={isLoading}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        <Collapse in={currentTabIndex === 0} mountOnEnter unmountOnExit>\n          <div\n            className={classes.root1}\n            style={{\n              overflow: \"hidden\"\n            }}\n          >\n            <PlayerPage />\n          </div>\n        </Collapse>\n        <Collapse in={currentTabIndex === 1} mountOnEnter unmountOnExit>\n          <div className={classes.root}>\n            <AlbumPage />\n          </div>\n        </Collapse>\n        <Collapse in={currentTabIndex === 2} mountOnEnter unmountOnExit>\n          <div className={classes.root}>\n            <ArtistPage />\n          </div>\n        </Collapse>\n        <Collapse in={currentTabIndex === 3} mountOnEnter unmountOnExit>\n          <div\n            className={classes.root1}\n            style={{\n              overflow: \"hidden\"\n            }}\n          >\n            <PlayerPage />\n          </div>\n        </Collapse>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={errorMsg !== undefined}\n          message={`${errorMsg}`}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  BookCollection,\n  Document as NasDocument,\n  Folder\n} from \"../../../../models/Folder\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n  List,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  CircularProgress,\n  LinearProgress,\n  Collapse,\n  Typography,\n  Tooltip,\n  AppBar,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade\n} from \"@material-ui/core\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { DialogTitle, Toolbar } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport FlipToFrontIcon from \"@material-ui/icons/FlipToFront\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { BookContext } from \"../../../../models/BookContext\";\nimport MoveBookDialog from \"./MoveBookDialog\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Container } from \"semantic-ui-react\";\nimport UpdateCollectionDialog from \"./UpdateCollectionDialog\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\ninterface Props {\n  book: BookCollection;\n  open: boolean;\n  onClose(): void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\"\n      }\n    }\n  })\n);\n\nexport default function BookDetailDialog(props: Props) {\n  const { book, open, onClose } = props;\n  const classes = useStyles();\n\n  const {\n    deleteDocument,\n    moveDocumentTo,\n    createDocument,\n    updateBook,\n    currentBook,\n    deleteBook\n  } = React.useContext(BookContext);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [currentDoc, setCurrentDoc] = React.useState<NasDocument>();\n  const [showEditDialog, setShowEditDialog] = React.useState(false);\n\n  return (\n    <Dialog open={open} fullScreen>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          onClick={() => {\n            onClose();\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography variant=\"h6\" component=\"div\" className={classes.title}>\n          {book.name}\n        </Typography>\n        <Tooltip title=\"Edit Document\">\n          <IconButton\n            edge=\"end\"\n            onClick={async () => {\n              if (currentBook) {\n                setShowEditDialog(true);\n              }\n            }}\n          >\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Delete Document\">\n          <IconButton\n            edge=\"end\"\n            onClick={async () => {\n              let confirm = window.confirm(\"Do you want to delete this book?\");\n              if (confirm) {\n                onClose();\n                await deleteBook(book);\n              }\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Add Document\">\n          <IconButton\n            edge=\"end\"\n            onClick={async () => {\n              if (currentBook) {\n                setIsLoading(true);\n                await createDocument(\"unnamed document\", currentBook);\n                setTimeout(() => {\n                  setIsLoading(false);\n                }, 300);\n              }\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n\n      <DialogContent>\n        <Container>\n          <Collapse mountOnEnter unmountOnExit in={isLoading}>\n            <LinearProgress />\n          </Collapse>\n          <Typography variant=\"subtitle1\">\n            {currentBook?.description}\n          </Typography>\n          <List>\n            {book.documents?.map((d, i) => (\n              <ListItem\n                button\n                key={`document-${i}`}\n                onClick={() => {\n                  window.location.href = \"#/document/\" + d.id;\n                }}\n              >\n                <ListItemIcon>\n                  <BookIcon />\n                </ListItemIcon>\n                <ListItemText primary={d.name} />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={async () => {\n                      let confirm = window.confirm(\n                        \"Do you want to delete this document?\"\n                      );\n                      if (confirm) {\n                        setIsLoading(true);\n                        await deleteDocument(d.id);\n                        setTimeout(() => {\n                          setIsLoading(false);\n                        }, 300);\n                      }\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                  <IconButton\n                    onClick={() => {\n                      setCurrentDoc(d);\n                    }}\n                  >\n                    <FlipToFrontIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </Container>\n      </DialogContent>\n\n      {currentDoc && (\n        <MoveBookDialog\n          open={Boolean(currentDoc)}\n          onClose={async target => {\n            setCurrentDoc(undefined);\n            if (target) {\n              await moveDocumentTo(currentDoc, target);\n            }\n          }}\n          currentDoc={currentDoc}\n        />\n      )}\n\n      {currentBook && (\n        <UpdateCollectionDialog\n          open={showEditDialog}\n          onClose={async (name, desc) => {\n            if (name && desc) {\n              await updateBook(name, desc);\n            }\n            setShowEditDialog(false);\n          }}\n        />\n      )}\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport {\n  Grid,\n  Card,\n  Typography,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  IconButton,\n  Tooltip\n} from \"@material-ui/core\";\nimport { BookContext } from \"../../../../models/BookContext\";\nimport { BookCollection } from \"../../../../models/Folder\";\nimport BookDetailDialog from \"../dialog/BookDetailDialog\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport UpdateCollectionDialog from \"../dialog/UpdateCollectionDialog\";\n\nexport default function BookList() {\n  const {\n    books,\n    fetchBookDetail,\n    isLoading,\n    currentBook,\n    addNewBook,\n    onCloseDetailDialog\n  } = React.useContext(BookContext);\n\n  const [showCreateDialog, setShowCreateDialog] = React.useState(false);\n\n  return (\n    <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\n      {books.map((b, i) => (\n        <Grid item key={`book-${i}`} xs={6} sm={4} md={2}>\n          <Card\n            style={{\n              height: 200,\n              alignContent: \"center\",\n              alignItems: \"center\",\n              justifyItems: \"center\"\n            }}\n          >\n            <CardActionArea\n              style={{ height: \"100%\" }}\n              onClick={async () => {\n                await fetchBookDetail(b.id);\n              }}\n            >\n              <CardContent>\n                <Typography align=\"center\">{b.name}</Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      ))}\n      <Grid item xs={6} sm={4} md={2}>\n        <Card\n          style={{\n            height: 200,\n            alignContent: \"center\",\n            alignItems: \"center\",\n            justifyItems: \"center\"\n          }}\n        >\n          <Tooltip title=\"Add Book\">\n            <CardActionArea\n              style={{ height: \"100%\" }}\n              onClick={async () => {\n                setShowCreateDialog(true);\n              }}\n            >\n              <CardContent>\n                <AddCircleIcon\n                  fontSize=\"large\"\n                  style={{\n                    display: \"block\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\"\n                  }}\n                />\n              </CardContent>\n            </CardActionArea>\n          </Tooltip>\n        </Card>\n      </Grid>\n      {currentBook && (\n        <BookDetailDialog\n          open={currentBook !== undefined && !isLoading}\n          book={currentBook}\n          onClose={() => {\n            onCloseDetailDialog();\n          }}\n        />\n      )}\n\n      {showCreateDialog && (\n        <UpdateCollectionDialog\n          open={showCreateDialog}\n          onClose={async (name, desc) => {\n            if (name && desc) {\n              await addNewBook(name, desc);\n            }\n            setShowCreateDialog(false);\n          }}\n        />\n      )}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  makeStyles,\n  Theme,\n  createStyles,\n  Backdrop,\n  CircularProgress,\n  Snackbar\n} from \"@material-ui/core\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { NavLink } from \"react-router-dom\";\nimport { BookContext } from \"../../models/BookContext\";\nimport Container from \"@material-ui/core/Container\";\nimport BookList from \"./components/list/BookList\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\"\n    }\n  })\n);\n\nexport default function BookPage() {\n  const classes = useStyles();\n  const { isLoading, errorMsg } = React.useContext(BookContext);\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <NavLink to=\"/\">\n            <IconButton\n              edge=\"start\"\n              style={{ color: \"white\" }}\n              aria-label=\"menu\"\n            >\n              <HomeIcon />\n            </IconButton>\n          </NavLink>\n          <Typography variant=\"h6\">Books</Typography>\n        </Toolbar>\n      </AppBar>\n      <Container style={{ marginTop: 10 }}>\n        <BookList />\n      </Container>\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        open={errorMsg !== undefined}\n        message={errorMsg}\n      ></Snackbar>\n\n      <Backdrop className={classes.backdrop} open={isLoading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { I18nProvider } from \"@lingui/react\";\n\nReactDOM.render(\n  <I18nProvider catalogs={{}}>\n    <App />\n  </I18nProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  HashRouter as Router,\n  Route,\n  Link,\n  NavLink,\n  Redirect\n} from \"react-router-dom\";\nimport { HomePage } from \"./components/pages/home/HomePage\";\nimport { HomePageProvider } from \"./components/models/HomeContext\";\nimport { SystemProvider } from \"./components/models/SystemContext\";\nimport SystemInfoPage from \"./components/pages/systemInfo/SystemInfoPage\";\nimport { Sidebar, Menu, Icon, Button } from \"semantic-ui-react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { IconButton } from \"@material-ui/core\";\nimport { DocumentProvider } from \"./components/models/DocumentContext\";\nimport DocumentEditor from \"./components/pages/document/DocumentEditor\";\nimport { MovingProvider } from \"./components/models/MovingContext\";\nimport { MusicProvider } from \"./components/models/MusicContext\";\nimport MusicPage from \"./components/pages/music/MusicPage\";\nimport BookPage from \"./components/pages/book/BookPage\";\nimport { BookContext, BookProvider } from \"./components/models/BookContext\";\n\nexport default function App() {\n  const [visible, setVisible] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <SystemProvider>\n      <Router>\n        <div style={{ height: \"100%\" }}>\n          <Route exact path=\"/\" component={() => <Redirect to=\"/home\" />} />\n          <Route\n            exact\n            path=\"/home/:id?\"\n            component={(props: any) => {\n              return (\n                <MovingProvider>\n                  <HomePageProvider {...props}>\n                    <HomePage></HomePage>\n                  </HomePageProvider>\n                </MovingProvider>\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/document/:id\"\n            component={(props: any) => {\n              return (\n                <BookProvider>\n                  <MovingProvider>\n                    <DocumentProvider {...props}>\n                      <DocumentEditor />\n                    </DocumentProvider>\n                  </MovingProvider>\n                </BookProvider>\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/book\"\n            component={(props: any) => {\n              return (\n                <MovingProvider>\n                  <BookProvider>\n                    <BookPage />\n                  </BookProvider>\n                </MovingProvider>\n              );\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/info\"\n            component={(props: any) => {\n              setShowMenu(true);\n              return <SystemInfoPage />;\n            }}\n          />\n          <Route\n            path=\"/music\"\n            component={(props: any) => {\n              return (\n                <MusicProvider {...props}>\n                  <MusicPage />\n                </MusicProvider>\n              );\n            }}\n          />\n        </div>\n      </Router>\n    </SystemProvider>\n  );\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 225;"],"sourceRoot":""}