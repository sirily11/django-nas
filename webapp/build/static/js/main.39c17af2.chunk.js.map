{"version":3,"sources":["components/models/urls.ts","components/models/interfaces/nas.ts","components/models/HomeContext.tsx","components/pages/home/components/files/RenameDialog.tsx","components/models/MovingContext.tsx","components/pages/document/components/MoveDialog.tsx","components/pages/home/components/folders/ListFolderPanel.tsx","components/pages/home/components/files/UploadDialog.tsx","components/pages/home/JSONSchema/model/Schema.ts","components/pages/home/components/folders/NewFolderDialog.tsx","components/pages/home/components/documents/CreateDocumentDialog.tsx","components/pages/home/components/others/NasMenu.tsx","components/models/SystemContext.tsx","components/pages/home/components/files/utils.ts","components/pages/home/components/others/ComputerStatus.tsx","components/pages/home/components/documents/Editor.tsx","components/pages/home/components/files/FilesActions.tsx","components/models/Plugins/file action plugins/BasePlugin.ts","components/models/Plugins/file action plugins/plugins/SubtitlePlugin.ts","components/models/Plugins/file plugins/BaseFilePlugin.tsx","components/models/FileContentManager.ts","components/models/Plugins/file plugins/plugins/codeFilePlugin/languages.ts","components/models/Plugins/file plugins/plugins/codeFilePlugin/CodeViewer.tsx","components/models/Plugins/file plugins/plugins/codeFilePlugin/CodeFilePlugin.tsx","components/models/Plugins/file action plugins/plugins/CodePlugin.ts","components/models/FileActionContext.tsx","components/models/Plugins/file plugins/plugins/VideoFilePlugin.tsx","components/models/Plugins/file plugins/plugins/ImageFilePlugin.tsx","components/pages/home/components/files/ListFilesPanel.tsx","components/pages/home/components/files/UploadFilesSideBar.tsx","components/pages/home/components/files/SearchField.tsx","components/pages/home/HomePage.tsx","components/pages/systemInfo/PercentageChart.tsx","components/pages/systemInfo/SystemInfoPage.tsx","components/models/DocumentContext.tsx","components/pages/document/components/Titlebar.tsx","components/pages/document/components/ToolsBar.tsx","components/pages/document/components/blots/DividerBlot.ts","components/pages/document/components/BodyEditor.tsx","components/pages/document/components/MenuBar.tsx","components/models/BookContext.tsx","components/pages/book/components/dialog/MoveBookDialog.tsx","components/pages/book/components/dialog/UpdateCollectionDialog.tsx","components/pages/document/components/book/BookDrawer.tsx","components/pages/document/DocumentEditor.tsx","components/models/MusicContext.tsx","components/pages/music/components/SearchField.tsx","components/pages/music/components/left/CurrentPlayingPage.tsx","components/pages/music/components/mobile/CurrentPlayingMobile.tsx","components/pages/music/components/right/MusicList.tsx","components/pages/music/components/mobile/MusicListMobile.tsx","components/pages/music/components/player/PlayerPage.tsx","components/pages/music/components/album/AlbumPage.tsx","components/pages/music/components/artist/ArtistPage.tsx","components/pages/music/MusicPage.tsx","components/pages/book/components/dialog/BookDetailDialog.tsx","components/pages/book/components/list/BookList.tsx","components/pages/book/BookPage.tsx","components/models/GalleryContext.tsx","components/pages/gallery/components/image-grid/ImageGrid.tsx","components/pages/gallery/components/image-grid/Marker.tsx","components/pages/gallery/GalleryPage.tsx","components/pages/home/components/files/music/Musicplayer.tsx","components/models/Plugins/file plugins/plugins/MusicFilePlugin.tsx","components/pages/home/components/files/pdf/PDFViewer.tsx","components/models/Plugins/file plugins/plugins/PDFFilePlugin.tsx","components/models/Plugins/file plugins/plugins/jsonFilePlugin/JSONViewer.tsx","components/models/Plugins/file plugins/plugins/poFilePlugin/PofileViewer.tsx","components/models/Plugins/file plugins/plugins/poFilePlugin/PoFilePlugin.tsx","components/pages/plugin_page/PluginPage.tsx","App.tsx","components/models/Plugins/file plugins/plugins/jsonFilePlugin/JSONFilePlugin.tsx","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["url","fileURL","documentURL","fileContentURL","musicURL","bookCollectionURL","galleryURL","Nas","constructor","menus","currentFolder","searchedFiles","errorMsg","moveFileTo","fileId","dest","a","Axios","patch","getContent","id","fetchMusicList","get","data","console","log","moveDocument","documentId","moveFolderTo","folderId","u","rename","newName","search","keyword","response","parents","undefined","updateFile","fileID","file","post","uploadFile","files","isDir","onUpload","onFileUploaded","index","f","size","getUploadFileAndCreateFolder","getSingleUploadFile","formData","headers","onUploadProgress","progress","p","Math","round","loaded","total","alert","toString","deleteFile","showAlert","window","confirm","delete","deleteFolder","createNewFolder","name","parent","res","folders","push","renameFolder","findIndex","renameDocument","documents","getDocument","Promise","resolve","content","JSON","parse","createNewDocument","stringify","ops","updateDocument","deleteDocument","reject","this","FormData","append","paths","webkitRelativePath","HomePageProvider","Component","props","super","updateDescription","setState","isLoading","match","params","fetch","setUploadedFile","uploadedFiles","selectDocument","document","selectedDocument","updateUploadInfo","uploadInfo","setUploadInfo","uploadFiles","nas","state","update","setUploadedFiles","componentDidUpdate","oldProps","componentWillMount","render","HomePageContext","Provider","value","children","context","info","React","createContext","RenameDialog","useContext","useState","type","ext","path","selectedFile","filename","getDefaultName","setName","Dialog","open","fullWidth","DialogTitle","DialogContent","TextField","color","onChange","e","target","DialogActions","Button","onClick","onClose","MovingProvider","MovingContext","MoveDialog","currentFile","onMove","loading","setLoading","loadingFolder","setLoadingFolder","then","catch","err","Card","style","width","CardContent","IconButton","disabled","setTimeout","Collapse","in","mountOnEnter","unmountOnExit","LinearProgress","backgroundColor","List","padding","maxHeight","overflowY","map","i","ListItem","key","button","ListItemIcon","ListItemText","primary","Divider","CardActions","disableSpacing","Tooltip","title","marginLeft","ListPanel","showMoveToDialog","setShowMoveToDialog","showRenameDialog","setShowRenameDialog","selectedFolder","setSelectedFolder","anchorEl","setAnchorEl","handleClose","overflow","overflowX","height","Grid","centered","Row","verticalAlign","Column","location","href","Message","error","MessageHeader","timeout","ListItemAvatar","Icon","secondary","moment","modified_at","format","ListItemSecondaryAction","currentTarget","Menu","keepMounted","Boolean","MenuItem","link","createElement","download_url","body","appendChild","click","removeChild","Error","UploadDialog","onInputChange","l","length","Modal","Header","Content","multiple","webkitdirectory","marginTop","Segment","Progress","percent","attached","active","currentName","currentIndex","Actions","basic","setOpen","inverted","current","uploadedDataSize","totalDataSize","Widget","text","NewFolderDialog","folderName","setFolderName","setIsLoading","label","required","CreateDocumentDialog","setIsloading","NasMenus","openFilesUpload","setOpenFilesUpload","openFolderUpload","setOpenFolderUpload","openNewFolder","setOpenNewFolder","openEditor","setOpenEditor","vertical","SystemProvider","fetchSystemInfo","componentDidMount","systemInfo","SystemContext","formatBytes","bytes","decimals","dm","floor","parseFloat","pow","toFixed","ComputerStatus","disk","used","Editor","editor","setEditor","isChanged","ref","instance","defaultValue","getEditor","getContents","FilesActions","shadow","setSelectedDocument","margin","container","spacing","item","xs","md","variant","raised","to","CardActionArea","BaseFileActionPlugin","menuString","SubtitleConverterPlugin","shouldShow","nasFile","includes","result","replace","blob","Blob","FileSaver","saveAs","BaseFilePlugin","shouldGetFileContent","openFile","arg","shouldOpenNewPage","getPluginName","promise","addEventListener","FileContentManager","file_content","languages","theme","createMuiTheme","palette","main","useStyles","makeStyles","appbar","minWidth","fontSize","fontWeight","textTransform","menuItem","notchedOutline","border","background","paddingTop","paddingBottom","marginRight","largeIcon","tag","paddingLeft","paddingRight","CodeViewer","classes","fileEl","setfileEl","language","setLanguage","codeMapping","fileName","setFileName","useEffect","lang","updateFileName","updateFileContent","customEvent","CustomEvent","detail","opener","dispatchEvent","updateFileContentAPI","AwesomeDebouncePromise","ThemeProvider","AppBar","elevation","className","Toolbar","close","alignContent","alignItems","onBlur","maxWidth","innerWidth","Typography","textDecoration","getContentAnchorEl","anchorOrigin","horizontal","transformOrigin","Container","newValue","codeExt","CodeFilePlugin","CodeActionPlugin","plugin","FileActionProvider","plugins","openMenu","anchor","closeMenu","hideMenu","setCurrentFile","closeRenameDialog","closeMoveToDialog","renderMenu","setAttribute","reload","FileActionContext","Player","require","videoExt","imageExt","isImage","filepath","extname","isVideo","ListFilesPanel","previewAnchor","setPreviewAnchor","setSelectedFile","selectedFiles","setSelectedFiles","onHoverFile","setOnHoverFile","showMultiMoveDialog","setShowMultiMoveDialog","useCallback","aria-label","TableContainer","Table","TableHead","TableRow","TableCell","Checkbox","checked","TableBody","hover","selected","indexOf","splice","cursor","onMouseOver","onMouseLeave","basename","v","scroll","Popper","CardMedia","image","cover","UploadFilesSideBar","filtedFiles","filter","cpu","memory","itemCount","min","itemSize","marginBottom","createStyles","popper","position","borderRadius","shape","fade","common","white","breakpoints","up","searchIcon","pointerEvents","display","justifyContent","inputRoot","inputInput","transition","transitions","create","SearchField","setValue","CircularProgress","InputBase","placeholder","root","input","inputProps","onKeyDown","ClickAwayListener","onClickAway","Paper","noWrap","created_at","flexGrow","menuButton","HomePage","show","setShow","Hidden","mdUp","Drawer","smDown","implementation","computer","mobile","tablet","PercentageChart","color2","minHeight","dataKey","fill","isAnimationActive","SystemInfoPage","columns","temperature","humidity","pressure","QuillDeltaToHtmlConverter","DocumentProvider","doc","currentDocument","saveDocument","newDocument","readFile","reader","FileReader","onload","readAsText","openFromLocal","getElementById","accept","converter","MarkdownToQuill","delta","convert","d","remove","saveToLocal","savingType","oepnFromLocal","DocumentContext","Titlebar","numChanges","setNumChanges","show_in_folder","zIndex","placement","divider","borderLeft","withStyles","grouped","ToggleButtonGroup","ToolsBar","BlockEmbed","Quill","import","DividerBlot","blotName","tagName","register","BodyEditor","setNumberOfChanges","save","modules","toolbar","MenuBar","parentMenuOpen","BookProvider","books","onCloseDetailDialog","currentBook","fetchBookDetail","showLoading","moveDocumentTo","collection","createDocument","addNewBook","desc","description","updateBook","deleteBook","book","BookContext","MoveBookDialog","currentDoc","selectedId","setSelectedId","FormControl","InputLabel","Select","b","UpdateCollectionDialog","setname","setdescription","multiline","rows","BookDrawer","setCurrentDoc","showEditDialog","setShowEditDialog","startIcon","row","menuIcon","top","left","DocumentEditor","openDrawer","setOpenDrawer","square","Fab","Snackbar","message","Backdrop","MusicProvider","getAlbumsByArtist","artist","artistDetail","init","values","queryString","filterBy","musicList","album","filterField","musicResponse","setTabIndex","prevIndex","currentTabIndex","albumResponse","albums","artistResonse","artists","field","updateMetadata","isSearching","paginationURL","searchURL","presslike","music_metadata","like","play","music","currentMusic","stop","currentTag","MusicContext","MusicSearchField","getMusicPicture","pictures","picture","CurrentPlayingPage","component","decodeURIComponent","controls","loop","crossOrigin","autoPlay","src","meterWidth","audioId","Transition","forwardRef","Slide","direction","CurrentPlayingMobile","openDialog","setOpenDialog","currentTime","setCurrentTime","totalTime","setTotalTime","volume","setVolume","repeat","setRepeat","playingState","setPlayingState","player","useRef","Skeleton","onVolumeChange","onCanPlay","duration","onTimeUpdate","fullScreen","TransitionComponent","Slider","max","aria-labelledby","justify","textAlign","pause","MusicList","innerHeight","isSelected","file2","stickyHeader","results","m","utc","TableFooter","Pagination","page","current_page","count","total_pages","MusicListMobile","PlayerPage","xsDown","sm","fluid","bottom","AlbumPage","lg","offset","ArtistPage","showDialog","setShowDialog","orange","root1","backdrop","drawer","MusicPage","Tabs","Tab","BookDetailDialog","edge","BookList","showCreateDialog","setShowCreateDialog","justifyItems","align","BookPage","GalleryProvider","onImageClick","selectedImage","refresh","fetchImages","nextURL","next","fetchMore","forEach","GalleryContext","flexWrap","gridList","getColSmall","getColLarge","ImageGrid","once","throttle","image_metadata","datetime","Marker","gpsConverter","num","getPosition","metadata","lat","gps_latitude_ref","gps_latitude","lng","gps_longitude_ref","gps_longitude","GalleryPage","Box","pt","defaultCenter","defaultZoom","bootstrapURLKeys","process","Object","entries","readMusicTag","musicSrc","mm","Musicplayer","audioExt","PDFViewer","pageNumber","setpageNumber","onLoadSuccess","pdf","numPages","Array","from","el","pdfjs","GlobalWorkerOptions","workerSrc","version","pdfExt","JSONViewer","setContent","getPercentage","items","msgstr","PoFileViewer","parsedContent","PO","mr","msgid","PoLine","c","flags","fuzzy","str","reduce","prev","curr","comments","references","poExt","PluginPage","pluginsMapping","useParams","pluginName","selectedPlugin","setSelectedPlugin","setFile","getContentById","getFile","poster","App","setShowMenu","CssBaseline","exact","hostname","ReactDOM","catalogs","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","code","keys","module","exports"],"mappings":"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","file":"static/js/main.39c17af2.chunk.js","sourcesContent":["export const systemURL = \"/system/\"\nexport const url = \"/api/folder/\"\nexport const fileURL = \"/api/file/\"\nexport const updateFileURL = \"/api/update/file/\"\nexport const documentURL = \"/api/document/\"\nexport const searchFileURL = \"/api/file?search=\"\nexport const updateDescriptionURL = \"/api/update_file_description\"\nexport const fileContentURL = '/api/file-content/'\n// download folder\nexport const downloadURL = \"/api/download/\"\nexport const downloadMultipleURL = \"/api/download_multiple/\"\nexport const convertCaptionURL = '/api/convert/caption/'\n//music \nexport const musicURL = \"/api/music/\"\nexport const musicMetadataURL = \"/api/music-metadata/\"\n// book collect\nexport const bookCollectionURL = '/api/book-collection/'\n//gallery\nexport const galleryURL = '/api/gallery/'","import Axios from \"axios\";\nimport { Folder, Parent, File as NasFile, Document as NasDocument, PaginationResponse } from './Folder';\n\nimport { url, documentURL, fileURL, searchFileURL, musicURL, updateFileURL } from \"../urls\";\nimport { DeltaStatic } from \"quill\";\nimport * as path from 'path';\n\n\n\ntype UploadProgressCallback = (index: number, progress: number) => void;\n\n\nexport class Nas {\n    menus: Parent[];\n    currentFolder?: Folder;\n    searchedFiles: NasFile[];\n    errorMsg?: string;\n\n\n    constructor() {\n        this.menus = [];\n        this.searchedFiles = [];\n    }\n\n    moveFileTo = async (fileId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`;\n                await Axios.patch(url, { \"parent\": dest });\n                await this.getContent(this.currentFolder.id);\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    };\n\n    /**\n     * Fetch list of music\n     */\n    fetchMusicList = async (): Promise<PaginationResponse<NasFile> | undefined> => {\n        try {\n\n            let url = `${musicURL}`;\n            let data = await Axios.get<PaginationResponse<NasFile>>(url);\n            return data.data;\n        } catch (err) {\n            console.log(\"err\");\n            this.errorMsg = err;\n        }\n    };\n\n    moveDocument = async (documentId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${documentURL}${documentId}/`;\n                await Axios.patch(url, { \"parent\": dest });\n                await this.getContent(this.currentFolder.id);\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    };\n\n    moveFolderTo = async (folderId: number, dest: number | null) => {\n        try {\n            if (this.currentFolder) {\n                let u = `${url}${folderId}/`;\n                await Axios.patch(u, { \"parent\": dest });\n                await this.getContent(this.currentFolder.id);\n            }\n\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    };\n\n    /**\n     * Rename file\n     */\n    rename = async (fileId: number, newName: string) => {\n        try {\n            if (this.currentFolder) {\n                let url = `${fileURL}${fileId}/`;\n                await Axios.patch(url, { \"filename\": newName });\n                await this.getContent(this.currentFolder.id);\n            }\n\n        } catch (err) {\n            console.log(err);\n            this.errorMsg = err;\n        }\n    };\n\n    /**\n     * Search by keyword\n     * @param keyword Keyword\n     */\n    search = async (keyword: String) => {\n        try {\n            let url = `${searchFileURL}${keyword}`;\n            let response = await Axios.get<NasFile[]>(url);\n            this.searchedFiles = response.data;\n        } catch (err) {\n            this.errorMsg = err;\n        }\n    };\n\n    /**\n     * Get content by id\n     */\n    getContent = async (id?: number | string) => {\n        try {\n\n            let u = id ? `${url}${id}/` : url;\n            console.log(u);\n            let response = await Axios.get<Folder>(u);\n            const { data } = response;\n            this.menus = data.parents;\n            this.currentFolder = data;\n            this.errorMsg = undefined;\n        } catch (err) {\n            this.errorMsg = err;\n            this.currentFolder = undefined;\n        }\n    };\n\n    updateFile = async (fileID: string, file: string) => {\n        await Axios.post(updateFileURL + fileID, { \"content\": file });\n\n    };\n\n\n    /**\n     * Upload file to server.\n     * If upload fail, will show alert dialog\n     * @param files: List of files\n     * @param onUpload: callback function\n     * @param isDir: Whether upload directory\n     */\n    uploadFile = async (files: File[], isDir: boolean, onUpload: (index: number, progress: number, current: number, total: number) => void, onFileUploaded: (file: File) => Promise<void>) => {\n        try {\n            let index = 0;\n            for (let f of files) {\n                if (this.currentFolder) {\n                    onUpload(index, 0, 0, f.size);\n\n                    let formData =\n                        isDir ?\n                            await this.getUploadFileAndCreateFolder(f) :\n                            this.getSingleUploadFile(f);\n\n                    await Axios.post<NasFile>(fileURL, formData,\n                        {\n                            headers: { 'Content-Type': 'multipart/form-data' },\n                            // eslint-disable-next-line no-loop-func\n                            onUploadProgress: (progress) => {\n                                let p = Math.round((progress.loaded * 100) / progress.total);\n                                onUpload(index, p, f.size * progress.loaded, progress.total);\n\n                            }\n\n                        });\n\n                    await this.getContent(this.currentFolder?.id);\n                    await onFileUploaded(f);\n\n                }\n                index += 1;\n            }\n            onUpload(index, 100, 0, 0);\n        } catch (err) {\n            console.log(err);\n            alert(\"Upload Failed: \" + err.toString());\n        }\n    };\n\n    /**\n     * Only get the formdata but don't create folder\n     * @param file File\n     */\n    getSingleUploadFile(file: File): FormData | undefined {\n        if (this.currentFolder) {\n            let formData = new FormData();\n            formData.append(\"file\", file);\n            this.currentFolder.id && formData.append(\"parent\", this.currentFolder.id.toString());\n            return formData;\n        }\n\n    }\n\n    /**\n     * Create folder for file. And then return the file\n     * For example file with path a/a.jpg will create a folder\n     * @param file Upload file\n     */\n    async getUploadFileAndCreateFolder(file: File): Promise<FormData | undefined> {\n        if (this.currentFolder) {\n            //@ts-ignore\n            let paths = file.webkitRelativePath;\n            let formData = new FormData();\n            console.log(this.currentFolder);\n            formData.append(\"file\", file);\n            this.currentFolder.id && formData.append(\"parent\", `${this.currentFolder?.id}`);\n            formData.append(\"paths\", paths);\n            return formData;\n        }\n\n    }\n\n\n    /**\n     * Delete file\n     */\n    deleteFile = async (id: number, showAlert = true) => {\n        try {\n\n            let confirm = showAlert ? window.confirm(\"Are you sure you want to delete this file?\") : true;\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${fileURL}${id}/`);\n                await this.getContent(this.currentFolder.id);\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString());\n        }\n    };\n\n    /**\n     * Delete folder by id\n     */\n    deleteFolder = async (id: number) => {\n        try {\n            let confirm = window.confirm(\"Are you sure you want to delete this folder?\");\n            if (confirm && this.currentFolder) {\n                await Axios.delete<Nas>(`${url}${id}/`);\n                await this.getContent(this.currentFolder.id);\n            }\n        } catch (err) {\n            alert(\"Upload Failed: \" + err.toString());\n        }\n    };\n\n    /**\n     * Create folder with name\n     * @param name\n     */\n    createNewFolder = async (name: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.post<Folder>(url, { name: name, parent: this.currentFolder.id ? this.currentFolder.id : null });\n            this.currentFolder.folders.push(res.data);\n        } else {\n            alert(\"Create new folder error: empty parent folder\");\n        }\n    };\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameFolder = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<Folder>(`${url}${id}/`, { \"name\": newName });\n            let index = this.currentFolder.folders.findIndex((f) => f.id === id);\n            if (index > -1) {\n                this.currentFolder.folders[index] = res.data;\n            }\n        } else {\n            alert(\"Rename new folder error: empty parent folder\");\n        }\n    };\n\n\n    /**\n     * Rename the folder \n     * @param id folder id\n     * @param newName new name\n     */\n    renameDocument = async (id: number, newName: string) => {\n        if (this.currentFolder) {\n            let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { \"name\": newName });\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id);\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data;\n            }\n        } else {\n            alert(\"Rename new document error\");\n        }\n    };\n\n    /**\n     * Get document from server.\n     * We need this function because we are getting abstract document object from server\n     * at begining(Which doesn't include content field).\n     * \n     * We will Call this function when user want to edit the file\n     */\n    getDocument = async (id: string | number): Promise<NasDocument> => {\n\n        let res = await Axios.get<NasDocument>(`${documentURL}${id}/`);\n        /// Need to parse the content into js object\n        return Promise.resolve({ ...res.data, content: JSON.parse(res.data.content) });\n\n    };\n\n    /**\n     * Create new document\n     * @param name: Name of the document\n     * @param data: EditorJS object\n     */\n    createNewDocument = async (name: string, data?: DeltaStatic, parent?: any) => {\n        let res = await Axios.post<NasDocument>(documentURL,\n            {\n                name: name, parent: this.currentFolder && this.currentFolder.id ? this.currentFolder.id : parent,\n                content: data ? JSON.stringify(data.ops) : undefined\n            });\n        this.currentFolder && this.currentFolder.documents.push(res.data);\n        return res.data;\n    };\n\n    /**\n     * Update Document\n     * @param id: document's id\n     * @param data: EditorJS object\n     */\n    updateDocument = async (id: number, name: string, data: DeltaStatic) => {\n\n        let res = await Axios.patch<NasDocument>(`${documentURL}${id}/`, { name, content: JSON.stringify(data?.ops) });\n        if (this.currentFolder) {\n            let index = this.currentFolder.documents.findIndex((f) => f.id === id);\n            if (index > -1) {\n                this.currentFolder.documents[index] = res.data;\n            }\n\n        }\n\n    };\n\n    /**\n     * Delete document by id\n     * \n     * @param id: document's id\n     */\n    deleteDocument = async (id: number) => {\n        if (this.currentFolder) {\n            let confirm = window.confirm(\"Do you want to delete this document?\");\n            if (confirm) {\n                let res = await Axios.delete<NasDocument>(`${documentURL}${id}/`);\n                await this.getContent(this.currentFolder.id);\n                return Promise.resolve(res.data);\n            } else {\n\n            }\n\n        } else {\n            alert(\"Create new folder error: empty parent folder\");\n            return Promise.reject();\n        }\n    };\n\n}\n","/** @format */\n\nimport React, { Component } from \"react\";\nimport { Nas } from \"./interfaces/nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile,\n} from \"./interfaces/Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\nimport Axios from \"axios\";\nimport { updateDescriptionURL } from \"./urls\";\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface HomePageContext {\n  nas: Nas;\n  selectedDocument?: NasDocument;\n  uploadInfo?: UploadInfo;\n  updateUploadInfo(info?: UploadInfo): void;\n  uploadFiles?: File[];\n  uploadedFiles: File[];\n  setUploadInfo(files?: File[]): void;\n  update(): void;\n  fetch(id: any): Promise<void>;\n  selectDocument(doc?: NasDocument): void;\n  setUploadedFiles(files: File[]): void;\n  updateDescription(): Promise<void>;\n  isLoading: boolean;\n}\n\ninterface HomePageProps extends RouteComponentProps<RouterProps> {}\n\nexport class HomePageProvider extends Component<\n  HomePageProps,\n  HomePageContext\n> {\n  constructor(props: HomePageProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      selectDocument: this.selectDocument,\n      updateUploadInfo: this.updateUploadInfo,\n      setUploadInfo: this.setUploadInfo,\n      update: this.update,\n      uploadedFiles: [],\n      fetch: this.fetch,\n      setUploadedFiles: this.setUploadedFile,\n      updateDescription: this.updateDescription,\n      isLoading: false,\n    };\n  }\n\n  updateDescription = async () => {\n    try {\n      this.setState({ isLoading: true });\n      await Axios.get(updateDescriptionURL);\n      let id = this.props.match.params.id;\n      await this.fetch(id);\n    } catch (err) {\n      alert(err);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  setUploadedFile = (files: File[]) => {\n    this.setState({ uploadedFiles: files });\n  };\n\n  selectDocument = (document?: NasDocument) => {\n    this.setState({ selectedDocument: document });\n  };\n\n  updateUploadInfo = (uploadInfo?: UploadInfo) => {\n    this.setState({ uploadInfo });\n  };\n\n  setUploadInfo = (file: File[]) => {\n    this.setState({ uploadFiles: file });\n  };\n\n  async componentDidUpdate(oldProps: HomePageProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      await this.fetch(id);\n    }\n  }\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    await this.fetch(id);\n  }\n\n  fetch = async (id: any) => {\n    this.setState({ isLoading: true });\n    const { nas } = this.state;\n    await nas.getContent(id);\n    this.setState({ nas, isLoading: false });\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas,\n    });\n  };\n\n  render() {\n    return (\n      <HomePageContext.Provider value={this.state}>\n        {this.props.children}\n      </HomePageContext.Provider>\n    );\n  }\n}\n\n//@ts-ignore\nconst context: HomePageContext = {\n  nas: new Nas(),\n  uploadedFiles: [],\n  setUploadedFiles: (files: File[]) => {},\n  update: () => {},\n  selectDocument: () => {},\n  updateUploadInfo: (info: UploadInfo) => {},\n  setUploadInfo: (files: File[]) => {},\n  isLoading: false,\n};\n\nexport const HomePageContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../../models/interfaces/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport * as path from \"path\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Button,\n  DialogActions\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  onClose(): void;\n  type: \"file\" | \"folder\" | \"document\";\n  selectedFile: NasFile | NasDocument | Folder;\n}\n\nexport default function RenameDialog(props: Props) {\n  const getDefaultName = () => {\n    switch (props.type) {\n      case \"file\":\n        let ext = path.extname((props.selectedFile as NasFile).filename);\n        return path.basename((props.selectedFile as NasFile).filename, ext);\n\n      case \"folder\":\n        return (props.selectedFile as Folder).name;\n\n      default:\n        return (props.selectedFile as NasDocument).name;\n    }\n  };\n\n  const { nas } = useContext(HomePageContext);\n\n  const [name, setName] = useState<string>(getDefaultName());\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>Rename</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          fullWidth\n          value={name}\n          onChange={e => {\n            setName(e.target.value);\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.onClose();\n            setName(\"\");\n          }}\n        >\n          cancel\n        </Button>\n        <Button\n          onClick={async () => {\n            if (name) {\n              switch (props.type) {\n                case \"file\":\n                  let ext = path.extname(\n                    (props.selectedFile as NasFile).filename\n                  );\n                  await nas.rename(props.selectedFile.id, `${name}${ext}`);\n                  break;\n                case \"folder\":\n                  await nas.renameFolder(props.selectedFile.id, name);\n                  break;\n                case \"document\":\n                  await nas.renameDocument(props.selectedFile.id, name);\n                  break;\n              }\n            }\n            props.onClose();\n          }}\n        >\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./interfaces/nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./interfaces/Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\n//@ts-ignore\n\ninterface MovingContext {\n  nas: Nas;\n  update(): void;\n}\n\ninterface MovingProps {}\n\nexport class MovingProvider extends Component<MovingProps, MovingContext> {\n  constructor(props: MovingProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      update: this.update\n    };\n  }\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <MovingContext.Provider value={this.state}>\n        {this.props.children}\n      </MovingContext.Provider>\n    );\n  }\n}\n\nconst context: MovingContext = {\n  nas: new Nas(),\n  update: () => {}\n};\n\nexport const MovingContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  CardActions,\n  IconButton,\n  CircularProgress,\n  Fade,\n  Collapse,\n  LinearProgress,\n  Tooltip,\n  Divider\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport { FixedSizeList } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nimport { Button } from \"semantic-ui-react\";\nimport { MovingContext } from \"../../../models/MovingContext\";\nimport {\n  Folder,\n  File as NasFile,\n  Document as NasDocument\n} from \"../../../models/interfaces/Folder\";\n\ninterface Props {\n  currentFile: Folder | NasFile | NasDocument;\n  onClose(): void;\n  onMove(file: Folder | NasFile | NasDocument, dest: Folder): Promise<void>;\n}\n\nexport default function MoveDialog(props: Props) {\n  const { nas, update } = useContext(MovingContext);\n  const { currentFile, onMove, onClose } = props;\n  const [loading, setLoading] = useState(false);\n  const [loadingFolder, setLoadingFolder] = useState(\n    nas.currentFolder === undefined\n  );\n\n  if (!nas.currentFolder) {\n    nas\n      .getContent(currentFile.parent as any)\n      .then(() => {\n        setLoadingFolder(false);\n      })\n      .catch(err => {\n        alert(`${err}`);\n        setLoadingFolder(false);\n      });\n  }\n\n  return (\n    <Card style={{ width: \"400px\" }}>\n      <CardContent>\n        <div>\n          <IconButton\n            disabled={nas.currentFolder?.parent === undefined}\n            onClick={async () => {\n              setLoadingFolder(true);\n              await nas.getContent(nas.currentFolder?.parent);\n              update();\n              setTimeout(() => {\n                setLoadingFolder(false);\n              }, 500);\n            }}\n          >\n            <ArrowBackIosIcon />\n          </IconButton>\n          {nas.currentFolder?.name ?? \"root\"}\n        </div>\n        <Collapse in={loadingFolder} mountOnEnter unmountOnExit>\n          <LinearProgress style={{ backgroundColor: \"#47bcff\" }} />\n        </Collapse>\n\n        <Collapse in={!loadingFolder} mountOnEnter unmountOnExit>\n          <List style={{ padding: 0, maxHeight: 400, overflowY: \"auto\" }}>\n            {nas.currentFolder?.folders?.map((f, i) => (\n              <ListItem\n                key={`folder-${i}`}\n                button\n                onClick={async () => {\n                  setLoadingFolder(true);\n                  await nas.getContent(f.id);\n                  update();\n                  setTimeout(() => {\n                    setLoadingFolder(false);\n                  }, 500);\n                }}\n              >\n                <ListItemIcon>\n                  <FolderIcon />\n                </ListItemIcon>\n                <ListItemText primary={f.name} />\n              </ListItem>\n            ))}\n          </List>\n        </Collapse>\n        <Divider />\n      </CardContent>\n      <CardActions disableSpacing>\n        <Tooltip title=\"New Folder\">\n          <IconButton>\n            <CreateNewFolderIcon />\n          </IconButton>\n        </Tooltip>\n        <Button\n          loading={loading}\n          color=\"blue\"\n          style={{ marginLeft: \"auto\" }}\n          size=\"tiny\"\n          onClick={async () => {\n            if (currentFile && nas.currentFolder) {\n              try {\n                setLoading(true);\n                await onMove(currentFile, nas.currentFolder);\n                setTimeout(() => {\n                  setLoading(false);\n                  update();\n                  onClose();\n                  nas.currentFolder = undefined;\n                }, 400);\n              } catch (err) {\n                alert(\"Cannot move to this location\");\n                setLoading(false);\n              }\n            }\n          }}\n        >\n          Move Here\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport {\n  Segment,\n  MessageHeader,\n  Message,\n  Icon,\n  Modal,\n  Image,\n  SemanticICONS,\n  Divider,\n  Label,\n  Button,\n  Popup,\n  Grid,\n} from \"semantic-ui-react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  Collapse,\n  Dialog,\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport Axios from \"axios\";\nimport \"video-react/dist/video-react.css\";\nimport {\n  Folder,\n  Document as NasDocument,\n} from \"../../../../models/interfaces/Folder\";\n\nimport { NavLink } from \"react-router-dom\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport RenameDialog from \"../files/RenameDialog\";\nimport { downloadURL } from \"../../../../models/urls\";\nimport MoveDialog from \"../../../document/components/MoveDialog\";\n\nexport default function ListPanel() {\n  const { nas, isLoading, update } = useContext(HomePageContext);\n  const [showMoveToDialog, setShowMoveToDialog] = useState(false);\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedFolder, setSelectedFolder] = useState<Folder | undefined>(\n    undefined\n  );\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      style={{\n        overflow: \"auto\",\n        overflowX: \"hidden\",\n        height: \"100%\",\n        color: \"blue\",\n      }}\n    >\n      <List>\n        <Grid centered>\n          <Grid.Row verticalAlign=\"middle\">\n            <Grid.Column width={5}>\n              <IconButton\n                onClick={() => {\n                  window.location.href = `#/home/${\n                    nas.currentFolder?.parent ?? \"\"\n                  }`;\n                }}\n              >\n                <ArrowBackIosIcon />\n              </IconButton>\n            </Grid.Column>\n            <Grid.Column width={11}>\n              <div style={{ color: \"black\" }}>\n                {nas.currentFolder && nas.currentFolder.name}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        {nas.errorMsg && (\n          <Message error>\n            <MessageHeader>Network Error</MessageHeader>\n            <div>{nas.errorMsg.toString()}</div>\n          </Message>\n        )}\n        <Collapse in={!isLoading} timeout={300}>\n          {/*Render Folders*/}\n          {nas.currentFolder &&\n            nas.currentFolder.folders.map((f, i) => (\n              <ListItem button key={`folder-${f.id}`}>\n                <ListItemAvatar>\n                  <Icon name=\"folder\" size=\"large\" color=\"grey\"></Icon>\n                </ListItemAvatar>\n                <ListItemText\n                  onClick={() => {\n                    window.location.href = `#/home/${f.id}`;\n                  }}\n                  style={{ color: \"black\" }}\n                  primary={f.name}\n                  secondary={moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                />\n                {/** folder menu button */}\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={(e) => {\n                      handleClick(e);\n                      setSelectedFolder(f);\n                    }}\n                  >\n                    <MoreHorizIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n\n                {/** end folder menu button */}\n              </ListItem>\n            ))}\n        </Collapse>\n        {/*End Render Folders*/}\n      </List>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem\n          onClick={() => {\n            setShowRenameDialog(true);\n            handleClose();\n          }}\n        >\n          Rename\n        </MenuItem>\n        <MenuItem\n          onClick={async () => {\n            if (selectedFolder) {\n              let response = await Axios.post(\n                `${downloadURL}${selectedFolder.id}`\n              );\n\n              const link = document.createElement(\"a\");\n              link.href = `${response.data.download_url}`;\n              console.log(link.href);\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n            }\n          }}\n        >\n          Download Folder\n        </MenuItem>\n        <MenuItem\n          onClick={async () => {\n            if (selectedFolder) {\n              await nas.deleteFolder(selectedFolder.id);\n              handleClose();\n              update();\n              setSelectedFolder(undefined);\n            }\n          }}\n        >\n          Delete\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            handleClose();\n            setShowMoveToDialog(true);\n          }}\n        >\n          Move To\n        </MenuItem>\n      </Menu>\n\n      {selectedFolder && showRenameDialog && (\n        <RenameDialog\n          type=\"folder\"\n          selectedFile={selectedFolder}\n          open={showRenameDialog}\n          onClose={() => {\n            setSelectedFolder(undefined);\n            setShowRenameDialog(false);\n          }}\n        />\n      )}\n\n      {selectedFolder && showMoveToDialog && (\n        <Dialog\n          open={showMoveToDialog}\n          onClose={() => {\n            setShowMoveToDialog(false);\n            setSelectedFolder(undefined);\n          }}\n        >\n          <MoveDialog\n            currentFile={selectedFolder}\n            onClose={() => {\n              setShowMoveToDialog(false);\n              setSelectedFolder(undefined);\n            }}\n            onMove={async (file, dest) => {\n              if (file.id === dest.id) {\n                throw Error(\"Cannot move to this place\");\n              }\n              await nas.moveFolderTo(file.id, dest.id);\n              update();\n            }}\n          />\n        </Dialog>\n      )}\n    </div>\n  );\n}\n","// @ts-nocheck\nimport React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  isDir: boolean;\n}\n\nexport interface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n  uploadedDataSize: number;\n  totalDataSize: number;\n}\n\nexport default function UploadDialog(props: Props) {\n  const {\n    nas,\n    update,\n    uploadInfo,\n    setUploadInfo,\n    uploadFiles,\n    updateUploadInfo,\n    setUploadedFiles,\n    uploadedFiles\n  } = useContext(HomePageContext);\n\n  const onInputChange = e => {\n    let uploadFiles = e.target.files;\n    if (uploadFiles) {\n      let l: File[] = [];\n      for (var i = 0; i < uploadFiles.length; i++) {\n        l.push(uploadFiles[i]);\n      }\n\n      setUploadInfo(l);\n    }\n  };\n\n  return (\n    <Modal open={props.open}>\n      <Modal.Header>Select {props.isDir ? \"Folder\" : \"Files\"} </Modal.Header>\n      <Modal.Content>\n        <Grid.Row>\n          {props.isDir ? (\n            <input\n              type=\"file\"\n              multiple\n              webkitdirectory=\"\"\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          ) : (\n            <input\n              type=\"file\"\n              multiple\n              name=\"Upload file\"\n              onChange={onInputChange}\n            />\n          )}\n        </Grid.Row>\n        {uploadInfo && (\n          <Grid.Row style={{ marginTop: 20 }}>\n            <Segment>\n              <Progress\n                percent={uploadInfo.progress}\n                attached=\"top\"\n                color=\"green\"\n                active\n              />\n              {uploadInfo.currentName} {uploadInfo.currentIndex}/\n              {uploadInfo.total} --- {uploadInfo.progress} %\n              <Progress\n                percent={(uploadInfo.currentIndex / uploadInfo.total) * 100}\n                attached=\"bottom\"\n                color=\"blue\"\n                active\n              />\n            </Segment>\n          </Grid.Row>\n        )}\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> {uploadInfo ? \"Minimize\" : \"Close\"}\n        </Button>\n        <Button\n          disabled={uploadFiles === undefined}\n          color=\"green\"\n          loading={uploadInfo !== undefined}\n          inverted\n          onClick={async () => {\n            if (uploadFiles) {\n              await nas.uploadFile(\n                uploadFiles,\n                props.isDir,\n                (\n                  index: number,\n                  progress: number,\n                  current: number,\n                  total: number\n                ) => {\n                  updateUploadInfo({\n                    total: uploadFiles.length,\n                    currentIndex: index,\n                    currentName: uploadFiles[index]\n                      ? uploadFiles[index].name\n                      : \"Finished\",\n                    progress: progress,\n                    uploadedDataSize: current,\n                    totalDataSize: total\n                  });\n                },\n                async file => {\n                  uploadedFiles.push(file);\n                  // setUploadedFiles(uploadedFiles);\n                }\n              );\n              update();\n              setTimeout(() => {\n                props.setOpen(false);\n                setUploadInfo(undefined);\n                updateUploadInfo(undefined);\n              }, 300);\n            }\n          }}\n        >\n          <Icon name=\"checkmark\" /> Upload\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import { FieldIcon } from \"./Icon\";\nimport { FieldAction } from \"./Action\";\nimport { string } from \"prop-types\";\n\n\ninterface Extra {\n    default?: any;\n    help?: string;\n    related_model?: string;\n    choices?: Choice[]\n\n}\n\nexport enum Widget {\n    text = \"text\",\n    number = \"number\",\n    datetime = \"datetime\",\n    foreignkey = \"foreignkey\",\n    unknown = \"unknown\",\n    select = \"select\",\n    tomanyTable = \"tomany-table\"\n}\n\ninterface Validation {\n    length: Length\n\n}\n\nexport interface Choice {\n    label: string;\n    value: any;\n}\n\ninterface Length {\n    maximum?: number;\n    minimum?: number;\n}\n\nexport interface Schema {\n    label: string;\n    readonly: boolean;\n    /// Could be null\n    extra?: Extra;\n    /// Map's key\n    name: string;\n    /// If widget type is not defined in the enum, then\n    /// return widgetType.unknown\n    widget: Widget | string;\n    required: boolean;\n    /// could be null\n    validations?: Validation;\n    /// this is value will be displayed at screen if set,\n    /// else null\n    value?: any;\n    /// Set this value only if the field includes selection\n    choice?: Choice;\n    /// icon for the field\n    /// this will be set through the params of JSONForm widget\n    icon?: FieldIcon;\n    /// action for the field\n    /// this will be set through the params of JSONForm widget\n    action?: FieldAction;\n\n}\n\n\n\nexport class SchemaList {\n\n    schemaList: Schema[];\n\n    constructor(schemas: Schema[]) {\n        schemas.forEach(s => {\n            if (s.extra && s.extra.default) {\n                s.value = s.extra.default\n            }\n        })\n        this.schemaList = schemas;\n    }\n\n    merge(values: { [key: string]: any }) {\n        this.schemaList = this.schemaList.map((s) => {\n            if (values[s.name]) {\n                let value = values[s.name];\n                if (s.widget == Widget.select) {\n                    let choice: Choice | undefined = s.extra\n                        && s.extra.choices\n                        && s.extra.choices.find((c) => c.value === value)\n                    s.choice = choice;\n                } else if (s.widget == Widget.foreignkey) {\n                    let choice: Choice = value;\n                    s.choice = choice;\n                    s.value = value.value;\n                } else {\n                    s.value = value;\n                }\n            }\n            return s;\n        });\n    }\n\n    onSubmit(): { [key: string]: any } {\n        console.log(this.schemaList)\n        let maps: { [key: string]: any } = {};\n        this.schemaList.filter(s => !s.readonly && s.widget !== Widget.tomanyTable).forEach((s) => maps[s.name] = s.value);\n        console.log(maps)\n        return maps;\n\n    }\n\n}\n","import React, { useState, useContext } from \"react\";\nimport {\n  Modal,\n  Segment,\n  Progress,\n  Grid,\n  Button,\n  Icon\n} from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport { SchemaList, Schema, Widget } from \"../../JSONSchema/model/Schema\";\nimport { DialogContent } from \"@material-ui/core\";\nimport {\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogTitle\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n}\n\ninterface UploadInfo {\n  currentName: string;\n  progress: number;\n  total: number;\n  currentIndex: number;\n}\n\nconst schema: Schema[] = [\n  {\n    name: \"name\",\n    label: \"Folder Name\",\n    readonly: false,\n    required: true,\n    widget: Widget.text\n  }\n];\n\nexport default function NewFolderDialog(props: Props) {\n  const { nas, update } = useContext(HomePageContext);\n  const [folderName, setFolderName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <Dialog open={props.open} fullWidth>\n      <DialogTitle>New Folder</DialogTitle>\n      <DialogContent>\n        <TextField\n          onChange={e => {\n            setFolderName(e.target.value);\n          }}\n          value={folderName}\n          color=\"secondary\"\n          fullWidth\n          label=\"Folder Name\"\n          required\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button basic color=\"red\" onClick={() => props.setOpen(false)}>\n          <Icon name=\"remove\" /> No\n        </Button>\n        <Button\n          basic\n          color=\"green\"\n          onClick={async () => {\n            setIsLoading(true);\n            await nas.createNewFolder(folderName);\n            update();\n            setIsLoading(false);\n            props.setOpen(false);\n          }}\n          loading={isLoading}\n        >\n          <Icon name=\"add\" /> Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/interfaces/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function CreateDocumentDialog(props: Props) {\n  const [name, setName] = useState<string | undefined>();\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  return (\n    <Dialog open={props.open} onClose={() => props.setOpen(false)} fullWidth>\n      <DialogTitle>Document</DialogTitle>\n      <DialogContent>\n        <TextField\n          color=\"secondary\"\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            props.setOpen(false);\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (name) {\n                await nas.createNewDocument(name, undefined);\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  Button,\n  Icon,\n  Grid,\n  Breadcrumb,\n  Segment,\n  Card,\n  MenuItem as MMenuItem\n} from \"semantic-ui-react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport UploadDialog from \"../files/UploadDialog\";\nimport NewFolderDialog from \"../folders/NewFolderDialog\";\nimport Editor from \"../documents/Editor\";\nimport { ContextMenu, MenuItem } from \"react-contextmenu\";\n\nimport { Menu } from \"semantic-ui-react\";\nimport CreateDocumentDialog from \"../documents/CreateDocumentDialog\";\n\nexport default function NasMenus() {\n  const { nas } = useContext(HomePageContext);\n\n  const [openFilesUpload, setOpenFilesUpload] = useState(false);\n  const [openFolderUpload, setOpenFolderUpload] = useState(false);\n  const [openNewFolder, setOpenNewFolder] = useState(false);\n  const [openEditor, setOpenEditor] = useState(false);\n\n  return (\n    <div>\n      <ContextMenu id=\"folder\">\n        <Menu id=\"folder\" vertical>\n          <MenuItem\n            onClick={() => {\n              setOpenNewFolder(true);\n            }}\n          >\n            <MMenuItem>New Folder</MMenuItem>\n          </MenuItem>\n        </Menu>\n      </ContextMenu>\n      <ContextMenu id=\"files\">\n        <Menu vertical>\n          <MMenuItem onClick={() => setOpenEditor(true)}>\n            New Document\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFilesUpload(true);\n            }}\n          >\n            Upload Files\n          </MMenuItem>\n          <MMenuItem\n            onClick={() => {\n              setOpenFolderUpload(true);\n            }}\n          >\n            Upload Folder\n          </MMenuItem>\n        </Menu>\n      </ContextMenu>\n      <UploadDialog\n        isDir={false}\n        open={openFilesUpload}\n        setOpen={setOpenFilesUpload}\n      />\n      <UploadDialog\n        isDir={true}\n        open={openFolderUpload}\n        setOpen={setOpenFolderUpload}\n      />\n      <NewFolderDialog\n        open={openNewFolder}\n        setOpen={setOpenNewFolder}\n      ></NewFolderDialog>\n      <CreateDocumentDialog open={openEditor} setOpen={setOpenEditor} />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./interfaces/nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { SystemInfo } from \"./interfaces/Folder\";\nimport Axios from \"axios\";\nimport { systemURL } from \"./urls\";\n\ninterface SystemContext {\n  systemInfo?: SystemInfo;\n}\n\ninterface SystemProps {}\n\nexport class SystemProvider extends Component<SystemProps, SystemContext> {\n  constructor(props: SystemProps) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    let info = await this.fetchSystemInfo();\n    if (info) {\n      this.setState({ systemInfo: info });\n    }\n    // setInterval(async () => {\n    //   let info = await this.fetchSystemInfo();\n    //   console.log(\"Update system info\");\n    //   if (info) {\n    //     this.setState({ systemInfo: info });\n    //   }\n    // }, 20000);\n  }\n\n  fetchSystemInfo = async (): Promise<SystemInfo> => {\n    let info = await Axios.get<SystemInfo>(systemURL);\n    return Promise.resolve(info.data);\n  };\n\n  render() {\n    return (\n      <SystemContext.Provider value={this.state}>\n        {this.props.children}\n      </SystemContext.Provider>\n    );\n  }\n}\n\nconst context: SystemContext = {};\n\nexport const SystemContext = React.createContext(context);\n","export function formatBytes(bytes: number, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}","import React, { useContext } from \"react\";\nimport { Progress, Message } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\nimport { formatBytes } from \"../files/utils\";\n\nexport default function ComputerStatus() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return (\n      <Message>\n        <p>No Info Avaliable currently</p>\n      </Message>\n    );\n  }\n  return (\n    <div>\n      <span>\n        Used Sapce: {formatBytes(systemInfo.disk.used)}/\n        {formatBytes(systemInfo.disk.total)}\n      </span>\n      <Progress\n        percent={((systemInfo.disk.used / systemInfo.disk.total) * 100).toFixed(\n          2\n        )}\n        size=\"tiny\"\n        color=\"green\"\n      />\n    </div>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button } from \"semantic-ui-react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Document as NasDocument } from \"../../../../models/interfaces/Folder\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport \"react-quill/dist/quill.snow.css\";\nimport ReactQuill, { Quill } from \"react-quill\";\n\ninterface Props {\n  open: boolean;\n  setOpen(open: boolean): void;\n  document?: NasDocument;\n}\n\nexport default function Editor(props: Props) {\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n  const [name, setName] = useState<string | undefined>();\n  const [isChanged, setIsChanged] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const { document } = props;\n  const { nas, update } = useContext(HomePageContext);\n\n  if (name === undefined) {\n    setName(document ? document.name : \"\");\n  }\n\n  return (\n    <Modal open={props.open} centered={false}>\n      <Modal.Header>\n        <TextField\n          value={name}\n          label=\"You Document Title\"\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          fullWidth\n        />\n      </Modal.Header>\n      <Modal.Content>\n        <ReactQuill\n          ref={instance => setEditor(instance != null ? instance : undefined)}\n          defaultValue={document && document.content}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          onClick={() => {\n            if (isChanged) {\n              let confirm = window.confirm(\n                \"Are you sure you want to exit? You will lose unsave data.\"\n              );\n              if (confirm) {\n                props.setOpen(false);\n              }\n            } else {\n              props.setOpen(false);\n            }\n          }}\n        >\n          close\n        </Button>\n        <Button\n          loading={isLoading}\n          color=\"blue\"\n          onClick={async () => {\n            try {\n              setIsloading(true);\n              if (editor && name) {\n                let data = editor.getEditor().getContents();\n                if (document) {\n                  // update current document\n                  await nas.updateDocument(document.id, name, data);\n                } else {\n                  if (name !== \"\") {\n                    await nas.createNewDocument(name, data);\n                  } else {\n                    throw \"Name should not be empty\";\n                  }\n                }\n                update();\n                setName(undefined);\n                props.setOpen(false);\n                setIsloading(false);\n              }\n            } catch (err) {\n              alert(err.toString());\n              setIsloading(false);\n            }\n          }}\n        >\n          Save\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  IconButton,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  CardActionArea,\n  Grid,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport {\n  Folder,\n  Document as NasDocument,\n} from \"../../../../models/interfaces/Folder\";\nimport RenameDialog from \"./RenameDialog\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function FilesActions() {\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [shadow, setShadow] = useState<number>();\n  const [showRenameDialog, setShowRenameDialog] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState<NasDocument>();\n\n  return (\n    <div style={{ width: \"100%\", margin: \"20px\" }}>\n      <Grid container spacing={3}>\n        {/*Render documents*/}\n        {nas.currentFolder &&\n          nas.currentFolder.documents.map((f, i) => (\n            <Grid item xs={6} md={3} key={`document-${i}`}>\n              <Card variant=\"outlined\" raised={shadow === i ? true : false}>\n                <NavLink to={`/document/${f.id}`}>\n                  <CardActionArea style={{ height: 80 }}>\n                    <CardContent>\n                      <h3>{f.name}</h3>\n                    </CardContent>\n                  </CardActionArea>\n                </NavLink>\n                <CardActions>\n                  <IconButton\n                    onClick={async () => {\n                      await nas.deleteDocument(f.id);\n                      update();\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                  <IconButton\n                    onClick={async () => {\n                      setSelectedDocument(f);\n                      setShowRenameDialog(true);\n                    }}\n                  >\n                    <EditIcon />\n                  </IconButton>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        {/*End Render documents*/}\n      </Grid>\n      {selectedDocument && (\n        <RenameDialog\n          type=\"document\"\n          open={showRenameDialog}\n          selectedFile={selectedDocument}\n          onClose={() => {\n            setShowRenameDialog(false);\n            setSelectedDocument(undefined);\n            update();\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","/** @format */\nimport { File as NasFile } from \"../../interfaces/Folder\";\n\n\nexport abstract class BaseFileActionPlugin {\n  /**\n   * The title display when user click on file's action button\n   */\n  menuString: string;\n\n  constructor() {\n    this.menuString = \"Base Plugin\";\n  }\n\n  /**\n   * Whether the menu should show.\n   * Return true, show\n   * @param nasFile Nas File\n   */\n  abstract shouldShow(nasFile: NasFile): boolean;\n\n  /**\n   * When action menu is clicked\n   */\n  abstract onClick(nasFile: NasFile): Promise<undefined> | Promise<Promise<any>>;\n}\n","import { BaseFileActionPlugin } from '../BasePlugin';\nimport { File as NasFile } from \"../../../interfaces/Folder\";\nimport Axios from 'axios';\nimport { convertCaptionURL } from '../../../urls';\nimport FileSaver from 'file-saver';\n\n\nexport class SubtitleConverterPlugin extends BaseFileActionPlugin {\n    constructor() {\n        super();\n        this.menuString = \"Convert to vtt\";\n    }\n\n    shouldShow(nasFile: NasFile): boolean {\n        return nasFile.filename.includes(\"srt\");\n    }\n\n\n    async onClick(nasFile: NasFile) {\n        let result = await Axios.post(\n            `${convertCaptionURL}${nasFile.id}`\n        );\n        let filename = nasFile.filename.replace(\".srt\", \".vtt\");\n        let content = result.data.content;\n        let blob = new Blob([content], {\n            type: \"text/plain;charset=utf-8\",\n        });\n        FileSaver.saveAs(blob, filename);\n        return undefined;\n    }\n\n}","/** @format */\n\nimport React, { Component } from \"react\";\nimport { File as NasFile } from \"../../interfaces/Folder\";\n\nexport interface Render {\n  file: NasFile;\n  onClose(promise?: Promise<any>): void;\n}\n\nexport abstract class BaseFilePlugin {\n  shouldGetFileContent(): boolean {\n    return false;\n  }\n\n  /**\n   * Get plugin's name. Used for plugin path mapping\n   */\n  abstract getPluginName(): string;\n\n  /**\n   * Whether the plugin should open\n   */\n  abstract shouldShow(file: NasFile): boolean;\n\n  abstract shouldOpenNewPage(file: NasFile): boolean;\n\n  openFile(arg: Render): JSX.Element | undefined {\n    if (this.shouldShow(arg.file)) {\n      if (this.shouldOpenNewPage(arg.file)) {\n        window.open(`#/plugin/${this.getPluginName()}/${arg.file.id}`);\n        let promise = new Promise((resolve) =>\n          window.addEventListener(\"closed-plugin\", resolve)\n        );\n        arg.onClose(promise);\n        return undefined;\n      } else {\n        return this.render(arg);\n      }\n    }\n    return undefined;\n  }\n\n  abstract render(arg: Render): JSX.Element;\n}\n","import Axios from 'axios';\nimport { fileContentURL, fileURL } from './urls';\nimport { PaginationResponse, File as NasFile, Folder } from './interfaces/Folder';\nexport class FileContentManager {\n\n    static async getFile(fileId: string): Promise<NasFile> {\n        let response = await Axios.get<NasFile>(`${fileURL}${fileId}`);\n        return response.data;\n    }\n\n    /**\n     * Get file content by id\n     * @param file File id\n     */\n    static async getContentById(fileId: string): Promise<NasFile> {\n        let response = await Axios.get(`${fileContentURL}${fileId}`);\n        return response.data;\n    }\n\n    /**\n * Get file content\n * @param file File url\n */\n    static async getContent(fileId: string): Promise<any> {\n        let response = await Axios.get(`${fileId}`);\n        return response.data;\n    }\n\n\n    static async createFileWithName(name: String, parent: Folder): Promise<NasFile> {\n        let response = await Axios.post<NasFile>(`${fileContentURL}/`, { filename: name, parent: parent?.id, });\n\n        return response.data;\n    }\n\n    static async updateFileContent(id: number, content: string): Promise<NasFile> {\n        let response = await Axios.patch(`${fileContentURL}${id}/`, { file_content: content });\n        return response.data;\n    }\n}","export const languages = [\"abap\", \"aes\", \"apex\", \"azcli\", \"bat\", \"c\", \"cameligo\", \"clojure\", \"coffeescript\", \"cpp\", \"csharp\", \"csp\", \"css\", \"dart\", \"dockerfile\", \"fsharp\", \"go\", \"graphql\", \"handlebars\", \"hcl\", \"html\", \"ini\", \"java\", \"javascript\", \"json\", \"julia\", \"kotlin\", \"less\", \"lexon\", \"lua\", \"markdown\", \"mips\", \"msdax\", \"mysql\", \"objective-c\", \"pascal\", \"pascaligo\", \"perl\", \"pgsql\", \"php\", \"plaintext\", \"postiats\", \"powerquery\", \"powershell\", \"pug\", \"python\", \"r\", \"razor\", \"redis\", \"redshift\", \"restructuredtext\", \"ruby\", \"rust\", \"sb\", \"scala\", \"scheme\", \"scss\", \"shell\", \"sol\", \"sql\", \"st\", \"swift\", \"systemverilog\", \"tcl\", \"twig\", \"typescript\", \"vb\", \"verilog\", \"xml\", \"yaml\", \"text\"];","/** @format */\n\nimport React from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport { File as NasFile } from \"../../../../interfaces/Folder\";\nimport {\n  AppBar,\n  createMuiTheme,\n  makeStyles,\n  Toolbar,\n  Tooltip,\n  Grid,\n  Container,\n  Menu,\n  MenuItem,\n  Chip,\n  Divider,\n  Card,\n  Typography,\n} from \"@material-ui/core\";\nimport { ThemeProvider, IconButton } from \"@material-ui/core\";\nimport AutosizeInput from \"react-input-autosize\";\nimport * as path from \"path\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport { fileURL } from \"../../../../urls\";\nimport Axios from \"axios\";\nimport AwesomeDebouncePromise from \"awesome-debounce-promise\";\nimport { FileContentManager } from \"../../../../FileContentManager\";\nimport { Button } from \"@material-ui/core\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { languages } from \"./languages\";\nimport { NavLink } from \"react-router-dom\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: \"#ffffff\",\n    },\n    primary: {\n      main: \"#00b2ff\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appbar: {\n    height: \"90px\",\n  },\n\n  container: {\n    marginTop: \"100px\",\n  },\n  button: {\n    padding: \"4px 6px\",\n    minWidth: \"40px\",\n    fontSize: \"14px\",\n    fontWeight: \"normal\",\n    textTransform: \"capitalize\",\n  },\n  menuItem: {\n    minWidth: 150,\n  },\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"18px\",\n    paddingTop: 5,\n    paddingBottom: 5,\n    marginRight: 10,\n  },\n  largeIcon: {\n    width: 40,\n    height: 40,\n  },\n\n  tag: {\n    paddingLeft: 6,\n    paddingRight: 6,\n    backgroundColor: \"#fbbc04\",\n  },\n}));\n\nexport default function CodeViewer(props: {\n  file: NasFile;\n  codeMapping: { [key: string]: string };\n}) {\n  const classes = useStyles();\n  const [fileEl, setfileEl] = React.useState<null | HTMLElement>(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [language, setLanguage] = React.useState(\"text\");\n  const { file, codeMapping } = props;\n  const [fileName, setFileName] = React.useState(file.filename);\n\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", () => {\n      onClose();\n    });\n  }, []);\n\n  React.useEffect(() => {\n    setFileName(file.filename);\n    let lang = codeMapping[path.extname(file.filename)] ?? \"text\";\n    setLanguage(lang);\n  }, [file]);\n\n  const updateFileName = async () => {\n    try {\n      setIsLoading(true);\n      let url = `${fileURL}${file.id}/`;\n      await Axios.patch(url, { filename: fileName });\n    } catch (err) {\n      window.alert(\"Cannot rename\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateFileContent = async (content: string) => {\n    setIsLoading(true);\n    try {\n      await FileContentManager.updateFileContent(file.id, content);\n    } catch (err) {\n      window.alert(`Cannot save file: ${err}`);\n    } finally {\n      setTimeout(() => setIsLoading(false), 400);\n    }\n  };\n\n  const onClose = () => {\n    const customEvent = new CustomEvent(\"closed-plugin\", {\n      detail: {},\n    });\n    window.opener.dispatchEvent(customEvent);\n  };\n\n  const updateFileContentAPI = AwesomeDebouncePromise(updateFileContent, 500);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={{ width: \"100%\" }}>\n        <AppBar elevation={0} className={classes.appbar} color=\"secondary\">\n          <Toolbar>\n            <IconButton\n              onClick={() => {\n                onClose();\n                window.close();\n              }}\n            >\n              <DescriptionIcon\n                className={classes.largeIcon}\n                fontSize=\"large\"\n                color=\"primary\"\n              />\n            </IconButton>\n            <Grid style={{ marginLeft: 10 }}>\n              <Grid\n                style={{ padding: 0 }}\n                container\n                alignContent=\"center\"\n                alignItems=\"center\"\n              >\n                <AutosizeInput\n                  id=\"test-input\"\n                  className={classes.notchedOutline}\n                  onChange={(e) => {\n                    setFileName(e.target.value);\n                  }}\n                  onBlur={async () => {\n                    updateFileName();\n                  }}\n                  style={{\n                    maxWidth: window.innerWidth * 0.8,\n                  }}\n                  value={fileName}\n                />\n                <Tooltip title=\"Current language\">\n                  <Card elevation={0} className={classes.tag}>\n                    <Typography\n                      variant=\"button\"\n                      style={{ fontWeight: \"normal\" }}\n                    >\n                      {language}\n                    </Typography>\n                  </Card>\n                </Tooltip>\n              </Grid>\n\n              <Grid container alignItems=\"baseline\">\n                <Button\n                  className={classes.button}\n                  size=\"small\"\n                  onClick={(e) => setfileEl(e.currentTarget)}\n                >\n                  Languages\n                </Button>\n                <Typography\n                  variant=\"subtitle1\"\n                  style={{\n                    textDecoration: \"underline\",\n                    color: \"grey\",\n                    marginLeft: 20,\n                    fontSize: 15,\n                  }}\n                >\n                  {isLoading\n                    ? \"Commnucating with server\"\n                    : \"All changes saved in Drive\"}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Menu\n              style={{ marginLeft: 20 }}\n              anchorEl={fileEl}\n              keepMounted\n              open={Boolean(fileEl)}\n              getContentAnchorEl={null}\n              anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n              transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n              onClose={() => {\n                setfileEl(null);\n              }}\n            >\n              {languages.map((l, i) => (\n                <MenuItem\n                  key={l}\n                  className={classes.menuItem}\n                  onClick={async () => {\n                    setfileEl(null);\n                    setLanguage(l);\n                  }}\n                >\n                  {l} {l === language && <DoneIcon />}\n                </MenuItem>\n              ))}\n            </Menu>\n          </Toolbar>\n        </AppBar>\n        <Container className={classes.container}>\n          <Editor\n            height=\"85vh\"\n            language={language}\n            defaultValue={file.file_content}\n            onChange={async (newValue, e) => {\n              await updateFileContentAPI(newValue ?? \"\");\n            }}\n          />\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\n","/** @format */\nimport React, { Component } from \"react\";\nimport { File as NasFile } from \"../../../../interfaces/Folder\";\nimport { BaseFilePlugin, Render } from \"../../BaseFilePlugin\";\nimport * as path from \"path\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\n\nimport CodeViewr from \"./CodeViewer\";\nimport { DialogTitle } from \"@material-ui/core\";\n\nconst codeMapping: { [key: string]: string } = {\n  \".py\": \"python\",\n  \".java\": \"java\",\n  \".jsx\": \"javascript\",\n  \".tsx\": \"typescript\",\n  \".lua\": \"lua\",\n  \".html\": \"html\",\n  \".js\": \"javascript\",\n  \".ts\": \"typescript\",\n  \".dart\": \"dart\",\n  \".c\": \"c\",\n  \".h\": \"c\",\n  \".yml\": \"yaml\",\n  \".swift\": \"swift\",\n  \".md\": \"markdown\",\n  \".txt\": \"text\",\n  \".rtf\": \"text\",\n  \".css\": \"css\",\n  \".scss\": \"css\",\n  \".cpp\": \"cpp\",\n  \".xml\": \"xml\",\n};\n\nconst codeExt = [\n  \".py\",\n  \".java\",\n  \".jsx\",\n  \".tsx\",\n  \".lua\",\n  \".html\",\n  \".js\",\n  \".ts\",\n  \".dart\",\n  \".c\",\n  \".h\",\n  \".yml\",\n  \".swift\",\n  \".md\",\n  \".txt\",\n  \".rtf\",\n  \".css\",\n  \".scss\",\n  \".cpp\",\n  \".xml\",\n  \"Dockerfile\",\n  \".go\",\n];\n\nexport class CodeFilePlugin extends BaseFilePlugin {\n  shouldGetFileContent(): boolean {\n    return true;\n  }\n\n  getPluginName(): string {\n    return \"coder\";\n  }\n  shouldOpenNewPage(file: NasFile): boolean {\n    return true;\n  }\n  shouldShow(file: NasFile): boolean {\n    if (file.size > 100 * 1024 * 1024 * 1024) {\n      window.alert(\"Too large to open\");\n      return false;\n    }\n    return codeExt.includes(path.extname(file.filename) || file.filename);\n  }\n\n  render(arg: Render): JSX.Element {\n    const { file, onClose } = arg;\n    return <CodeViewr file={arg.file} codeMapping={codeMapping} />;\n  }\n}\n","import { BaseFileActionPlugin } from '../BasePlugin';\nimport { File as NasFile } from \"../../../interfaces/Folder\";\nimport Axios from 'axios';\nimport { convertCaptionURL } from '../../../urls';\nimport FileSaver from 'file-saver';\nimport { CodeFilePlugin } from \"../../file plugins/plugins/codeFilePlugin/CodeFilePlugin\";\n\n\nexport class CodeActionPlugin extends BaseFileActionPlugin {\n    constructor() {\n        super();\n        this.menuString = \"Open With Code Editor\";\n    }\n\n    shouldShow(nasFile: NasFile): boolean {\n        return true;\n    }\n\n\n    async onClick(nasFile: NasFile) {\n        let plugin = new CodeFilePlugin();\n        window.open(`#/plugin/${plugin.getPluginName()}/${nasFile.id}`);\n        let promise = new Promise<any>((resolve) =>\n            window.addEventListener(\"closed-plugin\", resolve)\n        );\n\n        return promise;\n    }\n\n}","/** @format */\n\nimport React, { Component } from \"react\";\nimport { Nas } from \"./interfaces/nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile,\n} from \"./interfaces/Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\nimport Axios from \"axios\";\nimport { updateDescriptionURL, convertCaptionURL } from \"./urls\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport FileSaver from \"file-saver\";\nimport { BaseFileActionPlugin } from \"./Plugins/file action plugins/BasePlugin\";\nimport { SubtitleConverterPlugin } from \"./Plugins/file action plugins/plugins/SubtitlePlugin\";\nimport { CodeFilePlugin } from \"./Plugins/file plugins/plugins/codeFilePlugin/CodeFilePlugin\";\nimport { CodeActionPlugin } from \"./Plugins/file action plugins/plugins/CodePlugin\";\n\ninterface FileActionContext {\n  nas?: Nas;\n  currentFile?: NasFile;\n  showRenameDialog: boolean;\n  showMoveToDialog: boolean;\n  anchor?: HTMLElement;\n  openMenu(anchor: HTMLElement, file: NasFile, nas: Nas): void;\n  closeMenu(): void;\n  setCurrentFile(file: NasFile): void;\n  closeRenameDialog(): void;\n  closeMoveToDialog(): void;\n  renderMenu(): any;\n}\n\ninterface FileActionProps {}\n\nexport class FileActionProvider extends Component<\n  FileActionProps,\n  FileActionContext\n> {\n  plugins: BaseFileActionPlugin[];\n\n  constructor(props: FileActionProps) {\n    super(props);\n    this.plugins = [new SubtitleConverterPlugin(), new CodeActionPlugin()];\n    this.state = {\n      showRenameDialog: false,\n      showMoveToDialog: false,\n      openMenu: this.openMenu,\n      closeMoveToDialog: this.closeMoveToDialog,\n      closeRenameDialog: this.closeRenameDialog,\n      setCurrentFile: this.setCurrentFile,\n      closeMenu: this.closeMenu,\n      renderMenu: this.renderMenu,\n    };\n  }\n\n  openMenu = (anchor: HTMLElement, file: NasFile, nas: Nas) => {\n    this.setState({ currentFile: file, anchor: anchor, nas: nas });\n  };\n\n  closeMenu = () => {\n    this.setState({ currentFile: undefined, anchor: undefined });\n  };\n\n  hideMenu = () => {\n    this.setState({ anchor: undefined });\n  };\n\n  setCurrentFile = (file: NasFile) => {\n    this.setState({ currentFile: file });\n  };\n\n  closeRenameDialog = () => {\n    this.setState({ showRenameDialog: false, currentFile: undefined });\n  };\n\n  closeMoveToDialog = () => {\n    this.setState({ showMoveToDialog: false, currentFile: undefined });\n  };\n\n  renderMenu = () => {\n    const { currentFile, anchor, nas } = this.state;\n    if (nas === undefined) {\n      return <div></div>;\n    }\n    if (nas)\n      return (\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchor}\n          keepMounted\n          open={Boolean(anchor)}\n          onClose={this.closeMenu}\n        >\n          <MenuItem\n            onClick={() => {\n              /// Download from link\n              if (currentFile) {\n                const link = document.createElement(\"a\");\n                link.setAttribute(\"download\", currentFile.filename);\n                link.href = `${currentFile.file}`;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n              }\n              this.closeMenu();\n            }}\n          >\n            Download\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (currentFile) {\n                this.hideMenu();\n                this.setState({ showRenameDialog: true });\n              }\n            }}\n          >\n            Rename\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (currentFile) {\n                await nas.deleteFile(currentFile.id);\n                this.closeMenu();\n                this.setState({ nas: nas });\n              }\n            }}\n          >\n            Delete\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              if (currentFile) {\n                this.hideMenu();\n                this.setState({ showMoveToDialog: true });\n              }\n            }}\n          >\n            Move To\n          </MenuItem>\n          {this.plugins.map(\n            (plugin, index) =>\n              currentFile &&\n              plugin.shouldShow(currentFile) && (\n                <MenuItem\n                  onClick={async () => {\n                    let result = await plugin.onClick(currentFile);\n                    this.closeMenu();\n                    if (result) {\n                      await result;\n                      window.location.reload();\n                    }\n                  }}\n                >\n                  {plugin.menuString}\n                </MenuItem>\n              )\n          )}\n        </Menu>\n      );\n  };\n\n  render() {\n    return (\n      <FileActionContext.Provider value={this.state}>\n        {this.props.children}\n      </FileActionContext.Provider>\n    );\n  }\n}\n\n//@ts-ignore\nconst context: FileActionContext = {};\n\nexport const FileActionContext = React.createContext(context);\n","/** @format */\nimport React, { Component } from \"react\";\nimport { File as NasFile } from \"../../../interfaces/Folder\";\nimport { BaseFilePlugin, Render } from \"../BaseFilePlugin\";\nimport * as path from \"path\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\n\nconst { Player } = require(\"video-react\");\n\nexport const videoExt = [\".mov\", \".mp4\", \".avi\", \".m4v\", \".MOV\", \".MP4\"];\nexport class VideoFilePlugin extends BaseFilePlugin {\n  getPluginName(): string {\n    return \"video\";\n  }\n  shouldOpenNewPage(file: NasFile): boolean {\n    return false;\n  }\n  shouldShow(file: NasFile): boolean {\n    return videoExt.includes(path.extname(file.filename));\n  }\n\n  render(arg: Render): JSX.Element {\n    const { file, onClose } = arg;\n    return (\n      <Dialog key={file.id} open={true} onClose={() => onClose()} fullWidth>\n        <DialogTitle>{path.basename(file.filename)}</DialogTitle>\n        <Player poster={file.cover}>\n          <source src={file.file} />\n        </Player>\n        <DialogActions>\n          <Button onClick={() => onClose()}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","/** @format */\nimport React, { Component } from \"react\";\nimport { File as NasFile } from \"../../../interfaces/Folder\";\nimport { BaseFilePlugin, Render } from \"../BaseFilePlugin\";\nimport * as path from \"path\";\nimport { Dialog, CardMedia, DialogActions, Button } from \"@material-ui/core\";\nimport Musicplayer from \"../../../../pages/home/components/files/music/Musicplayer\";\n\nexport const imageExt = [\n  \".jpg\",\n  \".png\",\n  \".bmp\",\n  \".JPG\",\n  \".gif\",\n  \".jpeg\",\n  \".JPEG\",\n];\nexport class ImageFilePlugin extends BaseFilePlugin {\n  getPluginName(): string {\n    return \"image\";\n  }\n  shouldOpenNewPage(file: NasFile): boolean {\n    return false;\n  }\n  shouldShow(file: NasFile): boolean {\n    return imageExt.includes(path.extname(file.filename));\n  }\n\n  render(arg: Render): JSX.Element {\n    const { file, onClose } = arg;\n    return (\n      <Dialog open={true} onClose={() => onClose()} fullWidth>\n        <CardMedia image={file.file} style={{ width: \"100%\", height: 700 }} />\n        <DialogActions>\n          <Button onClick={() => onClose()}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport {\n  Icon,\n  Modal,\n  SemanticICONS,\n  Dropdown,\n  CardContent,\n} from \"semantic-ui-react\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  TableContainer,\n  TableHead,\n  Table,\n  TableCell,\n  TableRow,\n  Menu,\n  MenuItem,\n  TableBody,\n  IconButton,\n  Popper,\n  Paper,\n  CardMedia,\n  Card,\n  CardActionArea,\n  Checkbox,\n  Toolbar,\n  Tooltip,\n  DialogTitle,\n  DialogContent,\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport FileSaver, { saveAs } from \"file-saver\";\nimport \"video-react/dist/video-react.css\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile,\n} from \"../../../../models/interfaces/Folder\";\nimport Editor from \"../documents/Editor\";\nimport {\n  downloadURL,\n  fileURL,\n  downloadMultipleURL,\n} from \"../../../../models/urls\";\nimport { Grid } from \"semantic-ui-react\";\nimport FilesActions from \"./FilesActions\";\nimport RenameDialog from \"./RenameDialog\";\nimport { formatBytes } from \"./utils\";\nimport PDFViewer from \"./pdf/PDFViewer\";\nimport { Dialog } from \"@material-ui/core\";\nimport MoveDialog from \"../../../document/components/MoveDialog\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport Musicplayer from \"./music/Musicplayer\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport Axios from \"axios\";\nimport fileDownload from \"js-file-download\";\nimport { convertCaptionURL } from \"../../../../models/urls\";\nimport { FileActionContext } from \"../../../../models/FileActionContext\";\nimport { MusicFilePlugin } from \"../../../../models/Plugins/file plugins/plugins/MusicFilePlugin\";\nimport { BaseFilePlugin } from \"../../../../models/Plugins/file plugins/BaseFilePlugin\";\nimport { videoExt } from \"../../../../models/Plugins/file plugins/plugins/VideoFilePlugin\";\nimport { imageExt } from \"../../../../models/Plugins/file plugins/plugins/ImageFilePlugin\";\n\nfunction isImage(filepath: string): boolean {\n  return imageExt.includes(path.extname(filepath));\n}\n\nfunction isVideo(filepath: string): boolean {\n  return videoExt.includes(path.extname(filepath));\n}\n\nfunction getIcon(filepath: string): SemanticICONS {\n  if (isImage(filepath)) {\n    return \"images\";\n  } else if (isVideo(filepath)) {\n    return \"file video\";\n  }\n\n  return \"file\";\n}\n\nexport default function ListFilesPanel(props: { plugins: BaseFilePlugin[] }) {\n  const { plugins } = props;\n  const {\n    nas,\n    isLoading,\n    update,\n    selectedDocument,\n\n    selectDocument,\n    fetch,\n  } = useContext(HomePageContext);\n  const {\n    openMenu,\n    renderMenu,\n    currentFile,\n    showRenameDialog,\n    showMoveToDialog,\n    closeMoveToDialog,\n    closeRenameDialog,\n  } = useContext(FileActionContext);\n  const [previewAnchor, setPreviewAnchor] = React.useState<null | HTMLElement>(\n    null\n  );\n  const [selectedFile, setSelectedFile] = useState<NasFile>();\n  const [selectedFiles, setSelectedFiles] = useState<NasFile[]>([]);\n  const [onHoverFile, setOnHoverFile] = useState<NasFile>();\n  const [showMultiMoveDialog, setShowMultiMoveDialog] = useState(false);\n\n  const handleClosePreview = () => {\n    setPreviewAnchor(null);\n  };\n\n  const onClose = React.useCallback(async (promise?: Promise<any>) => {\n    setSelectedFile(undefined);\n    if (promise) {\n      await promise;\n      await fetch(nas.currentFolder?.id);\n    }\n  }, []);\n\n  return (\n    <div id=\"file-list\">\n      <Grid>\n        <FilesActions />\n        <Toolbar>\n          <div>\n            {selectedFiles.length === 0 ? (\n              <h2>Files</h2>\n            ) : (\n              <h2>Selected {selectedFiles.length} files</h2>\n            )}\n          </div>\n          {selectedFiles.length === 0 ? (\n            <div> </div>\n          ) : (\n            <div>\n              <Tooltip title=\"Download files\">\n                <IconButton\n                  aria-label=\"download\"\n                  onClick={async () => {\n                    try {\n                      let res = await Axios.post(\n                        `${downloadMultipleURL}`,\n                        selectedFiles.map((f) => f.id)\n                      );\n                      const link = document.createElement(\"a\");\n                      link.href = `${res.data.download_url}`;\n                      console.log(link.href);\n                      document.body.appendChild(link);\n                      link.click();\n                      document.body.removeChild(link);\n                    } catch (err) {\n                      alert(err);\n                    }\n                  }}\n                >\n                  <GetAppIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Delete\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={async () => {\n                    let confirm = window.confirm(\n                      \"Do you want to delete these files?\"\n                    );\n                    if (confirm) {\n                      for (let file of selectedFiles) {\n                        await nas.deleteFile(file.id, false);\n                        update();\n                      }\n                      setSelectedFiles([]);\n                    }\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n\n              <Tooltip title=\"Move To\">\n                <IconButton\n                  aria-label=\"Move To\"\n                  onClick={async () => {\n                    setShowMultiMoveDialog(true);\n                  }}\n                >\n                  <FileCopyIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n          )}\n        </Toolbar>\n        <Grid.Row style={{ overflow: \"auto\", overflowX: \"hidden\" }}>\n          {/** Render files */}\n          {nas.currentFolder && nas.currentFolder.files.length > 0 && (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <Checkbox\n                        onChange={(e) => {\n                          if (e.target.checked) {\n                            if (nas.currentFolder)\n                              setSelectedFiles(nas.currentFolder.files);\n                          } else {\n                            setSelectedFiles([]);\n                          }\n                          update();\n                        }}\n                        checked={\n                          selectedFiles.length ===\n                          nas.currentFolder.files.length\n                        }\n                      />\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Last Modify</TableCell>\n                    <TableCell>Size</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {nas.currentFolder.files.map((f, i) => (\n                    <TableRow\n                      key={`file-${i}`}\n                      hover\n                      selected={selectedFiles.includes(f)}\n                    >\n                      <TableCell>\n                        <Checkbox\n                          checked={selectedFiles.includes(f)}\n                          onChange={(e) => {\n                            if (e.target.checked) {\n                              selectedFiles.push(f);\n                            } else {\n                              let index = selectedFiles.indexOf(f);\n                              selectedFiles.splice(index, 1);\n                            }\n                            update();\n                            setSelectedFiles(selectedFiles);\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        style={{ cursor: \"grab\" }}\n                        onMouseOver={(e) => {\n                          setPreviewAnchor(e.currentTarget);\n                          setOnHoverFile(f);\n                        }}\n                        onMouseLeave={() => {\n                          handleClosePreview();\n                          setOnHoverFile(undefined);\n                        }}\n                        onClick={() => {\n                          setSelectedFile(f);\n                        }}\n                      >\n                        <Icon\n                          name={getIcon(f.file)}\n                          size=\"large\"\n                          color=\"teal\"\n                        />\n                        {path.basename(f.filename)}\n                      </TableCell>\n                      <TableCell>\n                        {moment(f.modified_at).format(\"MMM DD, YYYY\")}\n                      </TableCell>\n                      <TableCell>{formatBytes(f.size)}</TableCell>\n                      <TableCell>\n                        <IconButton\n                          onClick={(e) => {\n                            openMenu(e.currentTarget, f, nas);\n                          }}\n                        >\n                          <MoreHorizIcon></MoreHorizIcon>\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n          {/** End Render files */}\n        </Grid.Row>\n        {currentFile && renderMenu()}\n\n        {/** Plugins */}\n        {plugins.map((plugin, index) => {\n          if (selectedFile) {\n            let component = plugin.openFile({\n              file: selectedFile,\n              onClose: onClose,\n            });\n\n            return component;\n          }\n        })}\n        {/** End Plugins */}\n        {selectedDocument && (\n          <Editor\n            open={selectedDocument !== undefined}\n            setOpen={(v) => {\n              !v && selectDocument(undefined);\n            }}\n            document={selectedDocument}\n          ></Editor>\n        )}\n\n        {/** MoveToDialog */}\n        {currentFile && (\n          <Dialog\n            open={showMoveToDialog}\n            scroll=\"paper\"\n            onClose={() => {\n              closeMoveToDialog();\n            }}\n          >\n            <MoveDialog\n              currentFile={currentFile}\n              onClose={() => {\n                closeMoveToDialog();\n              }}\n              onMove={async (file, dest) => {\n                await nas.moveFileTo(file.id, dest.id);\n                update();\n              }}\n            />\n          </Dialog>\n        )}\n        {/** End move to dialog */}\n        {selectedFiles.length > 0 && (\n          <Dialog\n            open={showMultiMoveDialog}\n            onClose={() => {\n              setShowMultiMoveDialog(false);\n            }}\n          >\n            <MoveDialog\n              currentFile={selectedFiles[0]}\n              onClose={() => {\n                setSelectedFiles([]);\n                setShowMultiMoveDialog(false);\n              }}\n              onMove={async (file, dest) => {\n                for (let f of selectedFiles) {\n                  await nas.moveFileTo(f.id, dest.id);\n                  update();\n                }\n              }}\n            />\n          </Dialog>\n        )}\n        {/** rename dialog */}\n        {currentFile && (\n          <RenameDialog\n            type=\"file\"\n            open={showRenameDialog}\n            selectedFile={currentFile}\n            onClose={() => {\n              closeRenameDialog();\n            }}\n          />\n        )}\n        {/** end rename dialog */}\n      </Grid>\n      {/** Preview */}\n      <Popper open={Boolean(previewAnchor)} anchorEl={previewAnchor}>\n        {onHoverFile && (\n          <Card style={{ padding: 10 }}>\n            {isImage(onHoverFile.filename) && (\n              <CardMedia\n                style={{ height: 140, width: 140 }}\n                image={onHoverFile.file}\n              />\n            )}\n            {isVideo(onHoverFile.filename) ? (\n              onHoverFile.cover ? (\n                <CardActionArea>\n                  <CardMedia\n                    style={{ height: 140, width: 140 }}\n                    image={onHoverFile.cover}\n                  />\n                  <CardContent> {formatBytes(onHoverFile.size)}</CardContent>\n                </CardActionArea>\n              ) : (\n                <div>\n                  {onHoverFile.filename} - {formatBytes(onHoverFile.size)}\n                </div>\n              )\n            ) : (\n              <div>\n                {onHoverFile.filename} - {formatBytes(onHoverFile.size)}\n              </div>\n            )}\n          </Card>\n        )}\n      </Popper>\n      {/** end preview */}\n    </div>\n  );\n}\n","/** @format */\n\nimport React, { useContext } from \"react\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport List from \"@material-ui/core/List\";\nimport { FixedSizeList } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { Icon, Grid, Item } from \"semantic-ui-react\";\nimport {\n  ListItem,\n  ListItemText,\n  LinearProgress,\n  Box,\n  Typography,\n} from \"@material-ui/core\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { SystemContext } from \"../../../../models/SystemContext\";\n\nexport default function UploadFilesSideBar() {\n  const { uploadFiles, uploadInfo, uploadedFiles } = useContext(\n    HomePageContext\n  );\n  const { systemInfo } = useContext(SystemContext);\n  let filtedFiles = uploadFiles\n    ? uploadFiles.filter((f) => !uploadedFiles.includes(f))\n    : [];\n\n  return (\n    <List style={{ overflowY: \"hidden\", height: \"100%\", overflowX: \"hidden\" }}>\n      {systemInfo && (\n        <Grid>\n          <Grid.Row style={{ height: 40 }}>\n            <Grid.Column width={8}>\n              <div>CPU</div>\n              <LinearProgress\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={systemInfo.cpu}\n              />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <div>Memory</div>\n              <LinearProgress\n                title=\"Memory\"\n                color=\"secondary\"\n                variant=\"determinate\"\n                value={(systemInfo.memory.used / systemInfo.memory.total) * 100}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )}\n      <AutoSizer>\n        {({ height, width }) => (\n          <FixedSizeList\n            height={height - 100}\n            itemCount={Math.min(3000, filtedFiles.length)}\n            itemSize={80}\n            width={width}\n          >\n            {({ index, style }) => (\n              <ListItem key={`upload-${index}`} style={style}>\n                <ListItemIcon>\n                  <Icon name=\"file\" />\n                </ListItemIcon>\n                <ListItemText\n                  primary={filtedFiles[index].name}\n                  secondary={\n                    <LinearProgress\n                      color=\"secondary\"\n                      variant={\n                        uploadInfo && uploadInfo.currentIndex === index\n                          ? \"determinate\"\n                          : \"determinate\"\n                      }\n                      value={\n                        uploadInfo && uploadInfo.currentIndex === index\n                          ? uploadInfo.progress\n                          : 0\n                      }\n                    />\n                  }\n                />\n              </ListItem>\n            )}\n          </FixedSizeList>\n        )}\n      </AutoSizer>\n      {uploadFiles === undefined && (\n        <Grid centered verticalAlign=\"middle\">\n          <div style={{ marginTop: \"50px\", marginBottom: \"auto\" }}>\n            No Pending Uploads\n          </div>\n        </Grid>\n      )}\n    </List>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  ListItemSecondaryAction,\n  IconButton,\n  Menu,\n  MenuItem,\n  TextField,\n  CircularProgress,\n  fade,\n  InputBase,\n  MenuList,\n  Popper,\n  Paper,\n  ClickAwayListener,\n  Typography\n} from \"@material-ui/core\";\nimport { HomePageContext } from \"../../../../models/HomeContext\";\nimport moment from \"moment\";\nimport path from \"path\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../../models/interfaces/Folder\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popper: {\n      marginTop: 10,\n      marginRight: 15,\n      width: \"40ch\",\n      maxHeight: 400,\n      overflow: \"auto\"\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport default function SearchField() {\n  const classes = useStyles();\n  const { nas, update } = useContext(HomePageContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [value, setValue] = useState(\"\");\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        {isLoading ? (\n          <CircularProgress size={20} color=\"inherit\" />\n        ) : (\n          <SearchIcon />\n        )}\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput\n        }}\n        inputProps={{ \"aria-label\": \"search\" }}\n        onClick={e => setAnchorEl(e.currentTarget)}\n        onChange={async e => {\n          let keyword = e.target.value;\n          setValue(keyword);\n        }}\n        onKeyDown={async e => {\n          if (e.key === \"Enter\") {\n            setIsLoading(true);\n            await nas.search(value);\n            update();\n            setIsLoading(false);\n          }\n        }}\n      />\n\n      <Popper open={Boolean(anchorEl)} anchorEl={anchorEl}>\n        <ClickAwayListener onClickAway={handleClose}>\n          <Paper className={classes.popper}>\n            {nas.searchedFiles.length === 0 && (\n              <ListItem>No File. Press Enter to search</ListItem>\n            )}\n            {nas.searchedFiles.map(f => (\n              <MenuItem\n                key={f.id}\n                onClick={() => {\n                  window.location.href = `#/home/${f.parent}`;\n                  handleClose();\n                }}\n              >\n                <ListItemText\n                  primary={\n                    <Typography noWrap>{path.basename(f.filename)}</Typography>\n                  }\n                  secondary={<Typography>{f.created_at}</Typography>}\n                />\n              </MenuItem>\n            ))}\n          </Paper>\n        </ClickAwayListener>\n      </Popper>\n    </div>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport Header from \"./components/others/Header\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport ListPanel from \"./components/folders/ListFolderPanel\";\nimport { Segment, Grid } from \"semantic-ui-react\";\nimport NasMenus from \"./components/others/NasMenu\";\nimport ComputerStatus from \"./components/others/ComputerStatus\";\nimport ListFilesPanel from \"./components/files/ListFilesPanel\";\nimport { HomePageContext } from \"../../models/HomeContext\";\nimport { ContextMenuTrigger } from \"react-contextmenu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport UploadFilesSideBar from \"./components/files/UploadFilesSideBar\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport {\n  Menu,\n  Hidden,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n  Typography,\n  InputBase,\n  createMuiTheme,\n  ThemeProvider,\n  Tooltip,\n  MenuItem,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport SearchField from \"./components/files/SearchField\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { BaseFilePlugin } from \"../../models/Plugins/file plugins/BaseFilePlugin\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\",\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    inputRoot: {\n      color: \"inherit\",\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\",\n        },\n      },\n    },\n  })\n);\n\nexport function HomePage(props: { plugins: BaseFilePlugin[] }) {\n  const { nas, isLoading, update, updateDescription } = useContext(\n    HomePageContext\n  );\n  const { plugins } = props;\n  const [show, setShow] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const classes = useStyles();\n\n  return (\n    <div\n      id=\"home\"\n      style={{\n        height: \"100%\",\n        overflow: \"hidden\",\n      }}\n    >\n      {/** App Bar */}\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Hidden mdUp>\n            <IconButton\n              className={classes.menuButton}\n              color=\"inherit\"\n              onClick={() => {\n                setShow(true);\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Hidden>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Django Nas\n          </Typography>\n          <Tooltip title=\"Refresh description\">\n            <IconButton\n              onClick={async () => {\n                await updateDescription();\n              }}\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Open Apps\">\n            <IconButton onClick={(e) => setAnchorEl(e.currentTarget)}>\n              <OpenInNewIcon />\n            </IconButton>\n          </Tooltip>\n          <SearchField />\n        </Toolbar>\n      </AppBar>\n      {/** End App Bar */}\n      {/** drawer */}\n      <Drawer open={show} onClose={() => setShow(false)}>\n        <div style={{ width: 300, height: \"100%\" }}>\n          <ListPanel />\n        </div>\n      </Drawer>\n      {/** end drawer */}\n      <Segment\n        loading={isLoading}\n        style={{\n          height: \"100%\",\n          margin: 0,\n        }}\n      >\n        <Grid\n          style={{\n            height: \"100%\",\n            overflow: \"hidden\",\n            position: \"relative\",\n          }}\n        >\n          <Grid.Row style={{ height: \"100%\", paddingTop: 0, paddingBottom: 0 }}>\n            {/** left side */}\n            <Hidden smDown implementation=\"js\">\n              <Grid.Column\n                computer={3}\n                style={{ height: \"100%\", backgroundColor: \"#fcfcfc\" }}\n              >\n                <ContextMenuTrigger id=\"folder\">\n                  <Grid.Row style={{ height: \"92%\" }}>\n                    <ListPanel />\n                  </Grid.Row>\n                  <Grid.Row>\n                    <ComputerStatus />\n                  </Grid.Row>\n                </ContextMenuTrigger>\n              </Grid.Column>\n            </Hidden>\n            {/** end left */}\n            <Grid.Column\n              computer={10}\n              mobile={16}\n              tablet={16}\n              style={{ height: \"100%\" }}\n            >\n              <ContextMenuTrigger id=\"files\">\n                <ListFilesPanel plugins={plugins} />\n              </ContextMenuTrigger>\n            </Grid.Column>\n            {/** right side */}\n            <Hidden smDown implementation=\"js\">\n              <Grid.Column\n                computer={3}\n                style={{\n                  height: \"100%\",\n                  backgroundColor: \"#fcfcfc\",\n                }}\n              >\n                <UploadFilesSideBar />\n              </Grid.Column>\n            </Hidden>\n            {/** end right side */}\n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <NasMenus />\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(null)}\n      >\n        <NavLink to=\"/music\">\n          <MenuItem>Open Music</MenuItem>\n        </NavLink>\n        <NavLink to=\"/book\">\n          <MenuItem>Open Book</MenuItem>\n        </NavLink>\n        <NavLink to=\"/gallery\">\n          <MenuItem>Open Gallery</MenuItem>\n        </NavLink>\n      </Menu>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  Cell\n} from \"recharts\";\nimport { Segment } from \"semantic-ui-react\";\n\ninterface Props {\n  title: string;\n  used: number;\n  total: number;\n  color: string;\n  color2: string;\n}\nconst data02 = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 }\n];\nexport default function PercentageChart(props: Props) {\n  const { title, used, total, color, color2 } = props;\n  let data = [\n    {\n      name: \"Used\",\n      value: used\n    },\n    { name: \"Available\", value: total - used }\n  ];\n\n  return (\n    <Segment>\n      <ResponsiveContainer\n        minHeight={300}\n        height=\"100%\"\n        width=\"100%\"\n        minWidth={200}\n      >\n        <PieChart>\n          <Pie\n            data={data}\n            dataKey=\"value\"\n            label\n            fill={color}\n            isAnimationActive={false}\n          >\n            <Cell fill={color}></Cell>\n            <Cell fill={color2}></Cell>\n          </Pie>\n\n          <Tooltip></Tooltip>\n        </PieChart>\n      </ResponsiveContainer>\n      <span>{title}</span>\n    </Segment>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Container, Grid, Segment } from \"semantic-ui-react\";\nimport { SystemContext } from \"../../models/SystemContext\";\nimport PercentageChart from \"./PercentageChart\";\n\nexport default function SystemInfoPage() {\n  const { systemInfo } = useContext(SystemContext);\n  if (systemInfo === undefined) {\n    return <div>Infomation Not Available</div>;\n  }\n\n  return (\n    <div id=\"home\" style={{ width: \"100%\", color: \"black\" }}>\n      <Container>\n        <h1>System Info</h1>\n        <Grid columns={2}>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.disk.used / 1024 / 1024)}\n              total={Math.round(systemInfo.disk.total / 1024 / 1024)}\n              title=\"Disk(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={Math.round(systemInfo.memory.used / 1024 / 1024)}\n              total={Math.round(systemInfo.memory.total / 1024 / 1024)}\n              title=\"Memory(MB)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <PercentageChart\n              used={systemInfo.cpu}\n              total={100}\n              title=\"CPU Usage(Percentage)\"\n              color=\"#0088FE\"\n              color2=\"orange\"\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Temperature</h4>\n              <h1>\n                {systemInfo.temperature\n                  ? systemInfo.temperature.toFixed(1)\n                  : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Humidity</h4>\n              <h1>\n                {systemInfo.humidity ? systemInfo.humidity.toFixed(1) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment style={{ height: \"100%\" }}>\n              <h4>Pressure</h4>\n              <h1>\n                {systemInfo.pressure ? systemInfo.pressure.toFixed(2) : \"None\"}\n              </h1>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./interfaces/nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Folder, Document as NasDocument, File as NasFile } from \"./interfaces/Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\nimport * as path from \"path\";\n//@ts-ignore\nimport { MarkdownToQuill } from \"md-to-quill-delta\";\nconst QuillDeltaToHtmlConverter = require(\"quill-delta-to-html\")\n  .QuillDeltaToHtmlConverter;\n\ninterface RouterProps {\n  id: string;\n}\n\ninterface DocumentContext {\n  nas: Nas;\n  isLoading: boolean;\n  errorMsg?: string;\n  currentDocument?: NasDocument;\n  update(): void;\n  updateDocument(doc: NasDocument): void;\n  saveDocument(): Promise<void>;\n  saveToLocal(savingType: \"html\" | \"pdf\"): Promise<void>;\n  oepnFromLocal(): Promise<void>;\n  newDocument(name: string): Promise<void>;\n}\n\ninterface DocumentProps extends RouteComponentProps<RouterProps> {}\n\nexport class DocumentProvider extends Component<\n  DocumentProps,\n  DocumentContext\n> {\n  constructor(props: DocumentProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      isLoading: false,\n      update: this.update,\n      updateDocument: this.update,\n      saveDocument: this.saveDocument,\n      saveToLocal: this.saveToLocal,\n      oepnFromLocal: this.openFromLocal,\n      newDocument: this.newDocument\n    };\n  }\n\n  async componentDidUpdate(oldProps: DocumentProps) {\n    if (this.props.match.params.id !== oldProps.match.params.id) {\n      let id = this.props.match.params.id;\n      if (id) {\n        await this.fetch(id);\n      }\n    }\n  }\n\n  updateDocument = (doc: NasDocument) => {\n    this.setState({ currentDocument: doc });\n  };\n\n  saveDocument = async () => {\n    try {\n      let doc = this.state.currentDocument;\n      if (doc) {\n        this.setState({ isLoading: true });\n        await this.state.nas.updateDocument(doc.id, doc.name, doc.content);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to save\" });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 1000);\n\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  newDocument = async (name: string) => {};\n\n  readFile = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      reader.onload = content => {\n        let text = reader.result;\n\n        resolve(text as string);\n      };\n      reader.readAsText(file);\n    });\n  };\n\n  openFromLocal = async () => {\n    const { currentDocument, nas } = this.state;\n    try {\n      let input =\n        (document.getElementById(\"new file\") as HTMLInputElement) ??\n        document.createElement(\"input\");\n      input.id = \"new file\";\n      input.type = \"file\";\n      input.accept = \".md,.html\";\n      input.multiple = false;\n      input.click();\n      input.addEventListener(\"change\", async e => {\n        this.setState({\n          isLoading: true,\n          errorMsg: \"Reading Local Document...\"\n        });\n        let files = input.files;\n        if (files) {\n          let file = files[0];\n          let ext = path.extname(file.name);\n          if (ext === \".md\") {\n            const converter = new MarkdownToQuill();\n            let content = await this.readFile(file);\n            let delta = converter.convert(content);\n            this.setState({ errorMsg: \"Creating New Document\" });\n            let d = await nas.createNewDocument(\n              file.name,\n              { ops: delta } as any,\n              currentDocument?.parent\n            );\n            this.setState({\n              errorMsg: \"Document Created. Preparing for redirecting\"\n            });\n            setTimeout(() => {\n              this.setState({ isLoading: false, errorMsg: undefined });\n              window.location.href = \"#/document/\" + d.id;\n            }, 1500);\n          }\n        }\n        input.remove();\n      });\n    } catch (err) {\n      this.setState({ errorMsg: \"Unable to open file\", isLoading: false });\n    }\n  };\n\n  saveToLocal = async (savingType: \"html\" | \"pdf\") => {\n    let doc = this.state.currentDocument;\n    if (doc) {\n      switch (savingType) {\n        case \"html\":\n          let converter = new QuillDeltaToHtmlConverter(doc.content);\n          let html = converter.convert();\n          break;\n      }\n    }\n  };\n\n  async componentWillMount() {\n    let id = this.props.match.params.id;\n    if (id) {\n      await this.fetch(id);\n    }\n  }\n\n  fetch = async (id: string) => {\n    try {\n      this.setState({ isLoading: true });\n      let document = await this.state.nas.getDocument(id);\n      setTimeout(() => {\n        this.setState({ currentDocument: document });\n      }, 400);\n    } catch (err) {\n      this.setState({ errorMsg: \"Failed to open\" });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 500);\n      this.setState({ currentDocument: undefined });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <DocumentContext.Provider value={this.state}>\n        {this.props.children}\n      </DocumentContext.Provider>\n    );\n  }\n}\n\n//@ts-ignore\nconst context: DocumentContext = {\n  nas: new Nas(),\n  update: () => {},\n  updateDocument: (d: NasDocument) => {},\n  saveDocument: () => {\n    return Promise.resolve();\n  },\n  oepnFromLocal: () => {\n    return Promise.resolve();\n  },\n  newDocument: () => {\n    return Promise.resolve();\n  },\n  saveToLocal: () => {\n    return Promise.resolve();\n  },\n  isLoading: false\n};\n\nexport const DocumentContext = React.createContext(context);\n","import React, { useContext, useState } from \"react\";\nimport AutosizeInput from \"react-input-autosize\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  Popper,\n  ClickAwayListener,\n  Paper,\n  Fade,\n  Slide,\n  Collapse\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/interfaces/Folder\";\nimport MoveDialog from \"./MoveDialog\";\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"18px\",\n    paddingTop: 5\n  },\n  button: {\n    padding: \"0px 5px\"\n  }\n}));\n\nexport default function Titlebar() {\n  const {\n    currentDocument,\n    updateDocument,\n    saveDocument,\n    isLoading,\n    nas,\n    update\n  } = useContext(DocumentContext);\n\n  const [anchorEl, setAnchorEl] = React.useState<undefined | HTMLElement>();\n  const [numChanges, setNumChanges] = useState(0);\n  const classes = useStyles();\n\n  if (currentDocument === undefined && !isLoading) {\n    return (\n      <div>\n        <AutosizeInput\n          id=\"test-input\"\n          className={classes.notchedOutline}\n          style={{\n            maxWidth: window.innerWidth * 0.8\n          }}\n          value={\"Cannot fetch document\"}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ marginTop: 15, marginLeft: 5 }}>\n      <Collapse in={isLoading && !currentDocument} unmountOnExit mountOnEnter>\n        <div style={{ height: 24, width: 100 }}>\n          <LinearProgress\n            variant=\"indeterminate\"\n            style={{ marginTop: 15, width: 100 }}\n          />\n        </div>\n      </Collapse>\n      <Collapse\n        in={!isLoading || currentDocument !== undefined}\n        mountOnEnter\n        unmountOnExit\n      >\n        <div>\n          <Tooltip title=\"Rename\">\n            <ClickAwayListener\n              onClickAway={async () => {\n                if (numChanges > 0) {\n                  await saveDocument();\n                  setNumChanges(0);\n                }\n              }}\n            >\n              <AutosizeInput\n                id=\"test-input\"\n                className={classes.notchedOutline}\n                style={{\n                  maxWidth: window.innerWidth * 0.8\n                }}\n                value={currentDocument?.name}\n                onChange={e => {\n                  if (currentDocument) {\n                    currentDocument.name = e.target.value;\n                    setNumChanges(numChanges + 1);\n                    updateDocument(currentDocument);\n                  }\n                }}\n              />\n            </ClickAwayListener>\n          </Tooltip>\n          {currentDocument?.show_in_folder && (\n            <Tooltip title=\"Move\">\n              <IconButton\n                className={classes.button}\n                onClick={async e => {\n                  setAnchorEl(e.currentTarget);\n                  if (currentDocument) {\n                    await nas.getContent(currentDocument.parent as number);\n                  }\n\n                  update();\n                }}\n              >\n                <FolderIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n        </div>\n      </Collapse>\n\n      {anchorEl && (\n        <ClickAwayListener onClickAway={() => setAnchorEl(undefined)}>\n          <Popper\n            open={Boolean(anchorEl)}\n            anchorEl={anchorEl}\n            style={{ zIndex: 2000 }}\n            placement=\"right-end\"\n          >\n            {currentDocument && (\n              <MoveDialog\n                currentFile={currentDocument}\n                onClose={() => setAnchorEl(undefined)}\n                onMove={async (file: NasDocument, dest) => {\n                  await nas.moveDocument(file.id, dest.id);\n                  currentDocument.parent = dest.id;\n                  updateDocument(currentDocument);\n                }}\n              />\n            )}\n          </Popper>\n        </ClickAwayListener>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport FormatBoldIcon from \"@material-ui/icons/FormatBold\";\nimport FormatItalicIcon from \"@material-ui/icons/FormatItalic\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport FormatUnderlinedIcon from \"@material-ui/icons/FormatUnderlined\";\nimport {\n  IconButton,\n  makeStyles,\n  Theme,\n  createStyles,\n  withStyles\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    divider: {\n      height: \"10px\",\n      borderLeft: \"6px solid black\"\n    }\n  })\n);\n\nconst StyledToggleButtonGroup = withStyles(theme => ({\n  grouped: {\n    margin: theme.spacing(0.5),\n    border: \"none\",\n    padding: theme.spacing(0, 1),\n    \"&:not(:first-child)\": {\n      borderRadius: theme.shape.borderRadius\n    },\n    \"&:first-child\": {\n      borderRadius: theme.shape.borderRadius\n    }\n  }\n}))(ToggleButtonGroup);\nexport default function ToolsBar() {\n  const classes = useStyles();\n  return (\n    <div id=\"toolbar\">\n      <span className=\"ql-formats\">\n        <select className=\"ql-size\">\n          <option value=\"small\"></option>\n          <option selected></option>\n          <option value=\"large\"></option>\n          <option value=\"huge\"></option>\n        </select>\n        <button type=\"button\" className=\"ql-italic\"></button>\n        <button type=\"button\" className=\"ql-underline\"></button>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-indent\" value=\"-1\"></button>\n          <button type=\"button\" className=\"ql-indent\" value=\"+1\"></button>\n          <select className=\"ql-align\">\n            <option value=\"center\"></option>\n            <option value=\"right\"></option>\n            <option value=\"justify\"></option>\n          </select>\n          <button type=\"button\" className=\"ql-direction\" value=\"rtl\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"ordered\"></button>\n          <button type=\"button\" className=\"ql-list\" value=\"bullet\"></button>\n        </span>\n        <span className=\"ql-formats\">\n          <button type=\"button\" className=\"ql-image\"></button>\n          <button type=\"button\" className=\"ql-code-block\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"sub\"></button>\n          <button type=\"button\" className=\"ql-script\" value=\"super\"></button>\n          <button type=\"button\" className=\"ql-clean\"></button>\n        </span>\n      </span>\n    </div>\n  );\n}\n","import Parchment from \"parchment\";\nimport { Quill } from \"react-quill\";\n\nconst BlockEmbed = Quill.import('blots/block/embed') as { new(node: any, value: any): Object };\nexport class DividerBlot extends BlockEmbed {\n  static blotName = 'divider';\n  static tagName = 'hr';\n}\n","import React, { useContext, useState } from \"react\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\nimport {\n  InputBase,\n  TextField,\n  makeStyles,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  ClickAwayListener\n} from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { Folder, Document as NasDocument } from \"../../../models/interfaces/Folder\";\nimport EditorJS from \"@editorjs/editorjs\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport { DividerBlot } from \"./blots/DividerBlot\";\n\nQuill.register(DividerBlot);\nconst useStyles = makeStyles(theme => ({\n  notchedOutline: {\n    \"&:focus\": {},\n    border: 0,\n    fontWeight: \"normal\",\n    background: \"transparent\",\n    fontSize: \"20px\"\n  }\n}));\n\nexport default function BodyEditor() {\n  const { currentDocument, updateDocument, saveDocument } = useContext(\n    DocumentContext\n  );\n  const [numChanges, setNumberOfChanges] = useState(0);\n  const [editor, setEditor] = useState<ReactQuill | undefined>();\n\n  const save = async () => {\n    if (currentDocument && editor) {\n      let data = editor.getEditor().getContents();\n      currentDocument.content = data;\n      updateDocument(currentDocument);\n      await saveDocument();\n      setNumberOfChanges(0);\n    }\n  };\n\n  const modules = {\n    toolbar: {\n      container: \"#toolbar\"\n    }\n  };\n\n  if (currentDocument === undefined) {\n    return (\n      <ReactQuill\n        style={{\n          height: \"100%\",\n          border: 0,\n          paddingBottom: \"85px\"\n        }}\n        modules={modules}\n      />\n    );\n  }\n\n  return (\n    <ClickAwayListener\n      onClickAway={async () => {\n        if (numChanges > 0) {\n          await save();\n        }\n      }}\n    >\n      <ReactQuill\n        ref={instance => setEditor(instance != null ? instance : undefined)}\n        onKeyDown={async () => {\n          setNumberOfChanges(numChanges + 1);\n          if (numChanges > 3) {\n            await save();\n          }\n        }}\n        onChange={async e => {}}\n        style={{ height: \"100%\", border: 0, paddingBottom: \"85px\" }}\n        defaultValue={currentDocument.content}\n        modules={modules}\n      />\n    </ClickAwayListener>\n  );\n}\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { Button, makeStyles, MenuItem, Menu } from \"@material-ui/core\";\nimport NestedMenuItem from \"material-ui-nested-menu-item\";\nimport { DocumentContext } from \"../../../models/DocumentContext\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    padding: \"4px 6px\",\n    minWidth: \"40px\",\n    fontSize: \"14px\",\n    fontWeight: \"normal\",\n    textTransform: \"capitalize\"\n  },\n  menuItem: {\n    minWidth: 150\n  }\n}));\n\nexport default function MenuBar() {\n  const classes = useStyles();\n  const { isLoading, saveToLocal, oepnFromLocal } = React.useContext(\n    DocumentContext\n  );\n  const [fileEl, setfileEl] = React.useState<null | HTMLElement>(null);\n\n  return (\n    <div>\n      <Button\n        className={classes.button}\n        size=\"small\"\n        onClick={e => setfileEl(e.currentTarget)}\n      >\n        File\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Edit\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Settings\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Tools\n      </Button>\n      <Button className={classes.button} size=\"small\">\n        Help\n      </Button>\n      <span\n        style={{ textDecoration: \"underline\", color: \"grey\", marginLeft: 20 }}\n      >\n        {isLoading ? \"Commnucating with server\" : \"All changes saved in Drive\"}\n      </span>\n      <Menu\n        anchorEl={fileEl}\n        keepMounted\n        open={Boolean(fileEl)}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        onClose={() => {\n          setfileEl(null);\n        }}\n      >\n        <MenuItem\n          onClick={async () => {\n            await oepnFromLocal();\n            setfileEl(null);\n          }}\n        >\n          Open\n        </MenuItem>\n        <NestedMenuItem\n          label=\"Download\"\n          parentMenuOpen={Boolean(fileEl)}\n          className={classes.menuItem}\n        >\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"pdf\");\n              setfileEl(null);\n            }}\n          >\n            PDF Document (.pdf){\" \"}\n          </MenuItem>\n          <MenuItem\n            className={classes.menuItem}\n            onClick={async () => {\n              await saveToLocal(\"html\");\n              setfileEl(null);\n            }}\n          >\n            Web Page (.html){\" \"}\n          </MenuItem>\n        </NestedMenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./interfaces/nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile,\n  BookCollection\n} from \"./interfaces/Folder\";\nimport { UploadInfo } from \"../pages/home/components/files/UploadDialog\";\nimport * as path from \"path\";\nimport Axios from \"axios\";\nimport { bookCollectionURL, documentURL } from \"./urls\";\n\ninterface BookContext {\n  nas: Nas;\n  isLoading: boolean;\n  errorMsg?: string;\n  books: BookCollection[];\n  currentBook?: BookCollection;\n  fetchBookDetail(id: number): Promise<BookCollection | undefined>;\n  deleteDocument(id: number): Promise<void>;\n  moveDocumentTo(doc: NasDocument, dest: BookCollection): Promise<void>;\n  createDocument(title: string, dest: BookCollection): Promise<void>;\n  addNewBook(title: string, desc: string): Promise<void>;\n  updateBook(title: string, desc: string): Promise<void>;\n  deleteBook(book: BookCollection): Promise<void>;\n  onCloseDetailDialog(): void;\n}\n\ninterface BookProps {}\n\nexport class BookProvider extends Component<BookProps, BookContext> {\n  constructor(props: BookProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      isLoading: false,\n      books: [],\n      deleteBook: this.deleteBook,\n      addNewBook: this.addNewBook,\n      updateBook: this.updateBook,\n      createDocument: this.createDocument,\n      moveDocumentTo: this.moveDocumentTo,\n      deleteDocument: this.deleteDocument,\n      fetchBookDetail: this.fetchBookDetail,\n      onCloseDetailDialog: this.onCloseDetailDialog\n    };\n  }\n\n  async componentDidMount() {\n    await this.fetch();\n  }\n\n  fetch = async () => {\n    this.setState({ isLoading: true });\n    try {\n      let response = await Axios.get<BookCollection[]>(bookCollectionURL);\n      this.setState({ books: response.data });\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 300);\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  onCloseDetailDialog = () => {\n    this.setState({ currentBook: undefined });\n  };\n\n  fetchBookDetail = async (\n    id: number,\n    showLoading = true\n  ): Promise<BookCollection | undefined> => {\n    try {\n      if (showLoading) {\n        this.setState({ isLoading: true });\n      }\n\n      let response = await Axios.get<BookCollection>(\n        `${bookCollectionURL}${id}/`\n      );\n      this.setState({ currentBook: response.data });\n      return response.data;\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      setTimeout(() => {\n        this.setState({ isLoading: false });\n      }, 300);\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n    return;\n  };\n\n  deleteDocument = async (id: number): Promise<void> => {\n    try {\n      let response = await Axios.delete(`${documentURL}${id}/`);\n      if (this.state.currentBook) {\n        await this.fetchBookDetail(this.state.currentBook.id, false);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n  moveDocumentTo = async (\n    doc: NasDocument,\n    dest: BookCollection\n  ): Promise<void> => {\n    try {\n      let resp = await Axios.patch(`${documentURL}${doc.id}/`, {\n        collection: dest.id\n      });\n      if (this.state.currentBook) {\n        await this.fetchBookDetail(this.state.currentBook?.id, false);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  createDocument = async (\n    title: string,\n    dest: BookCollection\n  ): Promise<void> => {\n    try {\n      let response = await Axios.post(`${documentURL}/`, {\n        collection: dest.id,\n        name: title,\n        show_in_folder: false\n      });\n      if (this.state.currentBook) {\n        await this.fetchBookDetail(this.state.currentBook.id, false);\n      }\n    } catch (err) {\n      console.log(err);\n      this.setState({ errorMsg: err });\n    }\n  };\n  addNewBook = async (title: string, desc: string): Promise<void> => {\n    try {\n      let response = await Axios.post(`${bookCollectionURL}`, {\n        name: title,\n        description: desc\n      });\n      await this.fetch();\n    } catch (err) {\n      console.log(err);\n      this.setState({ errorMsg: err });\n    }\n  };\n  updateBook = async (title: string, desc: string): Promise<void> => {\n    try {\n      if (this.state.currentBook) {\n        let response = await Axios.patch(\n          `${bookCollectionURL}${this.state.currentBook.id}/`,\n          {\n            name: title,\n            description: desc\n          }\n        );\n        await this.fetchBookDetail(this.state.currentBook.id, false);\n      }\n    } catch (err) {\n      console.log(err);\n      this.setState({ errorMsg: err });\n    }\n  };\n  deleteBook = async (book: BookCollection): Promise<void> => {\n    try {\n      let response = await Axios.delete(`${bookCollectionURL}/${book.id}/`);\n      await this.fetch();\n    } catch (err) {\n      console.log(err);\n      this.setState({ errorMsg: err });\n    }\n  };\n\n  render() {\n    return (\n      <BookContext.Provider value={this.state}>\n        {this.props.children}\n      </BookContext.Provider>\n    );\n  }\n}\n\n//@ts-ignore\nconst context: BookContext = {};\n\nexport const BookContext = React.createContext(context);\n","import React from \"react\";\nimport {\n  Document as NasDocument,\n  BookCollection\n} from \"../../../../models/interfaces/Folder\";\nimport { BookContext } from \"../../../../models/BookContext\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  DialogActions,\n  LinearProgress,\n  Collapse\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  onClose(id?: BookCollection): Promise<void>;\n  currentDoc?: NasDocument;\n}\n\nexport default function MoveBookDialog(props: Props) {\n  const { open, onClose, currentDoc } = props;\n  const { books } = React.useContext(BookContext);\n  const [selectedId, setSelectedId] = React.useState<number | undefined>(\n    currentDoc?.collection\n  );\n  console.log(currentDoc);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle>Move Document to Collection </DialogTitle>\n      <DialogContent>\n        <Collapse in={isLoading} mountOnEnter unmountOnExit>\n          <LinearProgress />\n        </Collapse>\n\n        <FormControl fullWidth>\n          <InputLabel>Book Collections</InputLabel>\n          <Select\n            value={selectedId}\n            onChange={e => {\n              setSelectedId(e.target.value as number);\n            }}\n          >\n            {books.map((b, i) => (\n              <MenuItem key={`book-selection-${i}`} value={b.id}>\n                {b.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={async () => {\n            setIsLoading(true);\n            await onClose();\n            setIsLoading(false);\n          }}\n        >\n          Close\n        </Button>\n        <Button\n          onClick={async () => {\n            setIsLoading(true);\n            if (selectedId) {\n              const book = books.filter(b => b.id === selectedId);\n              if (book.length > 0) {\n                await onClose(book[0]);\n              }\n            }\n\n            setIsLoading(false);\n          }}\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport {\n  Document as NasDocument,\n  BookCollection\n} from \"../../../../models/interfaces/Folder\";\nimport { BookContext } from \"../../../../models/BookContext\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  DialogActions,\n  LinearProgress,\n  Collapse,\n  TextField\n} from \"@material-ui/core\";\n\ninterface Props {\n  open: boolean;\n  onClose(name?: string, description?: string): Promise<void>;\n}\n\nexport default function UpdateCollectionDialog(props: Props) {\n  const { open, onClose } = props;\n  const { books, currentBook } = React.useContext(BookContext);\n  const [name, setname] = React.useState<string | undefined>(currentBook?.name);\n  const [description, setdescription] = React.useState<string | undefined>(\n    currentBook?.description\n  );\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle>Update collection info </DialogTitle>\n      <DialogContent>\n        <Collapse in={isLoading} mountOnEnter unmountOnExit>\n          <LinearProgress />\n        </Collapse>\n        <TextField\n          onChange={e => setname(e.target.value)}\n          value={name}\n          label=\"Name\"\n          title=\"Name\"\n          fullWidth\n        />\n        <TextField\n          value={description}\n          label=\"Description\"\n          title=\"Description\"\n          fullWidth\n          multiline\n          onChange={e => setdescription(e.target.value)}\n          rows={4}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={async () => {\n            setIsLoading(true);\n            await onClose();\n            setIsLoading(false);\n          }}\n        >\n          Close\n        </Button>\n        <Button\n          onClick={async () => {\n            setIsLoading(true);\n            await onClose(name, description);\n            setIsLoading(false);\n          }}\n        >\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport {\n  BookCollection,\n  Document as NasDocument,\n  Folder\n} from \"../../../../models/interfaces/Folder\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n  List,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  CircularProgress,\n  LinearProgress,\n  Collapse,\n  Typography,\n  Tooltip,\n  AppBar,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n  Divider\n} from \"@material-ui/core\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { DialogTitle, Toolbar } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport FlipToFrontIcon from \"@material-ui/icons/FlipToFront\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { BookContext } from \"../../../../models/BookContext\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Container } from \"semantic-ui-react\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoveBookDialog from \"../../../book/components/dialog/MoveBookDialog\";\nimport UpdateCollectionDialog from \"../../../book/components/dialog/UpdateCollectionDialog\";\n\ninterface Props {\n  book: BookCollection;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\"\n      }\n    }\n  })\n);\n\nexport default function BookDrawer() {\n  const classes = useStyles();\n\n  const {\n    deleteDocument,\n    moveDocumentTo,\n    createDocument,\n    updateBook,\n    currentBook,\n    deleteBook\n  } = React.useContext(BookContext);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [currentDoc, setCurrentDoc] = React.useState<NasDocument>();\n  const [showEditDialog, setShowEditDialog] = React.useState(false);\n\n  return (\n    <div style={{ width: 350 }}>\n      <div style={{ marginLeft: 20, marginTop: 30, marginBottom: 30 }}>\n        <Typography variant=\"h5\">\n          {currentBook?.name}\n          <IconButton\n            onClick={() => {\n              setShowEditDialog(true);\n            }}\n          >\n            <EditIcon />\n          </IconButton>\n        </Typography>\n        <Divider />\n        <Typography variant=\"subtitle2\" style={{ color: \"#b5b5b5\" }}>\n          {currentBook?.description}\n        </Typography>\n      </div>\n\n      <Collapse mountOnEnter unmountOnExit in={isLoading}>\n        <LinearProgress />\n      </Collapse>\n      <List>\n        {currentBook?.documents?.map((d, i) => (\n          <ListItem\n            button\n            key={`document-${i}`}\n            onClick={() => {\n              window.location.href = \"#/document/\" + d.id;\n            }}\n          >\n            <ListItemIcon>\n              <BookIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <Tooltip title={d.name}>\n                  <Typography style={{ maxWidth: 150 }} noWrap>\n                    {d.name}\n                  </Typography>\n                </Tooltip>\n              }\n            />\n            <ListItemSecondaryAction>\n              <IconButton\n                onClick={async () => {\n                  let confirm = window.confirm(\n                    \"Do you want to delete this document?\"\n                  );\n                  if (confirm) {\n                    setIsLoading(true);\n                    await deleteDocument(d.id);\n                    setTimeout(() => {\n                      setIsLoading(false);\n                    }, 300);\n                  }\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n              <IconButton\n                onClick={() => {\n                  setCurrentDoc(d);\n                }}\n              >\n                <FlipToFrontIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n        <Button\n          style={{ width: \"100%\", padding: 20 }}\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={async () => {\n            if (currentBook) {\n              await createDocument(\"unnamed document\", currentBook);\n            }\n          }}\n        >\n          Add New Document\n        </Button>\n      </List>\n\n      {currentDoc && (\n        <MoveBookDialog\n          open={Boolean(currentDoc)}\n          onClose={async target => {\n            setCurrentDoc(undefined);\n            if (target) {\n              await moveDocumentTo(currentDoc, target);\n            }\n          }}\n          currentDoc={currentDoc}\n        />\n      )}\n\n      {currentBook && (\n        <UpdateCollectionDialog\n          open={showEditDialog}\n          onClose={async (name, desc) => {\n            if (name && desc) {\n              await updateBook(name, desc);\n            }\n            setShowEditDialog(false);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","/** @format */\n\nimport React, { useState, useContext } from \"react\";\nimport EditorJs from \"react-editor-js\";\nimport { Modal, Button, Grid, Divider } from \"semantic-ui-react\";\nimport {\n  TextField,\n  Backdrop,\n  CircularProgress,\n  Card,\n  AppBar,\n  Toolbar,\n  createMuiTheme,\n  ThemeProvider,\n  IconButton,\n  makeStyles,\n  Container,\n  Paper,\n  Snackbar,\n  Tooltip,\n  Fab,\n  Drawer,\n  Collapse,\n} from \"@material-ui/core\";\nimport { DocumentContext } from \"../../models/DocumentContext\";\nimport Titlebar from \"./components/Titlebar\";\nimport ToolsBar from \"./components/ToolsBar\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport BodyEditor from \"./components/BodyEditor\";\nimport \"../../../document.css\";\nimport { NavLink } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuBar from \"./components/MenuBar\";\nimport BookDrawer from \"./components/book/BookDrawer\";\nimport { BookContext } from \"../../models/BookContext\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: \"#ffffff\",\n    },\n    primary: {\n      main: \"#00b2ff\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appbar: {\n    height: \"90px\",\n  },\n  container: {\n    paddingTop: \"95px\",\n    height: \"100%\",\n  },\n  row: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  largeIcon: {\n    width: 40,\n    height: 40,\n  },\n  menuIcon: {\n    position: \"fixed\",\n    top: 100,\n    left: 30,\n  },\n}));\n\nexport default function DocumentEditor() {\n  const { currentDocument, isLoading, errorMsg } = useContext(DocumentContext);\n  const { fetchBookDetail } = useContext(BookContext);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <AppBar elevation={0} className={classes.appbar} color=\"secondary\">\n          <Toolbar>\n            <Tooltip title=\"Back\">\n              <NavLink to={`/home/${currentDocument?.parent ?? \"\"}`}>\n                <DescriptionIcon\n                  className={classes.largeIcon}\n                  fontSize=\"large\"\n                  color=\"primary\"\n                />\n              </NavLink>\n            </Tooltip>\n            <Grid style={{ marginLeft: 10 }}>\n              <Grid.Row style={{ padding: 0 }}>\n                <Titlebar />\n              </Grid.Row>\n              <Grid.Row style={{ paddingTop: 0, paddingBottom: 0 }}>\n                <MenuBar />\n              </Grid.Row>\n              <Grid.Row style={{ padding: 0 }}>\n                {currentDocument && <ToolsBar />}\n              </Grid.Row>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        <Container id=\"container\" className={classes.container}>\n          <Paper style={{ height: \"90vh\", maxHeight: \"90%\" }} square>\n            {currentDocument && <BodyEditor />}\n          </Paper>\n        </Container>\n        <Drawer\n          open={openDrawer}\n          onClose={() => {\n            setOpenDrawer(false);\n          }}\n        >\n          <BookDrawer />\n        </Drawer>\n        <Collapse in={currentDocument?.show_in_folder === false}>\n          <Tooltip title=\"Show Index\">\n            <Fab\n              className={classes.menuIcon}\n              onClick={async () => {\n                if (currentDocument) {\n                  console.log(currentDocument);\n                  await fetchBookDetail(currentDocument?.collection);\n                  setOpenDrawer(true);\n                }\n              }}\n            >\n              <MenuIcon />\n            </Fab>\n          </Tooltip>\n        </Collapse>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          open={errorMsg !== undefined}\n          message={errorMsg}\n        />\n        <Backdrop\n          open={isLoading && currentDocument === undefined}\n          style={{\n            zIndex: 1,\n            color: \"#fff\",\n          }}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Nas } from \"./interfaces/nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile,\n  PaginationResponse\n} from \"./interfaces/Folder\";\nimport Axios from \"axios\";\nimport * as mm from \"music-metadata-browser\";\nimport { musicURL, musicMetadataURL } from \"./urls\";\nimport queryString from \"query-string\";\nimport { MusicMetadata } from \"./interfaces/Folder\";\n//@ts-ignore\nconst readMusicTag = async (musicSrc: string): Promise<mm.IAudioMetadata> => {\n  const metadata = await mm.fetchFromUrl(musicSrc);\n  return metadata;\n};\ninterface MusicContext {\n  nas: Nas;\n  filterField?: string;\n  isLoading: boolean;\n  errorMsg?: string;\n  currentTabIndex: number;\n  update(): void;\n  currentTag?: mm.IAudioMetadata;\n  currentMusic?: NasFile;\n  musicResponse?: PaginationResponse<NasFile>;\n  paginationURL: string;\n  albums: MusicMetadata[];\n  artists: MusicMetadata[];\n  artistDetail: MusicMetadata[];\n  isSearching: boolean;\n  updateMetadata(): Promise<void>;\n  play(music: NasFile): Promise<void>;\n  stop(): void;\n  fetch(url: string): Promise<void>;\n  search(k: string): Promise<void>;\n  setTabIndex(index: number): Promise<void>;\n  getAlbumsByArtist(artist: string): Promise<void>;\n  presslike(file: NasFile): Promise<void>;\n}\n\ninterface RouterProps {\n  artist?: string;\n  album?: string;\n}\n\ninterface MusicProps extends RouteComponentProps<RouterProps> {}\n\nexport class MusicProvider extends Component<MusicProps, MusicContext> {\n  constructor(props: MusicProps) {\n    super(props);\n    this.state = {\n      nas: new Nas(),\n      paginationURL: musicURL,\n      isLoading: false,\n      currentTabIndex: 0,\n      artistDetail: [],\n      albums: [],\n      artists: [],\n      isSearching: false,\n      update: this.update,\n      play: this.play,\n      stop: this.stop,\n      fetch: this.fetch,\n      search: this.search,\n      updateMetadata: this.updateMetadata,\n      setTabIndex: this.setTabIndex,\n      getAlbumsByArtist: this.getAlbumsByArtist,\n      presslike: this.presslike\n    };\n  }\n\n  async componentDidUpdate(oldProps: MusicProps) {\n    if (\n      this.props.location.search !== oldProps.location.search &&\n      !this.state.isSearching\n    ) {\n      console.log(\"update\");\n      await this.init();\n    }\n  }\n\n  async componentDidMount() {\n    console.log(\"init\");\n    await this.init();\n  }\n\n  getAlbumsByArtist = async (artist: string) => {\n    try {\n      let response = await Axios.get<MusicMetadata[]>(\n        `${musicURL}album/?artist=${artist}`\n      );\n      this.setState({ artistDetail: response.data });\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined, isLoading: false });\n      });\n    }\n  };\n\n  init = async () => {\n    this.setState({ isLoading: true, errorMsg: \"Loading Music Library\" });\n    const values: RouterProps = queryString.parse(this.props.location.search);\n    let musicList: any;\n    if (values.artist) {\n      musicList = await this.filterBy(\"artist\", values.artist);\n    } else if (values.album) {\n      musicList = await this.filterBy(\"album\", values.album);\n    } else {\n      musicList = await this.state.nas.fetchMusicList();\n      this.setState({ filterField: undefined });\n    }\n\n    this.setState({ musicResponse: musicList });\n    setTimeout(() => {\n      this.setState({ isLoading: false });\n    }, 400);\n    setTimeout(() => {\n      this.setState({ errorMsg: undefined });\n    }, 3000);\n  };\n\n  setTabIndex = async (index: number) => {\n    const prevIndex = this.state.currentTabIndex;\n    this.setState({ currentTabIndex: index, isLoading: true });\n    switch (index) {\n      case 1:\n        let albumResponse = await Axios.get(`${musicURL}album/`);\n        this.setState({ albums: albumResponse.data, isLoading: false });\n        break;\n      case 2:\n        let artistResonse = await Axios.get(`${musicURL}artist/`);\n        this.setState({ artists: artistResonse.data, isLoading: false });\n        break;\n\n      case 3:\n        await this.fetch(`${musicURL}?like=true/`);\n        break;\n\n      default:\n        if (prevIndex === 3) {\n          await this.init();\n        }\n        this.setState({ isLoading: false });\n    }\n  };\n\n  /**\n   * Get data filter by field with keyword\n   */\n  filterBy = async (field: string, keyword: string) => {\n    try {\n      this.setState({ filterField: keyword });\n      let response = await Axios.get(`${musicURL}?${field}=${keyword}`);\n      return response.data;\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    }\n  };\n\n  updateMetadata = async () => {\n    this.setState({\n      isLoading: true,\n      errorMsg: \"Updating music metadata... This may take while\"\n    });\n    try {\n      await Axios.patch(`${musicURL}`);\n      let response = await Axios.get<PaginationResponse<NasFile>>(musicURL);\n      this.setState({ musicResponse: response.data });\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      this.setState({ isLoading: false });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 3000);\n    }\n  };\n\n  search = async (keyword: string) => {\n    this.setState({ isSearching: true });\n    window.location.replace(\"#/music\");\n    this.setState({ isLoading: true });\n    try {\n      if (keyword === \"\") {\n        let musicList = await this.state.nas.fetchMusicList();\n        this.setState({\n          musicResponse: musicList,\n          isLoading: false,\n          paginationURL: musicURL\n        });\n      } else {\n        this.setState({ errorMsg: \"Searching \" + keyword });\n        let searchURL = `${musicURL}?search=${keyword}`;\n        let response = await Axios.get<PaginationResponse<NasFile>>(searchURL);\n        this.setState({\n          musicResponse: response.data,\n          paginationURL: searchURL,\n          isLoading: false,\n          filterField: undefined\n        });\n        setTimeout(() => {\n          this.setState({ errorMsg: undefined });\n        }, 3000);\n      }\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      this.setState({ isSearching: false });\n    }\n  };\n\n  fetch = async (url: string) => {\n    try {\n      this.setState({ isLoading: true });\n      let response = await Axios.get<PaginationResponse<NasFile>>(url);\n      this.setState({ musicResponse: response.data });\n    } catch (err) {\n      this.setState({ errorMsg: err });\n    } finally {\n      this.setState({ isLoading: false });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      }, 1000);\n    }\n  };\n\n  presslike = async (file: NasFile) => {\n    try {\n      if (file.music_metadata) {\n        let response = await Axios.patch(\n          `${musicMetadataURL}${file.music_metadata?.id}/`,\n          { like: !file.music_metadata?.like }\n        );\n        file.music_metadata.like = !file.music_metadata.like;\n        this.setState({ musicResponse: this.state.musicResponse });\n      }\n    } catch (err) {\n      this.setState({ errorMsg: err });\n      setTimeout(() => {\n        this.setState({ errorMsg: undefined });\n      });\n    }\n  };\n\n  play = async (music: NasFile) => {\n    this.setState({ currentMusic: music });\n  };\n\n  stop = async () => {\n    this.setState({ currentTag: undefined, currentMusic: undefined });\n  };\n\n  update = () => {\n    this.setState({\n      nas: this.state.nas\n    });\n  };\n\n  render() {\n    return (\n      <MusicContext.Provider value={this.state}>\n        {this.props.children}\n      </MusicContext.Provider>\n    );\n  }\n}\n\n//@ts-ignore\nconst context: MusicContext = {\n  nas: new Nas(),\n  update: () => {},\n  stop: () => {},\n  play: (music: NasFile) => {\n    return Promise.resolve();\n  },\n  isLoading: false\n};\n\nexport const MusicContext = React.createContext(context);\n","import React, { useState, useContext } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport {\n  IconButton,\n  CircularProgress,\n  fade,\n  InputBase\n} from \"@material-ui/core\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { MusicContext } from \"../../../models/MusicContext\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile\n} from \"../../../models/interfaces/Folder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popper: {\n      marginTop: 10,\n      marginRight: 15,\n      width: \"40ch\",\n      maxHeight: 400,\n      overflow: \"auto\"\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\"\n      }\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\"\n        }\n      }\n    }\n  })\n);\n\nexport default function MusicSearchField() {\n  const classes = useStyles();\n  const { search } = useContext(MusicContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div className={classes.search}>\n      <div className={classes.searchIcon}>\n        {isLoading ? (\n          <CircularProgress size={20} color=\"inherit\" />\n        ) : (\n          <SearchIcon />\n        )}\n      </div>\n      <InputBase\n        placeholder=\"Search…\"\n        classes={{\n          root: classes.inputRoot,\n          input: classes.inputInput\n        }}\n        value={value}\n        inputProps={{ \"aria-label\": \"search\" }}\n        onChange={async e => {\n          let keyword = e.target.value;\n          setValue(keyword);\n        }}\n        onKeyDown={async e => {\n          if (e.key === \"Enter\") {\n            setIsLoading(true);\n            search(value);\n            setIsLoading(false);\n          }\n        }}\n      />\n      <IconButton\n        disabled={value === \"\"}\n        onClick={async () => {\n          setIsLoading(true);\n          setValue(\"\");\n          await search(\"\");\n          setIsLoading(false);\n        }}\n      >\n        <ClearIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import React from \"react\";\nimport * as mm from \"music-metadata-browser\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport {\n  CardMedia,\n  CardContent,\n  Typography,\n  Collapse\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport * as path from \"path\";\n//@ts-ignore\nimport AudioSpectrum from \"react-audio-spectrum\";\n\nconst getMusicPicture = (tag?: mm.IAudioMetadata) => {\n  const pictures = tag?.common.picture;\n  let picture: string | undefined = undefined;\n  if (pictures && pictures.length > 0) {\n    picture = pictures[0].data.toString(\"base64\");\n    picture = \"data:image/jpeg;base64,\" + picture;\n  }\n  return picture;\n};\n\nexport default function CurrentPlayingPage() {\n  const { currentMusic, currentTag } = React.useContext(MusicContext);\n  let player = React.createRef<HTMLAudioElement | undefined>();\n  return (\n    <div style={{ marginTop: 40 }}>\n      <Collapse in={currentMusic === undefined} mountOnEnter unmountOnExit>\n        <Typography variant=\"subtitle1\">No Music Selected</Typography>\n      </Collapse>\n      <Collapse\n        in={currentMusic?.music_metadata?.picture !== undefined}\n        mountOnEnter\n        unmountOnExit\n      >\n        <CardMedia\n          style={{\n            height: 300,\n            width: \"100%\",\n\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          }}\n          image={\n            currentMusic?.music_metadata?.picture ?? getMusicPicture(currentTag)\n          }\n        />\n      </Collapse>\n      <Collapse in={currentMusic !== undefined} mountOnEnter unmountOnExit>\n        <CardContent\n          style={{\n            width: \"100%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          }}\n        >\n          <Typography component=\"h5\" variant=\"h5\">\n            {decodeURIComponent(\n              currentMusic?.music_metadata?.title ??\n                path.basename(currentMusic?.filename ?? \"\")\n            )}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {decodeURIComponent(currentMusic?.music_metadata?.artist ?? \"\")}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {decodeURIComponent(currentMusic?.music_metadata?.album ?? \"\")}\n          </Typography>\n          {currentMusic && (\n            <audio\n              controls\n              loop\n              crossOrigin=\"anonymous\"\n              autoPlay\n              src={currentMusic?.file}\n              id=\"music\"\n            />\n          )}\n          {currentMusic && (\n            <AudioSpectrum\n              id=\"audio-canvas\"\n              height={200}\n              width={300}\n              meterWidth={6}\n              audioId=\"music\"\n            />\n          )}\n        </CardContent>\n      </Collapse>\n    </div>\n  );\n}\n","import React from \"react\";\nimport * as mm from \"music-metadata-browser\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport {\n  CardMedia,\n  CardContent,\n  Typography,\n  Collapse,\n  Paper,\n  Grid,\n  Card,\n  IconButton,\n  Dialog,\n  Toolbar,\n  DialogContent,\n  Slide,\n  CardActions,\n  Slider\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport * as moment from \"moment\";\nimport * as path from \"path\";\n//@ts-ignore\nimport AudioSpectrum from \"react-audio-spectrum\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport { TransitionProps } from \"@material-ui/core/transitions/transition\";\nimport VolumeDown from \"@material-ui/icons/VolumeDown\";\nimport VolumeUp from \"@material-ui/icons/VolumeUp\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport RepeatOneIcon from \"@material-ui/icons/RepeatOne\";\n\nconst getMusicPicture = (tag?: mm.IAudioMetadata) => {\n  const pictures = tag?.common.picture;\n  let picture: string | undefined = undefined;\n  if (pictures && pictures.length > 0) {\n    picture = pictures[0].data.toString(\"base64\");\n    picture = \"data:image/jpeg;base64,\" + picture;\n  }\n  return picture;\n};\nconst IMAGE_SIZE = 70;\nconst LARGE_IMAGE_SIZE = 300;\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function CurrentPlayingMobile() {\n  const { currentMusic, currentTag, stop } = React.useContext(MusicContext);\n  const [openDialog, setOpenDialog] = React.useState(false);\n  const [currentTime, setCurrentTime] = React.useState<number>();\n  const [totalTime, setTotalTime] = React.useState<number>();\n  const [volume, setVolume] = React.useState<number | undefined>(0.5);\n  const [repeat, setRepeat] = React.useState(false);\n  const [playingState, setPlayingState] = React.useState<\"playing\" | \"pause\">(\n    \"playing\"\n  );\n  let player = React.useRef<HTMLAudioElement>(null);\n\n  return (\n    <div style={{ margin: 10 }}>\n      <Card>\n        <Grid\n          style={{ marginLeft: 10, marginRight: 10 }}\n          container\n          alignItems=\"center\"\n        >\n          <Grid item xs={3}>\n            {currentMusic ? (\n              <CardMedia\n                style={{ height: IMAGE_SIZE, width: IMAGE_SIZE }}\n                image={\n                  currentMusic?.music_metadata?.picture ??\n                  getMusicPicture(currentTag)\n                }\n              />\n            ) : (\n              <Skeleton width={IMAGE_SIZE} height={IMAGE_SIZE} />\n            )}\n          </Grid>\n          <Grid item xs={7}>\n            {currentMusic && (\n              <audio\n                onVolumeChange={() => {\n                  setVolume(player.current?.volume);\n                }}\n                onCanPlay={() => {\n                  setCurrentTime(player.current?.currentTime);\n                  setTotalTime(player.current?.duration);\n                  if (player.current) {\n                    player.current.volume = volume ?? 0.5;\n                    setVolume(volume);\n                    player.current.loop = repeat;\n                  }\n                }}\n                crossOrigin=\"anonymous\"\n                onTimeUpdate={e => {\n                  setCurrentTime(player.current?.currentTime);\n                  setTotalTime(player.current?.duration);\n                }}\n                autoPlay\n                src={currentMusic?.file}\n                ref={player}\n              />\n            )}\n            <CardActions\n              onClick={() => {\n                setOpenDialog(true);\n              }}\n            >\n              {currentMusic === undefined && (\n                <Typography component=\"div\">No Music Playing</Typography>\n              )}\n              <Typography noWrap>\n                {decodeURIComponent(\n                  currentMusic?.music_metadata?.title ??\n                    path.basename(currentMusic?.filename ?? \"\")\n                )}\n              </Typography>\n            </CardActions>\n          </Grid>\n          <Grid item xs={2}>\n            {currentMusic && (\n              <IconButton onClick={e => stop()} size=\"medium\">\n                <StopIcon />\n              </IconButton>\n            )}\n          </Grid>\n        </Grid>\n      </Card>\n      {/** popup dialog */}\n      <Dialog open={openDialog} fullScreen TransitionComponent={Transition}>\n        <Toolbar>\n          <IconButton onClick={() => setOpenDialog(false)}>\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n        <DialogContent>\n          <div>\n            {currentMusic ? (\n              <CardMedia\n                style={{ height: LARGE_IMAGE_SIZE, width: \"100%\" }}\n                image={\n                  currentMusic?.music_metadata?.picture ??\n                  getMusicPicture(currentTag)\n                }\n              />\n            ) : (\n              <Skeleton width=\"100%\" height={LARGE_IMAGE_SIZE} />\n            )}\n          </div>\n          <div>\n            <Typography component=\"h5\" variant=\"h5\" noWrap>\n              {decodeURIComponent(\n                currentMusic?.music_metadata?.title ??\n                  path.basename(currentMusic?.filename ?? \"\")\n              )}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {decodeURIComponent(currentMusic?.music_metadata?.artist ?? \"\")}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {decodeURIComponent(currentMusic?.music_metadata?.album ?? \"\")}\n            </Typography>\n          </div>\n          <div>\n            <Grid container spacing={2}>\n              <Grid item xs>\n                <Slider\n                  value={currentTime}\n                  max={totalTime}\n                  onChange={(e, v) => {\n                    if (player.current) {\n                      player.current.currentTime = v as number;\n                    }\n                  }}\n                  aria-labelledby=\"continuous-slider\"\n                />\n              </Grid>\n            </Grid>\n            <Grid justify=\"space-between\" container>\n              <Grid item>\n                {currentTime && moment.utc(currentTime * 1000).format(\"mm:ss\")}\n              </Grid>\n              <Grid item>\n                {totalTime && moment.utc(totalTime * 1000).format(\"mm:ss\")}\n              </Grid>\n            </Grid>\n            <Grid item style={{ textAlign: \"center\" }}>\n              <IconButton\n                disabled={currentMusic === undefined}\n                size=\"medium\"\n                onClick={() => {\n                  if (currentMusic && player && player.current) {\n                    if (playingState === \"playing\") {\n                      setPlayingState(\"pause\");\n                      player.current?.pause();\n                    } else {\n                      setPlayingState(\"playing\");\n                      player.current?.play();\n                    }\n                  }\n                }}\n              >\n                {playingState === \"playing\" ? (\n                  <PauseIcon style={{ fontSize: 40 }} />\n                ) : (\n                  <PlayArrowIcon style={{ fontSize: 40 }} />\n                )}\n              </IconButton>\n            </Grid>\n          </div>\n          <Grid container justify=\"center\">\n            <IconButton\n              onClick={() => {\n                if (player.current) {\n                  if (repeat) {\n                    setRepeat(false);\n                    player.current.loop = false;\n                  } else {\n                    setRepeat(true);\n                    player.current.loop = true;\n                  }\n                }\n              }}\n            >\n              {repeat ? <RepeatOneIcon /> : <RepeatIcon />}\n            </IconButton>\n          </Grid>\n          <Grid container spacing={2}>\n            <Grid item>\n              <VolumeDown />\n            </Grid>\n            <Grid item xs>\n              <Slider\n                value={volume && volume * 100}\n                min={0}\n                max={100}\n                onChange={(e, v) => {\n                  if (player.current) {\n                    player.current.volume = (v as number) / 100;\n                  }\n                }}\n                aria-labelledby=\"continuous-slider\"\n              />\n            </Grid>\n            <Grid item>\n              <VolumeUp />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Paper,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableCell,\n  Typography\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport { TableBody, TableFooter } from \"semantic-ui-react\";\nimport * as path from \"path\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { IconButton, Grid } from \"@material-ui/core\";\nimport { musicURL } from \"../../../../models/urls\";\nimport { File as NasFile } from \"../../../../models/interfaces/Folder\";\nimport moment from \"moment\";\nimport { NavLink } from \"react-router-dom\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nexport default function MusicList() {\n  const {\n    musicResponse,\n    play,\n    currentMusic,\n    stop,\n    fetch,\n    paginationURL,\n    presslike\n  } = React.useContext(MusicContext);\n  const [width, setWidth] = React.useState(window.innerWidth);\n  const [height, setheight] = React.useState(window.innerHeight);\n  const isSelected = (\n    file: NasFile | undefined,\n    file2: NasFile | undefined\n  ): boolean => {\n    return file?.id === file2?.id;\n  };\n\n  return (\n    <TableContainer\n      component={Paper}\n      style={{\n        marginTop: \"40px\",\n        marginLeft: 30,\n        maxHeight: height - 180,\n        width: \"100%\"\n      }}\n    >\n      <Table stickyHeader>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Artist</TableCell>\n            <TableCell>Duration</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {musicResponse &&\n            musicResponse.results.map((m, i) => (\n              <TableRow selected={isSelected(currentMusic, m)}>\n                <TableCell style={{ maxWidth: 200 }}>\n                  <Grid container>\n                    <Grid item xs={3}>\n                      <IconButton\n                        onClick={async () => {\n                          await presslike(m);\n                        }}\n                      >\n                        <FavoriteIcon\n                          style={{\n                            color: m.music_metadata?.like ? \"pink\" : undefined\n                          }}\n                        />\n                      </IconButton>\n                    </Grid>\n                    <Grid item xs={9}>\n                      <Typography noWrap>\n                        {m.music_metadata?.title ?? path.basename(m.filename)}\n                      </Typography>\n                      <NavLink\n                        to={\n                          m.music_metadata?.album !== undefined\n                            ? `/music?album=${m.music_metadata?.album}`\n                            : \"/music\"\n                        }\n                      >\n                        <Typography variant=\"subtitle1\" noWrap>\n                          {m.music_metadata?.album}\n                        </Typography>\n                      </NavLink>\n                    </Grid>\n                  </Grid>\n                </TableCell>\n                <TableCell style={{ maxWidth: 100 }}>\n                  <NavLink\n                    to={\n                      m.music_metadata?.artist !== undefined\n                        ? `/music?artist=${m.music_metadata?.artist}`\n                        : \"/music\"\n                    }\n                  >\n                    <Typography variant=\"subtitle1\" noWrap>\n                      {m.music_metadata?.artist}\n                    </Typography>\n                  </NavLink>\n                </TableCell>\n                <TableCell>\n                  {m?.music_metadata?.duration &&\n                    moment\n                      .utc(m?.music_metadata?.duration * 1000)\n                      .format(\"mm:ss\")}\n                </TableCell>\n                <TableCell>\n                  <IconButton\n                    onClick={async () => {\n                      if (isSelected(currentMusic, m)) {\n                        stop();\n                      } else {\n                        await play(m);\n                      }\n                    }}\n                  >\n                    {isSelected(currentMusic, m) ? (\n                      <StopIcon />\n                    ) : (\n                      <PlayArrowIcon />\n                    )}\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <Pagination\n              size=\"medium\"\n              style={{ marginBottom: 10, marginTop: 10 }}\n              page={musicResponse?.current_page ?? 0}\n              count={musicResponse?.total_pages ?? 0}\n              onChange={async (e, value) => {\n                if (paginationURL === musicURL) {\n                  await fetch(`${musicURL}?page=${value}`);\n                } else {\n                  await fetch(`${paginationURL}&page=${value}`);\n                }\n              }}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport {\n  List,\n  ListItemText,\n  ListItemSecondaryAction,\n  ListItemIcon,\n  Typography,\n  Divider,\n  CardMedia,\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport { TableBody, TableFooter } from \"semantic-ui-react\";\nimport * as path from \"path\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { IconButton } from \"@material-ui/core\";\nimport { musicURL } from \"../../../../models/urls\";\nimport { File as NasFile } from \"../../../../models/interfaces/Folder\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MusicNoteIcon from \"@material-ui/icons/MusicNote\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport LazyLoad from \"react-lazyload\";\n\nexport default function MusicListMobile() {\n  const {\n    musicResponse,\n    play,\n    currentMusic,\n    stop,\n    fetch,\n    paginationURL,\n    presslike,\n  } = React.useContext(MusicContext);\n  const [width, setWidth] = React.useState(window.innerWidth);\n  const [height, setheight] = React.useState(window.innerHeight);\n\n  const isSelected = (\n    file: NasFile | undefined,\n    file2: NasFile | undefined\n  ): boolean => {\n    return file?.id === file2?.id;\n  };\n\n  return (\n    <div style={{ marginTop: 10 }}>\n      <List style={{ backgroundColor: \"white\", overflowY: \"auto\" }}>\n        {musicResponse &&\n          musicResponse.results.map((m, i) => (\n            <div>\n              <ListItem\n                button\n                selected={isSelected(currentMusic, m)}\n                onClick={async () => {\n                  if (isSelected(currentMusic, m)) {\n                  } else {\n                    await play(m);\n                  }\n                }}\n                style={{ height: 80 }}\n              >\n                <ListItemIcon>\n                  <LazyLoad height={40}>\n                    <CardMedia\n                      style={{ height: 40, width: 40 }}\n                      image={m.music_metadata?.picture}\n                    />\n                  </LazyLoad>\n                </ListItemIcon>\n                <ListItemText\n                  primary={\n                    <Typography noWrap>\n                      {m.music_metadata?.title ?? path.basename(m.filename)}\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography noWrap>{m.music_metadata?.album}</Typography>\n                  }\n                />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={async () => {\n                      await presslike(m);\n                    }}\n                  >\n                    <FavoriteIcon\n                      style={{\n                        color: m.music_metadata?.like ? \"pink\" : undefined,\n                      }}\n                    />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n              <Divider style={{ color: \"black\", marginLeft: 50 }} />\n            </div>\n          ))}\n      </List>\n      <Pagination\n        size=\"medium\"\n        style={{ marginBottom: 10, marginTop: 10, height: 140 }}\n        page={musicResponse?.current_page ?? 0}\n        count={musicResponse?.total_pages ?? 0}\n        onChange={async (e, value) => {\n          if (paginationURL === musicURL) {\n            await fetch(`${musicURL}?page=${value}`);\n          } else {\n            await fetch(`${paginationURL}&page=${value}`);\n          }\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Hidden, Grid } from \"@material-ui/core\";\nimport CurrentPlayingPage from \"../left/CurrentPlayingPage\";\nimport { Container } from \"semantic-ui-react\";\nimport CurrentPlayingMobile from \"../mobile/CurrentPlayingMobile\";\nimport MusicList from \"../right/MusicList\";\nimport MusicListMobile from \"../mobile/MusicListMobile\";\n\nexport default function PlayerPage() {\n  return (\n    <div>\n      <Hidden xsDown implementation=\"js\">\n        <Container>\n          {/** End App Bar */}\n          <Grid container style={{ margin: 10 }}>\n            <Grid item sm={4}>\n              <CurrentPlayingPage />\n            </Grid>\n            <Grid item sm={8}>\n              <MusicList />\n            </Grid>\n          </Grid>\n        </Container>\n      </Hidden>\n      <Hidden mdUp implementation=\"js\">\n        <Container fluid>\n          <MusicListMobile />\n        </Container>\n        <div\n          style={{\n            position: \"fixed\",\n            bottom: 0,\n            width: \"100%\"\n          }}\n        >\n          <CurrentPlayingMobile />\n        </div>\n      </Hidden>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Container,\n  Grid,\n  CardMedia,\n  Typography,\n  Card,\n  CardActions,\n  CardActionArea,\n  CardContent\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\n//@ts-ignore\nimport LazyLoad from \"react-lazyload\";\n\nexport default function AlbumPage() {\n  const { albums, setTabIndex } = React.useContext(MusicContext);\n\n  return (\n    <Container>\n      <Grid container spacing={2}>\n        {albums.map((a, i) => (\n          <Grid item xs={6} md={4} lg={3} key={`album-${i}`}>\n            <Card>\n              <CardActionArea\n                style={{ height: 300 }}\n                onClick={async () => {\n                  window.location.replace(\"#music/?album=\" + a.album);\n                  setTabIndex(0);\n                }}\n              >\n                {i < 5 ? (\n                  <CardMedia\n                    style={{ height: 200, width: \"100%\" }}\n                    image={a.picture}\n                  />\n                ) : (\n                  <LazyLoad height={200} offset={120}>\n                    <CardMedia\n                      style={{ height: 200, width: \"100%\" }}\n                      image={a.picture}\n                    />\n                  </LazyLoad>\n                )}\n\n                <CardContent>\n                  <Typography>{a.album}</Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport {\n  Paper,\n  Divider,\n  ListItemAvatar,\n  Dialog,\n  DialogTitle,\n  Grid,\n  DialogContent,\n  CardMedia,\n  Card,\n  Typography,\n  CardActionArea\n} from \"@material-ui/core\";\nimport { MusicContext } from \"../../../../models/MusicContext\";\nimport { Container, CardContent } from \"semantic-ui-react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PeopleIcon from \"@material-ui/icons/People\";\n\nexport default function ArtistPage() {\n  const {\n    artists,\n    setTabIndex,\n    getAlbumsByArtist,\n    artistDetail\n  } = React.useContext(MusicContext);\n  const [showDialog, setShowDialog] = React.useState(false);\n\n  return (\n    <Container>\n      <Paper>\n        <List>\n          {artists.map((a, i) => (\n            <div>\n              <ListItem\n                onClick={async () => {\n                  await getAlbumsByArtist(a.artist);\n                  setShowDialog(true);\n                }}\n                button\n                key={`artist-${i}`}\n                style={{ height: 50 }}\n              >\n                <ListItemAvatar>\n                  <PeopleIcon />\n                </ListItemAvatar>\n                <ListItemText primary={a.artist}></ListItemText>\n              </ListItem>\n              <Divider />\n            </div>\n          ))}\n        </List>\n      </Paper>\n      <Dialog\n        open={showDialog}\n        fullWidth\n        scroll=\"paper\"\n        onClose={() => setShowDialog(false)}\n      >\n        <DialogTitle>\n          {artistDetail.length > 0 && artistDetail[0].artist}\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2}>\n            {artistDetail.map((a, i) => (\n              <Grid item key={`artist-detail-${i}`} xs={6}>\n                <Card elevation={0}>\n                  <CardActionArea\n                    onClick={() => {\n                      setShowDialog(false);\n                      window.location.replace(\"#music/?album=\" + a.album);\n                      setTabIndex(0);\n                    }}\n                  >\n                    <CardMedia style={{ height: 250 }} image={a.picture} />\n                    <CardContent>\n                      <Typography>{a.album}</Typography>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </Container>\n  );\n}\n","/** @format */\n\nimport React, { useContext, useState } from \"react\";\nimport UpdateIcon from \"@material-ui/icons/Update\";\nimport { Container, Segment, Progress, Menu, TabPane } from \"semantic-ui-react\";\nimport { HomePageContext } from \"../../models/HomeContext\";\nimport { ContextMenu, ContextMenuTrigger } from \"react-contextmenu\";\nimport {\n  Grid,\n  Hidden,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Drawer,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade,\n  Typography,\n  InputBase,\n  createMuiTheme,\n  ThemeProvider,\n  Backdrop,\n  CircularProgress,\n  Snackbar,\n  Paper,\n  Tooltip,\n  Tabs,\n  Tab,\n  Slide,\n  Fade,\n  Collapse,\n} from \"@material-ui/core\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport CurrentPlayingPage from \"./components/left/CurrentPlayingPage\";\nimport MusicList from \"./components/right/MusicList\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { NavLink } from \"react-router-dom\";\nimport { MusicContext } from \"../../models/MusicContext\";\nimport MusicSearchField from \"./components/SearchField\";\nimport MusicListMobile from \"./components/mobile/MusicListMobile\";\nimport CurrentPlayingMobile from \"./components/mobile/CurrentPlayingMobile\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport PlayerPage from \"./components/player/PlayerPage\";\nimport AlbumPage from \"./components/album/AlbumPage\";\nimport ArtistPage from \"./components/artist/ArtistPage\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: orange,\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root1: {\n      paddingTop: 80,\n    },\n    root: {\n      paddingTop: 120,\n      height: \"100%\",\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n  })\n);\n\nexport default function MusicPage() {\n  const {\n    isLoading,\n    errorMsg,\n    updateMetadata,\n    filterField,\n    currentTabIndex,\n    setTabIndex,\n  } = React.useContext(MusicContext);\n  const [show, setShow] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={{ maxHeight: \"100%\" }}>\n        {/** App Bar */}\n        <AppBar>\n          <Toolbar>\n            <NavLink to=\"/\">\n              <IconButton>\n                <ArrowBackIosIcon />\n              </IconButton>\n            </NavLink>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              {filterField ?? \"Music\"}\n              {filterField && (\n                <Tooltip title=\"Clear field\">\n                  <NavLink to=\"/music\">\n                    <IconButton>\n                      <ClearIcon />\n                    </IconButton>\n                  </NavLink>\n                </Tooltip>\n              )}\n            </Typography>\n\n            <Tooltip title=\"Update metadata\">\n              <IconButton\n                onClick={async () => {\n                  await updateMetadata();\n                }}\n              >\n                <UpdateIcon />\n              </IconButton>\n            </Tooltip>\n            <MusicSearchField />\n          </Toolbar>\n          <Tabs\n            value={currentTabIndex}\n            variant=\"scrollable\"\n            onChange={async (e, v) => {\n              await setTabIndex(v);\n            }}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab label=\"Music\" value={0} />\n            <Tab label=\"Album\" value={1} />\n            <Tab label=\"Artist\" value={2} />\n            <Tab label=\"Playlist\" value={3} />\n          </Tabs>\n        </AppBar>\n        <Backdrop className={classes.backdrop} open={isLoading}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        <Collapse in={currentTabIndex === 0} mountOnEnter unmountOnExit>\n          <div\n            className={classes.root1}\n            style={{\n              overflow: \"hidden\",\n            }}\n          >\n            <PlayerPage />\n          </div>\n        </Collapse>\n        <Collapse in={currentTabIndex === 1} mountOnEnter unmountOnExit>\n          <div className={classes.root}>\n            <AlbumPage />\n          </div>\n        </Collapse>\n        <Collapse in={currentTabIndex === 2} mountOnEnter unmountOnExit>\n          <div className={classes.root}>\n            <ArtistPage />\n          </div>\n        </Collapse>\n        <Collapse in={currentTabIndex === 3} mountOnEnter unmountOnExit>\n          <div\n            className={classes.root1}\n            style={{\n              overflow: \"hidden\",\n            }}\n          >\n            <PlayerPage />\n          </div>\n        </Collapse>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          open={errorMsg !== undefined}\n          message={`${errorMsg}`}\n        />\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  BookCollection,\n  Document as NasDocument,\n  Folder\n} from \"../../../../models/interfaces/Folder\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n  List,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  CircularProgress,\n  LinearProgress,\n  Collapse,\n  Typography,\n  Tooltip,\n  AppBar,\n  makeStyles,\n  Theme,\n  createStyles,\n  fade\n} from \"@material-ui/core\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport { DialogTitle, Toolbar } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\nimport FlipToFrontIcon from \"@material-ui/icons/FlipToFront\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { BookContext } from \"../../../../models/BookContext\";\nimport MoveBookDialog from \"./MoveBookDialog\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Container } from \"semantic-ui-react\";\nimport UpdateCollectionDialog from \"./UpdateCollectionDialog\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\ninterface Props {\n  book: BookCollection;\n  open: boolean;\n  onClose(): void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\"\n      }\n    }\n  })\n);\n\nexport default function BookDetailDialog(props: Props) {\n  const { book, open, onClose } = props;\n  const classes = useStyles();\n\n  const {\n    deleteDocument,\n    moveDocumentTo,\n    createDocument,\n    updateBook,\n    currentBook,\n    deleteBook\n  } = React.useContext(BookContext);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [currentDoc, setCurrentDoc] = React.useState<NasDocument>();\n  const [showEditDialog, setShowEditDialog] = React.useState(false);\n\n  return (\n    <Dialog open={open} fullScreen>\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          onClick={() => {\n            onClose();\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n        <Typography variant=\"h6\" component=\"div\" className={classes.title}>\n          {book.name}\n        </Typography>\n        <Tooltip title=\"Edit Document\">\n          <IconButton\n            edge=\"end\"\n            onClick={async () => {\n              if (currentBook) {\n                setShowEditDialog(true);\n              }\n            }}\n          >\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Delete Document\">\n          <IconButton\n            edge=\"end\"\n            onClick={async () => {\n              let confirm = window.confirm(\"Do you want to delete this book?\");\n              if (confirm) {\n                onClose();\n                await deleteBook(book);\n              }\n            }}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Add Document\">\n          <IconButton\n            edge=\"end\"\n            onClick={async () => {\n              if (currentBook) {\n                setIsLoading(true);\n                await createDocument(\"unnamed document\", currentBook);\n                setTimeout(() => {\n                  setIsLoading(false);\n                }, 300);\n              }\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n\n      <DialogContent>\n        <Container>\n          <Collapse mountOnEnter unmountOnExit in={isLoading}>\n            <LinearProgress />\n          </Collapse>\n          <Typography variant=\"subtitle1\">\n            {currentBook?.description}\n          </Typography>\n          <List>\n            {book.documents?.map((d, i) => (\n              <ListItem\n                button\n                key={`document-${i}`}\n                onClick={() => {\n                  window.location.href = \"#/document/\" + d.id;\n                }}\n              >\n                <ListItemIcon>\n                  <BookIcon />\n                </ListItemIcon>\n                <ListItemText primary={d.name} />\n                <ListItemSecondaryAction>\n                  <IconButton\n                    onClick={async () => {\n                      let confirm = window.confirm(\n                        \"Do you want to delete this document?\"\n                      );\n                      if (confirm) {\n                        setIsLoading(true);\n                        await deleteDocument(d.id);\n                        setTimeout(() => {\n                          setIsLoading(false);\n                        }, 300);\n                      }\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                  <IconButton\n                    onClick={() => {\n                      setCurrentDoc(d);\n                    }}\n                  >\n                    <FlipToFrontIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          </List>\n        </Container>\n      </DialogContent>\n\n      {currentDoc && (\n        <MoveBookDialog\n          open={Boolean(currentDoc)}\n          onClose={async target => {\n            setCurrentDoc(undefined);\n            if (target) {\n              await moveDocumentTo(currentDoc, target);\n            }\n          }}\n          currentDoc={currentDoc}\n        />\n      )}\n\n      {currentBook && (\n        <UpdateCollectionDialog\n          open={showEditDialog}\n          onClose={async (name, desc) => {\n            if (name && desc) {\n              await updateBook(name, desc);\n            }\n            setShowEditDialog(false);\n          }}\n        />\n      )}\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport {\n  Grid,\n  Card,\n  Typography,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  IconButton,\n  Tooltip\n} from \"@material-ui/core\";\nimport { BookContext } from \"../../../../models/BookContext\";\nimport { BookCollection } from \"../../../../models/interfaces/Folder\";\nimport BookDetailDialog from \"../dialog/BookDetailDialog\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport UpdateCollectionDialog from \"../dialog/UpdateCollectionDialog\";\n\nexport default function BookList() {\n  const {\n    books,\n    fetchBookDetail,\n    isLoading,\n    currentBook,\n    addNewBook,\n    onCloseDetailDialog\n  } = React.useContext(BookContext);\n\n  const [showCreateDialog, setShowCreateDialog] = React.useState(false);\n\n  return (\n    <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\n      {books.map((b, i) => (\n        <Grid item key={`book-${i}`} xs={6} sm={4} md={2}>\n          <Card\n            style={{\n              height: 200,\n              alignContent: \"center\",\n              alignItems: \"center\",\n              justifyItems: \"center\"\n            }}\n          >\n            <CardActionArea\n              style={{ height: \"100%\" }}\n              onClick={async () => {\n                await fetchBookDetail(b.id);\n              }}\n            >\n              <CardContent>\n                <Typography align=\"center\">{b.name}</Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      ))}\n      <Grid item xs={6} sm={4} md={2}>\n        <Card\n          style={{\n            height: 200,\n            alignContent: \"center\",\n            alignItems: \"center\",\n            justifyItems: \"center\"\n          }}\n        >\n          <Tooltip title=\"Add Book\">\n            <CardActionArea\n              style={{ height: \"100%\" }}\n              onClick={async () => {\n                setShowCreateDialog(true);\n              }}\n            >\n              <CardContent>\n                <AddCircleIcon\n                  fontSize=\"large\"\n                  style={{\n                    display: \"block\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\"\n                  }}\n                />\n              </CardContent>\n            </CardActionArea>\n          </Tooltip>\n        </Card>\n      </Grid>\n      {currentBook && (\n        <BookDetailDialog\n          open={currentBook !== undefined && !isLoading}\n          book={currentBook}\n          onClose={() => {\n            onCloseDetailDialog();\n          }}\n        />\n      )}\n\n      {showCreateDialog && (\n        <UpdateCollectionDialog\n          open={showCreateDialog}\n          onClose={async (name, desc) => {\n            if (name && desc) {\n              await addNewBook(name, desc);\n            }\n            setShowCreateDialog(false);\n          }}\n        />\n      )}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  makeStyles,\n  Theme,\n  createStyles,\n  Backdrop,\n  CircularProgress,\n  Snackbar\n} from \"@material-ui/core\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { NavLink } from \"react-router-dom\";\nimport { BookContext } from \"../../models/BookContext\";\nimport Container from \"@material-ui/core/Container\";\nimport BookList from \"./components/list/BookList\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\"\n    }\n  })\n);\n\nexport default function BookPage() {\n  const classes = useStyles();\n  const { isLoading, errorMsg } = React.useContext(BookContext);\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <NavLink to=\"/\">\n            <IconButton\n              edge=\"start\"\n              style={{ color: \"white\" }}\n              aria-label=\"menu\"\n            >\n              <HomeIcon />\n            </IconButton>\n          </NavLink>\n          <Typography variant=\"h6\">Books</Typography>\n        </Toolbar>\n      </AppBar>\n      <Container style={{ marginTop: 10 }}>\n        <BookList />\n      </Container>\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        open={errorMsg !== undefined}\n        message={errorMsg}\n      ></Snackbar>\n\n      <Backdrop className={classes.backdrop} open={isLoading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","/** @format */\n\nimport React, { Component } from \"react\";\nimport { Nas } from \"./interfaces/nas\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Folder,\n  Document as NasDocument,\n  File as NasFile,\n  PaginationResponse,\n} from \"./interfaces/Folder\";\nimport Axios from \"axios\";\nimport * as mm from \"music-metadata-browser\";\nimport { musicURL, musicMetadataURL, galleryURL } from \"./urls\";\nimport queryString from \"query-string\";\nimport { MusicMetadata } from \"./interfaces/Folder\";\n\ninterface GalleryContext {\n  isLoading: boolean;\n  nextURL?: string | null;\n  files: NasFile[];\n  selectedImage?: NasFile;\n  openDialog: boolean;\n  fetchImages(): Promise<void>;\n  fetchMore(): Promise<void>;\n  refresh(): Promise<void>;\n  onImageClick(image: NasFile | undefined): void;\n}\n\ninterface GalleryProps {}\n\nexport class GalleryProvider extends Component<GalleryProps, GalleryContext> {\n  constructor(props: GalleryProps) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      files: [],\n      openDialog: false,\n      fetchImages: this.fetchImages,\n      fetchMore: this.fetchMore,\n      refresh: this.refresh,\n      onImageClick: this.onImageClick,\n    };\n  }\n\n  onImageClick = (image: NasFile | undefined) => {\n    if (image) {\n      this.setState({ openDialog: true, selectedImage: image });\n    } else {\n      this.setState({ openDialog: false, selectedImage: undefined });\n    }\n  };\n\n  refresh = async () => {\n    try {\n      this.setState({ isLoading: true });\n      let response = await Axios.patch(galleryURL + \"2/\");\n    } catch (err) {\n      alert(\"Error: \" + err);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  fetchImages = async () => {\n    this.setState({ isLoading: true });\n\n    try {\n      let response = await Axios.get<PaginationResponse<NasFile>>(galleryURL);\n\n      this.setState({\n        files: response.data.results,\n        nextURL: response.data.next,\n      });\n    } catch (err) {\n      console.error(err);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  fetchMore = async () => {\n    try {\n      const { files } = this.state;\n      this.setState({ isLoading: true });\n      if (this.state.nextURL) {\n        this.setState({ isLoading: true });\n        let response = await Axios.get<PaginationResponse<NasFile>>(\n          this.state.nextURL\n        );\n        response.data.results.forEach((i) => files.push(i));\n        this.setState({\n          files: files,\n          nextURL: response.data.next,\n        });\n      }\n    } catch (err) {\n      console.error(err);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  };\n\n  render() {\n    return (\n      <GalleryContext.Provider value={this.state}>\n        {this.props.children}\n      </GalleryContext.Provider>\n    );\n  }\n}\n\n//@ts-ignore\nconst context: GalleryContext = {};\n\nexport const GalleryContext = React.createContext(context);\n","/** @format */\n\nimport React from \"react\";\nimport { GalleryContext } from \"../../../../models/GalleryContext\";\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  Button,\n  Dialog,\n  DialogContent,\n} from \"@material-ui/core\";\nimport { Grid, CardMedia, Typography } from \"@material-ui/core\";\nimport LazyLoad from \"react-lazyload\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      overflow: \"hidden\",\n      marginLeft: 20,\n      marginRight: 20,\n    },\n    gridList: {\n      width: \"100%\",\n      height: \"100%\",\n    },\n  })\n);\n\nfunction getColSmall(index: number) {\n  if (index % 7 === 0) {\n    return 12;\n  }\n  return 6;\n}\n\nfunction getColLarge(index: number) {\n  if (index % 5 === 0) {\n    return 6;\n  }\n  return 3;\n}\n\nexport default function ImageGrid() {\n  const { files, fetchMore, nextURL, onImageClick } = React.useContext(\n    GalleryContext\n  );\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        {files.map((file, index) => (\n          <Grid\n            key={file.id}\n            item\n            md={getColLarge(index)}\n            xs={getColSmall(index)}\n            style={{ padding: 2, cursor: \"grab\", position: \"relative\" }}\n            onClick={() => onImageClick(file)}\n          >\n            <LazyLoad once height={350} throttle={200} offset={100}>\n              <CardMedia\n                image={file.file}\n                style={{ height: 350, width: \"100%\" }}\n              />\n\n              <div\n                style={{\n                  backgroundColor: \"black\",\n                  position: \"absolute\",\n                  left: 0,\n                  bottom: 0,\n                  margin: 2,\n                }}\n              >\n                <Typography variant=\"h6\" style={{ color: \"white\" }}>\n                  {file.filename}\n                </Typography>\n                <Typography variant=\"h6\" style={{ color: \"white\" }}>\n                  {file.image_metadata?.data?.datetime}\n                </Typography>\n              </div>\n            </LazyLoad>\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          {nextURL && (\n            <Button\n              onClick={fetchMore}\n              style={{ marginLeft: \"auto\", marginRight: \"auto\" }}\n            >\n              Load More\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","/** @format */\n\nimport React from \"react\";\nimport \"./Marker.css\";\n\nconst Marker = (props: any) => {\n  const { color, name, id } = props;\n  return (\n    <div>\n      <div\n        className=\"pin bounce\"\n        style={{ backgroundColor: color, cursor: \"pointer\" }}\n        title={name}\n      />\n      <div className=\"pulse\" />\n    </div>\n  );\n};\n\nexport default Marker;\n","/** @format */\n\nimport React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  makeStyles,\n  Theme,\n  createStyles,\n  Backdrop,\n  CircularProgress,\n  Container,\n  Box,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  CardMedia,\n  List,\n  ListItem,\n  ListItemText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { GalleryContext } from \"../../models/GalleryContext\";\nimport ImageGrid from \"./components/image-grid/ImageGrid\";\nimport { NavLink } from \"react-router-dom\";\nimport Marker from \"./components/image-grid/Marker\";\nimport GoogleMapReact from \"google-map-react\";\nimport { ImageMetaData } from \"../../models/interfaces/Folder\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  })\n);\n\nfunction gpsConverter(num: number[]) {\n  if (num?.length !== 3) {\n    return undefined;\n  }\n  return num[0] + num[1] / 60 + num[2] / 3600;\n}\n\nfunction getPosition(metadata: ImageMetaData) {\n  if (!metadata) {\n    return {\n      lat: 59.95,\n      lng: 30.33,\n    };\n  }\n\n  return {\n    lat:\n      (metadata.data.gps_latitude_ref === \"N\" ? 1 : -1) *\n      (gpsConverter(metadata.data.gps_latitude) ?? 59.95),\n    lng:\n      (metadata.data.gps_longitude_ref === \"E\" ? 1 : -1) *\n      (gpsConverter(metadata.data.gps_longitude) ?? 30.33),\n  };\n}\n\nexport default function GalleryPage() {\n  const classes = useStyles();\n  const {\n    fetchImages,\n    refresh,\n    isLoading,\n    selectedImage,\n    openDialog,\n    onImageClick,\n  } = React.useContext(GalleryContext);\n  React.useEffect(() => {\n    fetchImages().then(() => {});\n  }, []);\n\n  return (\n    <div>\n      <AppBar>\n        <Toolbar>\n          <NavLink to=\"/\">\n            <IconButton>\n              <ArrowBackIosIcon />\n            </IconButton>\n          </NavLink>\n          <Typography variant=\"h6\" className={classes.title}>\n            Gallery\n          </Typography>\n          <IconButton\n            onClick={async () => {\n              let confirm = window.confirm(\n                \"Do you want to update all image's metadata?\"\n              );\n              if (confirm) {\n                await refresh();\n              }\n            }}\n          >\n            <RefreshIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Box pt={10}>\n        <ImageGrid />\n      </Box>\n\n      <Dialog open={openDialog} fullWidth>\n        <DialogTitle>{selectedImage?.filename}</DialogTitle>\n        <DialogContent>\n          <CardMedia\n            image={selectedImage?.file}\n            style={{ height: 300, width: \"100%\" }}\n          />\n          <div style={{ height: 400, width: \"100%\", marginTop: 20 }}>\n            {selectedImage?.image_metadata && (\n              <GoogleMapReact\n                defaultCenter={getPosition(selectedImage.image_metadata!)}\n                defaultZoom={11}\n                bootstrapURLKeys={{\n                  key: process.env.REACT_APP_GOOGLE_API_KEY ?? \"\",\n                }}\n              >\n                <Marker\n                  lat={getPosition(selectedImage.image_metadata!).lat}\n                  lng={getPosition(selectedImage.image_metadata!).lng}\n                />\n              </GoogleMapReact>\n            )}\n          </div>\n          <List>\n            {selectedImage?.image_metadata &&\n              Object.entries(selectedImage.image_metadata!.data).map(\n                ([key, value]) => (\n                  <ListItem key={key}>\n                    <ListItemText\n                      primary={key}\n                      secondary={JSON.stringify(value)}\n                    ></ListItemText>\n                  </ListItem>\n                )\n              )}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => onImageClick(undefined)}>Close</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Backdrop className={classes.backdrop} open={isLoading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  makeStyles,\n  CardContent,\n  Typography,\n  CardMedia\n} from \"@material-ui/core\";\nimport * as path from \"path\";\nimport AudioPlayer from \"react-h5-audio-player\";\nimport jsmediatags from \"jsmediatags\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport { TagType } from \"jsmediatags/types\";\nimport * as mm from \"music-metadata-browser\";\nimport { Grid } from \"semantic-ui-react\";\n\ninterface Props {\n  musicSrc: string;\n  onClose(): void;\n}\n\ninterface State {\n  tag?: mm.IAudioMetadata;\n}\n\nconst readMusicTag = async (musicSrc: string): Promise<mm.IAudioMetadata> => {\n  const metadata = await mm.fetchFromUrl(musicSrc);\n  return metadata;\n};\n\nexport default class Musicplayer extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentWillMount() {\n    const { musicSrc } = this.props;\n    let data = await readMusicTag(musicSrc);\n    this.setState({ tag: data });\n  }\n\n  async componentDidUpdate(oldProps: Props) {\n    const { musicSrc } = this.props;\n    if (oldProps.musicSrc !== musicSrc) {\n      let data = await readMusicTag(musicSrc);\n      this.setState({ tag: data });\n    }\n  }\n\n  render() {\n    const { musicSrc, onClose } = this.props;\n    const { tag } = this.state;\n    const pictures = tag?.common.picture;\n    let picture: string | undefined = undefined;\n    if (pictures && pictures.length > 0) {\n      picture = pictures[0].data.toString(\"base64\");\n      picture = \"data:image/jpeg;base64,\" + picture;\n    }\n    return (\n      <Dialog\n        fullWidth\n        open={musicSrc !== undefined}\n        onClose={onClose}\n        style={{ overflowX: \"hidden\" }}\n      >\n        <CardMedia\n          style={{ height: 500, width: \"100%\" }}\n          image={picture}\n          title={decodeURIComponent(\n            tag?.common.title ?? path.basename(musicSrc)\n          )}\n        />\n        <DialogContent>\n          <Typography component=\"h5\" variant=\"h5\">\n            {decodeURIComponent(tag?.common.title ?? path.basename(musicSrc))}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {tag?.common.artist}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {tag?.common.album}\n          </Typography>\n        </DialogContent>\n        <div>\n          <AudioPlayer volume={0.5} src={musicSrc} />\n        </div>\n      </Dialog>\n    );\n  }\n}\n","/** @format */\nimport React, { Component } from \"react\";\nimport { File as NasFile } from \"../../../interfaces/Folder\";\nimport { BaseFilePlugin, Render } from \"../BaseFilePlugin\";\nimport * as path from \"path\";\nimport { Dialog } from \"@material-ui/core\";\nimport Musicplayer from \"../../../../pages/home/components/files/music/Musicplayer\";\n\nconst audioExt = [\".mp3\", \".m4a\"];\nexport class MusicFilePlugin extends BaseFilePlugin {\n  getPluginName(): string {\n    return \"music\";\n  }\n  shouldOpenNewPage(file: NasFile): boolean {\n    return false;\n  }\n  shouldShow(file: NasFile): boolean {\n    return audioExt.includes(path.extname(file.filename));\n  }\n\n  render(arg: Render): JSX.Element {\n    const { file, onClose } = arg;\n    return <Musicplayer musicSrc={file.file} onClose={onClose} />;\n  }\n}\n","import React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\ninterface Props {\n  file: string;\n}\n\nexport default function PDFViewer(props: Props) {\n  const [pageNumber, setpageNumber] = useState(1);\n  const [current, setcurrent] = useState(1);\n  //@ts-ignore\n  return (\n    <div id=\"document\">\n      <Document\n        /*\n        // @ts-ignore */\n        style={{ width: \"100%\" }}\n        file={props.file}\n        onLoadSuccess={(pdf) => {\n          setpageNumber(pdf.numPages);\n        }}\n      >\n        {Array.from(new Array(pageNumber), (el, index) => (\n          <Page\n            /*\n        // @ts-ignore */\n            style={{ width: \"100%\" }}\n            size=\"A4\"\n            key={`page-${index}`}\n            pageNumber={index + 1}\n          />\n        ))}\n      </Document>\n    </div>\n  );\n}\n","/** @format */\nimport React, { Component } from \"react\";\nimport { File as NasFile } from \"../../../interfaces/Folder\";\nimport { BaseFilePlugin, Render } from \"../BaseFilePlugin\";\nimport * as path from \"path\";\nimport { Dialog, CardMedia } from \"@material-ui/core\";\nimport Musicplayer from \"../../../../pages/home/components/files/music/Musicplayer\";\nimport PDFViewer from \"../../../../pages/home/components/files/pdf/PDFViewer\";\n\nconst pdfExt = [\".pdf\"];\nexport class PDFFIlePlugin extends BaseFilePlugin {\n  getPluginName(): string {\n    return \"pdf-file\";\n  }\n  shouldOpenNewPage(file: NasFile): boolean {\n    return false;\n  }\n  shouldShow(file: NasFile): boolean {\n    return pdfExt.includes(path.extname(file.filename));\n  }\n\n  render(arg: Render): JSX.Element {\n    const { file, onClose } = arg;\n    return (\n      <Dialog key={file.id} open={true} onClose={() => onClose()} fullWidth>\n        <PDFViewer file={file.file} />\n      </Dialog>\n    );\n  }\n}\n","/** @format */\nimport ReactJson from \"react-json-view\";\n\nimport React from \"react\";\nimport Axios from \"axios\";\nimport { LinearProgress } from \"@material-ui/core\";\n\nexport default function JSONViewer(props: { src: string }) {\n  const [content, setContent] = React.useState<Object>();\n\n  const { src } = props;\n\n  React.useEffect(() => {\n    Axios.get(src).then((res) => {\n      setContent(res.data);\n    });\n  }, []);\n\n  if (content === undefined) {\n    return <LinearProgress color=\"secondary\" />;\n  }\n\n  return <ReactJson src={content} />;\n}\n","/** @format */\n\nimport React from \"react\";\nimport Axios from \"axios\";\nimport PO from \"pofile\";\nimport {\n  LinearProgress,\n  Grid,\n  Typography,\n  TextField,\n  Box,\n  CircularProgress,\n  Collapse,\n  makeStyles,\n  Theme,\n  createStyles,\n  Backdrop,\n} from \"@material-ui/core\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { VariableSizeList as List } from \"react-window\";\nimport { HomePageContext } from \"../../../../HomeContext\";\nimport { FileContentManager } from \"../../../../FileContentManager\";\n\ninterface Item {\n  msgid: string;\n  msgctxt?: string;\n  references: string[];\n  msgid_plural?: string;\n  msgstr: string[];\n  comments: string[];\n  extractedComments: string[];\n  flags: Record<string, boolean | undefined>;\n  nplurals: number;\n  obsolete: boolean;\n\n  toString(): string;\n}\n\nfunction getPercentage(items: Item[]) {\n  let translated = items.filter((i) => i.msgstr !== undefined);\n  return translated.length / items.length;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  })\n);\n\nexport default function PoFileViewer(props: {\n  src: string;\n  filename: string;\n  fileID: any;\n}) {\n  const classes = useStyles();\n  const [content, setContent] = React.useState<Item[]>();\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const { src, filename, fileID } = props;\n  const { nas, update } = React.useContext(HomePageContext);\n\n  React.useEffect(() => {\n    FileContentManager.getContent(src)\n      .then((content) => {\n        let parsedContent = PO.parse(content);\n        //@ts-ignore\n        setContent(parsedContent.items);\n      })\n      .catch((err) => alert(\"Error: \" + err));\n  }, []);\n\n  if (content === undefined) {\n    return <Backdrop className={classes.backdrop} open={true}></Backdrop>;\n  }\n\n  return (\n    <Grid style={{ height: \"100%\", overflow: \"hidden\" }}>\n      <Collapse in={isLoading}>\n        <LinearProgress color=\"secondary\" />\n      </Collapse>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box width=\"100%\" mr={1}>\n          <LinearProgress\n            variant=\"determinate\"\n            value={getPercentage(content)}\n            color=\"secondary\"\n          />\n        </Box>\n        <Box minWidth={35}>\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n            getPercentage(content)\n          )}%`}</Typography>\n        </Box>\n      </Box>\n\n      <AutoSizer>\n        {({ height, width }) => (\n          <List\n            height={height}\n            itemCount={content.length}\n            width={width}\n            itemSize={(index) =>\n              (content[index].msgid.length / 200 + 1) * 30 + 90\n            }\n          >\n            {({ style, index }) => (\n              <PoLine\n                key={`item-${index}`}\n                index={index}\n                style={style}\n                item={content[index]}\n                update={async (c, index) => {\n                  setIsLoading(true);\n                  content[index].msgstr = [c];\n                  setContent(content);\n                  content.forEach((i) => (i.flags.fuzzy = false));\n                  /// new str\n                  let str = content.reduce<string>(\n                    (prev, curr) => prev + curr.toString() + \"\\n\\n\",\n                    \"\"\n                  );\n                  try {\n                    await FileContentManager.updateFileContent(fileID, str);\n                  } catch (err) {\n                    alert(\"Saving error \" + err);\n                  }\n                  update();\n                  setTimeout(() => {\n                    setIsLoading(false);\n                  }, 300);\n                }}\n              />\n            )}\n          </List>\n        )}\n      </AutoSizer>\n    </Grid>\n  );\n}\n\nfunction PoLine(props: {\n  item: Item;\n  index: any;\n  style: any;\n  update(newContent: string, index: number): void;\n}) {\n  const { item, style, update, index } = props;\n  const [value, setValue] = React.useState<string>(item.msgstr[0] ?? \"\");\n\n  return (\n    <Grid container style={{ ...style }} spacing={3} key={item.msgid}>\n      <Grid item xs={12}>\n        <Typography variant=\"body1\" style={{ color: \"grey\" }}>\n          {item.comments}\n        </Typography>\n        <Typography variant=\"body1\" style={{ color: \"grey\" }}>\n          {item.references}\n        </Typography>\n        <Typography variant=\"body1\">{item.msgid}</Typography>\n        <TextField\n          label=\"Translation\"\n          variant=\"filled\"\n          fullWidth\n          color=\"secondary\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          onBlur={() => {\n            update(value, index);\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","/** @format */\nimport React, { Component } from \"react\";\nimport { File as NasFile } from \"../../../../interfaces/Folder\";\nimport { BaseFilePlugin, Render } from \"../../BaseFilePlugin\";\nimport * as path from \"path\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\n\nimport JSONViewer from \"./PofileViewer\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport PoFileViewer from \"./PofileViewer\";\n\nconst poExt = [\".po\"];\n\nexport class PoFilePlugin extends BaseFilePlugin {\n  getPluginName(): string {\n    return \"po-filer\";\n  }\n  shouldOpenNewPage(file: NasFile): boolean {\n    return false;\n  }\n  shouldShow(file: NasFile): boolean {\n    return poExt.includes(path.extname(file.filename));\n  }\n\n  render(arg: Render): JSX.Element {\n    const { file, onClose } = arg;\n    return (\n      <Dialog open={true} onClose={() => onClose()} fullScreen>\n        <DialogTitle>{path.basename(file.filename)}</DialogTitle>\n        <DialogContent>\n          <PoFileViewer\n            src={file.file}\n            filename={file.filename}\n            fileID={file.id}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => onClose()}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","/** @format */\n\nimport React, { Component } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { BaseFilePlugin } from \"../../models/Plugins/file plugins/BaseFilePlugin\";\nimport { FileContentManager } from \"../../models/FileContentManager\";\nimport { File as NasFile } from \"../../models/interfaces/Folder\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport {\n  Backdrop,\n  CircularProgress,\n  Collapse,\n  Fade,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { LinearProgress } from \"@material-ui/core\";\nimport { select } from \"@lingui/macro\";\nimport { makeStyles } from \"@material-ui/core\";\n\ninterface Props {\n  pluginsMapping: { [key: string]: BaseFilePlugin };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"white\",\n  },\n}));\n\nexport default function PluginPage(props: Props) {\n  const { pluginsMapping } = props;\n  const { pluginName, fileId } = useParams() as any;\n  const [selectedPlugin, setSelectedPlugin] = React.useState<BaseFilePlugin>();\n  const [file, setFile] = React.useState<NasFile>();\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    try {\n      let plugin = pluginsMapping[pluginName];\n      if (plugin) {\n        window.document.title = plugin.getPluginName();\n        setTimeout(() => {\n          setSelectedPlugin(plugin);\n          setTimeout(() => {\n            if (plugin.shouldGetFileContent()) {\n              FileContentManager.getContentById(fileId)\n                .then(async (file) => {\n                  setFile(file);\n                })\n                .catch((err) => {\n                  window.alert(\"Cannot fetch file with this id\");\n                  window.close();\n                });\n            } else {\n              FileContentManager.getFile(fileId)\n                .then((file) => {\n                  setFile(file);\n                })\n                .catch((err) => {\n                  window.alert(\"Cannot fetch file with this id\\n\" + err);\n                  window.close();\n                });\n            }\n          }, 500);\n        }, 500);\n      } else {\n        window.alert(\"Cannot find this plugin\");\n      }\n    } catch (err) {\n      window.alert(\"Cannot find plugin with this name\");\n      window.close();\n    }\n  }, [pluginName, fileId]);\n\n  return (\n    <div style={{ height: \"100vh\", display: \"flex\" }}>\n      {selectedPlugin &&\n        file &&\n        selectedPlugin.render({ file: file!, onClose: () => {} })}\n\n      <Backdrop className={classes.backdrop} open={file === undefined}>\n        <CircularProgress\n          variant=\"indeterminate\"\n          color=\"secondary\"\n          style={{ margin: 10 }}\n        />\n        {selectedPlugin ? (\n          <Typography variant=\"h5\">\n            {selectedPlugin.getPluginName()} Loading File...\n          </Typography>\n        ) : (\n          <Typography variant=\"h5\"> Loading Plugin...</Typography>\n        )}\n      </Backdrop>\n    </div>\n  );\n}\n","/** @format */\n\nimport React, { Component, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  HashRouter as Router,\n  Route,\n  Link,\n  NavLink,\n  Redirect,\n} from \"react-router-dom\";\nimport { HomePage } from \"./components/pages/home/HomePage\";\nimport { HomePageProvider } from \"./components/models/HomeContext\";\nimport { SystemProvider } from \"./components/models/SystemContext\";\nimport SystemInfoPage from \"./components/pages/systemInfo/SystemInfoPage\";\nimport { Sidebar, Menu, Icon, Button } from \"semantic-ui-react\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {\n  IconButton,\n  createMuiTheme,\n  ThemeProvider,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport { DocumentProvider } from \"./components/models/DocumentContext\";\nimport DocumentEditor from \"./components/pages/document/DocumentEditor\";\nimport { MovingProvider } from \"./components/models/MovingContext\";\nimport { MusicProvider } from \"./components/models/MusicContext\";\nimport MusicPage from \"./components/pages/music/MusicPage\";\nimport BookPage from \"./components/pages/book/BookPage\";\nimport { BookContext, BookProvider } from \"./components/models/BookContext\";\nimport { FileActionProvider } from \"./components/models/FileActionContext\";\nimport { GalleryProvider } from \"./components/models/GalleryContext\";\nimport GalleryPage from \"./components/pages/gallery/GalleryPage\";\nimport { MusicFilePlugin } from \"./components/models/Plugins/file plugins/plugins/MusicFilePlugin\";\nimport { ImageFilePlugin } from \"./components/models/Plugins/file plugins/plugins/ImageFilePlugin\";\nimport { PDFFIlePlugin } from \"./components/models/Plugins/file plugins/plugins/PDFFilePlugin\";\nimport { VideoFilePlugin } from \"./components/models/Plugins/file plugins/plugins/VideoFilePlugin\";\nimport { JSONFilePlugin } from \"./components/models/Plugins/file plugins/plugins/jsonFilePlugin/JSONFilePlugin\";\nimport { CodeFilePlugin } from \"./components/models/Plugins/file plugins/plugins/codeFilePlugin/CodeFilePlugin\";\nimport { PoFilePlugin } from \"./components/models/Plugins/file plugins/plugins/poFilePlugin/PoFilePlugin\";\nimport PluginPage from \"./components/pages/plugin_page/PluginPage\";\nimport { BaseFilePlugin } from \"./components/models/Plugins/file plugins/BaseFilePlugin\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fafafa\",\n    },\n  },\n});\n\nconst plugins = [\n  new MusicFilePlugin(),\n  new ImageFilePlugin(),\n  new PDFFIlePlugin(),\n  new VideoFilePlugin(),\n  new JSONFilePlugin(),\n  new CodeFilePlugin(),\n  new PoFilePlugin(),\n];\n\nconst pluginsMapping: { [key: string]: BaseFilePlugin } = {};\n\nfor (let plugin of plugins) {\n  pluginsMapping[plugin.getPluginName()] = plugin;\n}\n\nexport default function App() {\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <SystemProvider>\n        <Router>\n          <div style={{ height: \"100%\" }}>\n            <Route exact path=\"/\" component={() => <Redirect to=\"/home\" />} />\n            <Route\n              path={\"/plugin/:pluginName/:fileId\"}\n              component={(props: any) => (\n                <PluginPage pluginsMapping={pluginsMapping} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/home/:id?\"\n              component={(props: any) => {\n                return (\n                  <FileActionProvider>\n                    <MovingProvider>\n                      <HomePageProvider {...props}>\n                        <HomePage plugins={plugins} />\n                      </HomePageProvider>\n                    </MovingProvider>\n                  </FileActionProvider>\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/document/:id\"\n              component={(props: any) => {\n                return (\n                  <BookProvider>\n                    <MovingProvider>\n                      <DocumentProvider {...props}>\n                        <DocumentEditor />\n                      </DocumentProvider>\n                    </MovingProvider>\n                  </BookProvider>\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/book\"\n              component={(props: any) => {\n                return (\n                  <MovingProvider>\n                    <BookProvider>\n                      <BookPage />\n                    </BookProvider>\n                  </MovingProvider>\n                );\n              }}\n            />\n\n            <Route\n              exact\n              path=\"/gallery\"\n              component={(props: any) => {\n                return (\n                  <GalleryProvider>\n                    <GalleryPage />\n                  </GalleryProvider>\n                );\n              }}\n            />\n\n            <Route\n              exact\n              path=\"/info\"\n              component={(props: any) => {\n                setShowMenu(true);\n                return <SystemInfoPage />;\n              }}\n            />\n            <Route\n              path=\"/music\"\n              component={(props: any) => {\n                return (\n                  <MusicProvider {...props}>\n                    <MusicPage />\n                  </MusicProvider>\n                );\n              }}\n            />\n          </div>\n        </Router>\n      </SystemProvider>\n    </ThemeProvider>\n  );\n}\n","/** @format */\nimport React, { Component } from \"react\";\nimport { File as NasFile } from \"../../../../interfaces/Folder\";\nimport { BaseFilePlugin, Render } from \"../../BaseFilePlugin\";\nimport * as path from \"path\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  Button,\n  DialogTitle,\n} from \"@material-ui/core\";\n\nimport JSONViewer from \"./JSONViewer\";\n\nexport class JSONFilePlugin extends BaseFilePlugin {\n  getPluginName(): string {\n    return \"json_file_viewer\";\n  }\n  shouldOpenNewPage(file: NasFile): boolean {\n    return false;\n  }\n  shouldShow(file: NasFile): boolean {\n    return [\".json\"].includes(path.extname(file.filename));\n  }\n\n  render(arg: Render): JSX.Element {\n    const { file, onClose } = arg;\n    return (\n      <Dialog open={true} onClose={() => onClose()} fullWidth>\n        <DialogTitle> {path.basename(file.filename)}</DialogTitle>\n        <DialogContent>\n          <JSONViewer src={file.file} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => onClose()}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { I18nProvider } from \"@lingui/react\";\n\nReactDOM.render(\n  <I18nProvider catalogs={{}}>\n    <App />\n  </I18nProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 244;"],"sourceRoot":""}